/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.controllers;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.verizon.m5gedge.ApiHelper;
import com.verizon.m5gedge.Server;
import com.verizon.m5gedge.exceptions.ApiException;
import com.verizon.m5gedge.exceptions.ConnectivityManagementResultException;
import com.verizon.m5gedge.exceptions.RestErrorResponseException;
import com.verizon.m5gedge.http.request.HttpMethod;
import com.verizon.m5gedge.http.response.ApiResponse;
import com.verizon.m5gedge.models.DeviceManagementResult;
import com.verizon.m5gedge.models.ProfileChangeStateRequest;
import com.verizon.m5gedge.models.RequestResponse;
import io.apimatic.core.ApiCall;
import io.apimatic.core.ErrorCase;
import io.apimatic.core.GlobalConfiguration;
import io.apimatic.coreinterfaces.http.request.ResponseClassType;
import java.io.IOException;
import java.util.concurrent.CompletableFuture;
import java.util.concurrent.CompletionException;

/**
 * This class lists all the endpoints of the groups.
 */
public final class EUICCDeviceProfileManagementController extends BaseController {

    /**
     * Initializes the controller.
     * @param globalConfig    Configurations added in client.
     */
    public EUICCDeviceProfileManagementController(GlobalConfiguration globalConfig) {
        super(globalConfig);
    }

    /**
     * Downloads an eUICC local profile to devices and enables the profile.
     * @param  body  Required parameter: Device Profile Query
     * @return    Returns the DeviceManagementResult wrapped in ApiResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    public ApiResponse<DeviceManagementResult> downloadLocalProfileToEnable(
            final ProfileChangeStateRequest body) throws ApiException, IOException {
        return prepareDownloadLocalProfileToEnableRequest(body).execute();
    }

    /**
     * Downloads an eUICC local profile to devices and enables the profile.
     * @param  body  Required parameter: Device Profile Query
     * @return    Returns the DeviceManagementResult wrapped in ApiResponse response from the API call
     */
    public CompletableFuture<ApiResponse<DeviceManagementResult>> downloadLocalProfileToEnableAsync(
            final ProfileChangeStateRequest body) {
        try { 
            return prepareDownloadLocalProfileToEnableRequest(body).executeAsync(); 
        } catch (Exception e) {  
            throw new CompletionException(e); 
        }
    }

    /**
     * Builds the ApiCall object for downloadLocalProfileToEnable.
     */
    private ApiCall<ApiResponse<DeviceManagementResult>, ApiException> prepareDownloadLocalProfileToEnableRequest(
            final ProfileChangeStateRequest body) throws JsonProcessingException, IOException {
        return new ApiCall.Builder<ApiResponse<DeviceManagementResult>, ApiException>()
                .globalConfig(getGlobalConfiguration())
                .requestBuilder(requestBuilder -> requestBuilder
                        .server(Server.THINGSPACE.value())
                        .path("/m2m/v1/devices/profile/actions/download_enable")
                        .bodyParam(param -> param.value(body))
                        .bodySerializer(() ->  ApiHelper.serialize(body))
                        .headerParam(param -> param.key("Content-Type")
                                .value("application/json").isRequired(false))
                        .headerParam(param -> param.key("accept").value("application/json"))
                        .withAuth(auth -> auth
                                .and(andAuth -> andAuth
                                        .add("thingspace_oauth")
                                        .add("VZ-M2M-Token")))
                        .httpMethod(HttpMethod.POST))
                .responseHandler(responseHandler -> responseHandler
                        .responseClassType(ResponseClassType.API_RESPONSE)
                        .apiResponseDeserializer(
                                response -> ApiHelper.deserialize(response, DeviceManagementResult.class))
                        .nullify404(false)
                        .localErrorCase("400",
                                 ErrorCase.setReason("Error response.",
                                (reason, context) -> new ConnectivityManagementResultException(reason, context)))
                        .globalErrorCase(GLOBAL_ERROR_CASES))
                .build();
    }

    /**
     * Downloads an eUICC local profile to devices and leaves the profile disabled.
     * @param  body  Required parameter: Device Profile Query
     * @return    Returns the DeviceManagementResult wrapped in ApiResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    public ApiResponse<DeviceManagementResult> downloadLocalProfileToDisable(
            final ProfileChangeStateRequest body) throws ApiException, IOException {
        return prepareDownloadLocalProfileToDisableRequest(body).execute();
    }

    /**
     * Downloads an eUICC local profile to devices and leaves the profile disabled.
     * @param  body  Required parameter: Device Profile Query
     * @return    Returns the DeviceManagementResult wrapped in ApiResponse response from the API call
     */
    public CompletableFuture<ApiResponse<DeviceManagementResult>> downloadLocalProfileToDisableAsync(
            final ProfileChangeStateRequest body) {
        try { 
            return prepareDownloadLocalProfileToDisableRequest(body).executeAsync(); 
        } catch (Exception e) {  
            throw new CompletionException(e); 
        }
    }

    /**
     * Builds the ApiCall object for downloadLocalProfileToDisable.
     */
    private ApiCall<ApiResponse<DeviceManagementResult>, ApiException> prepareDownloadLocalProfileToDisableRequest(
            final ProfileChangeStateRequest body) throws JsonProcessingException, IOException {
        return new ApiCall.Builder<ApiResponse<DeviceManagementResult>, ApiException>()
                .globalConfig(getGlobalConfiguration())
                .requestBuilder(requestBuilder -> requestBuilder
                        .server(Server.THINGSPACE.value())
                        .path("/m2m/v1/devices/profile/actions/download_disable")
                        .bodyParam(param -> param.value(body))
                        .bodySerializer(() ->  ApiHelper.serialize(body))
                        .headerParam(param -> param.key("Content-Type")
                                .value("application/json").isRequired(false))
                        .headerParam(param -> param.key("accept").value("application/json"))
                        .withAuth(auth -> auth
                                .and(andAuth -> andAuth
                                        .add("thingspace_oauth")
                                        .add("VZ-M2M-Token")))
                        .httpMethod(HttpMethod.POST))
                .responseHandler(responseHandler -> responseHandler
                        .responseClassType(ResponseClassType.API_RESPONSE)
                        .apiResponseDeserializer(
                                response -> ApiHelper.deserialize(response, DeviceManagementResult.class))
                        .nullify404(false)
                        .localErrorCase("400",
                                 ErrorCase.setReason("Error response.",
                                (reason, context) -> new ConnectivityManagementResultException(reason, context)))
                        .globalErrorCase(GLOBAL_ERROR_CASES))
                .build();
    }

    /**
     * Enable a local profile that has been downloaded to eUICC devices.
     * @param  body  Required parameter: Update state
     * @return    Returns the RequestResponse wrapped in ApiResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    public ApiResponse<RequestResponse> enableLocalProfile(
            final ProfileChangeStateRequest body) throws ApiException, IOException {
        return prepareEnableLocalProfileRequest(body).execute();
    }

    /**
     * Enable a local profile that has been downloaded to eUICC devices.
     * @param  body  Required parameter: Update state
     * @return    Returns the RequestResponse wrapped in ApiResponse response from the API call
     */
    public CompletableFuture<ApiResponse<RequestResponse>> enableLocalProfileAsync(
            final ProfileChangeStateRequest body) {
        try { 
            return prepareEnableLocalProfileRequest(body).executeAsync(); 
        } catch (Exception e) {  
            throw new CompletionException(e); 
        }
    }

    /**
     * Builds the ApiCall object for enableLocalProfile.
     */
    private ApiCall<ApiResponse<RequestResponse>, ApiException> prepareEnableLocalProfileRequest(
            final ProfileChangeStateRequest body) throws JsonProcessingException, IOException {
        return new ApiCall.Builder<ApiResponse<RequestResponse>, ApiException>()
                .globalConfig(getGlobalConfiguration())
                .requestBuilder(requestBuilder -> requestBuilder
                        .server(Server.THINGSPACE.value())
                        .path("/m2m/v1/devices/profile/actions/enable")
                        .bodyParam(param -> param.value(body))
                        .bodySerializer(() ->  ApiHelper.serialize(body))
                        .headerParam(param -> param.key("Content-Type")
                                .value("application/json").isRequired(false))
                        .headerParam(param -> param.key("accept").value("application/json"))
                        .withAuth(auth -> auth
                                .and(andAuth -> andAuth
                                        .add("thingspace_oauth")
                                        .add("VZ-M2M-Token")))
                        .httpMethod(HttpMethod.POST))
                .responseHandler(responseHandler -> responseHandler
                        .responseClassType(ResponseClassType.API_RESPONSE)
                        .apiResponseDeserializer(
                                response -> ApiHelper.deserialize(response, RequestResponse.class))
                        .nullify404(false)
                        .localErrorCase("400",
                                 ErrorCase.setReason("Error Response",
                                (reason, context) -> new RestErrorResponseException(reason, context)))
                        .globalErrorCase(GLOBAL_ERROR_CASES))
                .build();
    }

    /**
     * Disable a local profile on eUICC devices. The default or boot profile will become the enabled
     * profile.
     * @param  body  Required parameter: Update state
     * @return    Returns the RequestResponse wrapped in ApiResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    public ApiResponse<RequestResponse> disableLocalProfile(
            final ProfileChangeStateRequest body) throws ApiException, IOException {
        return prepareDisableLocalProfileRequest(body).execute();
    }

    /**
     * Disable a local profile on eUICC devices. The default or boot profile will become the enabled
     * profile.
     * @param  body  Required parameter: Update state
     * @return    Returns the RequestResponse wrapped in ApiResponse response from the API call
     */
    public CompletableFuture<ApiResponse<RequestResponse>> disableLocalProfileAsync(
            final ProfileChangeStateRequest body) {
        try { 
            return prepareDisableLocalProfileRequest(body).executeAsync(); 
        } catch (Exception e) {  
            throw new CompletionException(e); 
        }
    }

    /**
     * Builds the ApiCall object for disableLocalProfile.
     */
    private ApiCall<ApiResponse<RequestResponse>, ApiException> prepareDisableLocalProfileRequest(
            final ProfileChangeStateRequest body) throws JsonProcessingException, IOException {
        return new ApiCall.Builder<ApiResponse<RequestResponse>, ApiException>()
                .globalConfig(getGlobalConfiguration())
                .requestBuilder(requestBuilder -> requestBuilder
                        .server(Server.THINGSPACE.value())
                        .path("/m2m/v1/devices/profile/actions/disable")
                        .bodyParam(param -> param.value(body))
                        .bodySerializer(() ->  ApiHelper.serialize(body))
                        .headerParam(param -> param.key("Content-Type")
                                .value("application/json").isRequired(false))
                        .headerParam(param -> param.key("accept").value("application/json"))
                        .withAuth(auth -> auth
                                .and(andAuth -> andAuth
                                        .add("thingspace_oauth")
                                        .add("VZ-M2M-Token")))
                        .httpMethod(HttpMethod.POST))
                .responseHandler(responseHandler -> responseHandler
                        .responseClassType(ResponseClassType.API_RESPONSE)
                        .apiResponseDeserializer(
                                response -> ApiHelper.deserialize(response, RequestResponse.class))
                        .nullify404(false)
                        .localErrorCase("400",
                                 ErrorCase.setReason("Error Response",
                                (reason, context) -> new RestErrorResponseException(reason, context)))
                        .globalErrorCase(GLOBAL_ERROR_CASES))
                .build();
    }

    /**
     * Delete a local profile from eUICC devices. If the local profile is enabled, it will first be
     * disabled and the boot or default profile will be enabled.
     * @param  body  Required parameter: Update state
     * @return    Returns the RequestResponse wrapped in ApiResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    public ApiResponse<RequestResponse> deleteLocalProfile(
            final ProfileChangeStateRequest body) throws ApiException, IOException {
        return prepareDeleteLocalProfileRequest(body).execute();
    }

    /**
     * Delete a local profile from eUICC devices. If the local profile is enabled, it will first be
     * disabled and the boot or default profile will be enabled.
     * @param  body  Required parameter: Update state
     * @return    Returns the RequestResponse wrapped in ApiResponse response from the API call
     */
    public CompletableFuture<ApiResponse<RequestResponse>> deleteLocalProfileAsync(
            final ProfileChangeStateRequest body) {
        try { 
            return prepareDeleteLocalProfileRequest(body).executeAsync(); 
        } catch (Exception e) {  
            throw new CompletionException(e); 
        }
    }

    /**
     * Builds the ApiCall object for deleteLocalProfile.
     */
    private ApiCall<ApiResponse<RequestResponse>, ApiException> prepareDeleteLocalProfileRequest(
            final ProfileChangeStateRequest body) throws JsonProcessingException, IOException {
        return new ApiCall.Builder<ApiResponse<RequestResponse>, ApiException>()
                .globalConfig(getGlobalConfiguration())
                .requestBuilder(requestBuilder -> requestBuilder
                        .server(Server.THINGSPACE.value())
                        .path("/m2m/v1/devices/profile/actions/delete")
                        .bodyParam(param -> param.value(body))
                        .bodySerializer(() ->  ApiHelper.serialize(body))
                        .headerParam(param -> param.key("Content-Type")
                                .value("application/json").isRequired(false))
                        .headerParam(param -> param.key("accept").value("application/json"))
                        .withAuth(auth -> auth
                                .and(andAuth -> andAuth
                                        .add("thingspace_oauth")
                                        .add("VZ-M2M-Token")))
                        .httpMethod(HttpMethod.POST))
                .responseHandler(responseHandler -> responseHandler
                        .responseClassType(ResponseClassType.API_RESPONSE)
                        .apiResponseDeserializer(
                                response -> ApiHelper.deserialize(response, RequestResponse.class))
                        .nullify404(false)
                        .localErrorCase("400",
                                 ErrorCase.setReason("Error Response",
                                (reason, context) -> new RestErrorResponseException(reason, context)))
                        .globalErrorCase(GLOBAL_ERROR_CASES))
                .build();
    }
}