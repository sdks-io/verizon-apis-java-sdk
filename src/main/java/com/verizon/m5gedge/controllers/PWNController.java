/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.controllers;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.verizon.m5gedge.ApiHelper;
import com.verizon.m5gedge.Server;
import com.verizon.m5gedge.exceptions.ApiException;
import com.verizon.m5gedge.http.request.HttpMethod;
import com.verizon.m5gedge.http.response.ApiResponse;
import com.verizon.m5gedge.models.ChangePWNDeviceIpaddressRequest;
import com.verizon.m5gedge.models.ChangePWNDeviceIpaddressResponse;
import com.verizon.m5gedge.models.ChangePWNDeviceProfileRequest;
import com.verizon.m5gedge.models.ChangePWNDeviceProfileResponse;
import com.verizon.m5gedge.models.ChangePWNDeviceStateActivateRequest;
import com.verizon.m5gedge.models.ChangePWNDeviceStateDeactivateRequest;
import com.verizon.m5gedge.models.ChangePWNDeviceStateResponse;
import com.verizon.m5gedge.models.GetPWNPerformanceConsentResponse;
import com.verizon.m5gedge.models.KPIInfoList;
import com.verizon.m5gedge.models.PWNProfileList;
import io.apimatic.core.ApiCall;
import io.apimatic.core.GlobalConfiguration;
import io.apimatic.coreinterfaces.http.request.ResponseClassType;
import java.io.IOException;
import java.util.concurrent.CompletableFuture;
import java.util.concurrent.CompletionException;

/**
 * This class lists all the endpoints of the groups.
 */
public final class PWNController extends BaseController {

    /**
     * Initializes the controller.
     * @param globalConfig    Configurations added in client.
     */
    public PWNController(GlobalConfiguration globalConfig) {
        super(globalConfig);
    }

    /**
     * @param  aname  Required parameter: Account name.
     * @return    Returns the KPIInfoList wrapped in ApiResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    public ApiResponse<KPIInfoList> kPIList(
            final String aname) throws ApiException, IOException {
        return prepareKPIListRequest(aname).execute();
    }

    /**
     * @param  aname  Required parameter: Account name.
     * @return    Returns the KPIInfoList wrapped in ApiResponse response from the API call
     */
    public CompletableFuture<ApiResponse<KPIInfoList>> kPIListAsync(
            final String aname) {
        try { 
            return prepareKPIListRequest(aname).executeAsync(); 
        } catch (Exception e) {  
            throw new CompletionException(e); 
        }
    }

    /**
     * Builds the ApiCall object for kPIList.
     */
    private ApiCall<ApiResponse<KPIInfoList>, ApiException> prepareKPIListRequest(
            final String aname) throws IOException {
        return new ApiCall.Builder<ApiResponse<KPIInfoList>, ApiException>()
                .globalConfig(getGlobalConfiguration())
                .requestBuilder(requestBuilder -> requestBuilder
                        .server(Server.THINGSPACE.value())
                        .path("/m2m/v1/devices/pwn/kpi/list/{aname}")
                        .templateParam(param -> param.key("aname").value(aname)
                                .shouldEncode(true))
                        .headerParam(param -> param.key("accept").value("application/json"))
                        .withAuth(auth -> auth
                                .and(andAuth -> andAuth
                                        .add("thingspace_oauth")
                                        .add("VZ-M2M-Token")))
                        .httpMethod(HttpMethod.GET))
                .responseHandler(responseHandler -> responseHandler
                        .responseClassType(ResponseClassType.API_RESPONSE)
                        .apiResponseDeserializer(
                                response -> ApiHelper.deserialize(response, KPIInfoList.class))
                        .nullify404(false)
                        .globalErrorCase(GLOBAL_ERROR_CASES))
                .build();
    }

    /**
     * @param  aname  Required parameter: Account name.
     * @return    Returns the PWNProfileList wrapped in ApiResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    public ApiResponse<PWNProfileList> getProfileList(
            final String aname) throws ApiException, IOException {
        return prepareGetProfileListRequest(aname).execute();
    }

    /**
     * @param  aname  Required parameter: Account name.
     * @return    Returns the PWNProfileList wrapped in ApiResponse response from the API call
     */
    public CompletableFuture<ApiResponse<PWNProfileList>> getProfileListAsync(
            final String aname) {
        try { 
            return prepareGetProfileListRequest(aname).executeAsync(); 
        } catch (Exception e) {  
            throw new CompletionException(e); 
        }
    }

    /**
     * Builds the ApiCall object for getProfileList.
     */
    private ApiCall<ApiResponse<PWNProfileList>, ApiException> prepareGetProfileListRequest(
            final String aname) throws IOException {
        return new ApiCall.Builder<ApiResponse<PWNProfileList>, ApiException>()
                .globalConfig(getGlobalConfiguration())
                .requestBuilder(requestBuilder -> requestBuilder
                        .server(Server.THINGSPACE.value())
                        .path("/m2m/v1/devices/pwn/profiles/list/{aname}")
                        .templateParam(param -> param.key("aname").value(aname)
                                .shouldEncode(true))
                        .headerParam(param -> param.key("accept").value("application/json"))
                        .withAuth(auth -> auth
                                .and(andAuth -> andAuth
                                        .add("thingspace_oauth")
                                        .add("VZ-M2M-Token")))
                        .httpMethod(HttpMethod.GET))
                .responseHandler(responseHandler -> responseHandler
                        .responseClassType(ResponseClassType.API_RESPONSE)
                        .apiResponseDeserializer(
                                response -> ApiHelper.deserialize(response, PWNProfileList.class))
                        .nullify404(false)
                        .globalErrorCase(GLOBAL_ERROR_CASES))
                .build();
    }

    /**
     * @param  body  Required parameter: Example:
     * @return    Returns the ChangePWNDeviceStateResponse wrapped in ApiResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    public ApiResponse<ChangePWNDeviceStateResponse> changePWNDeviceStateActivate(
            final ChangePWNDeviceStateActivateRequest body) throws ApiException, IOException {
        return prepareChangePWNDeviceStateActivateRequest(body).execute();
    }

    /**
     * @param  body  Required parameter: Example:
     * @return    Returns the ChangePWNDeviceStateResponse wrapped in ApiResponse response from the API call
     */
    public CompletableFuture<ApiResponse<ChangePWNDeviceStateResponse>> changePWNDeviceStateActivateAsync(
            final ChangePWNDeviceStateActivateRequest body) {
        try { 
            return prepareChangePWNDeviceStateActivateRequest(body).executeAsync(); 
        } catch (Exception e) {  
            throw new CompletionException(e); 
        }
    }

    /**
     * Builds the ApiCall object for changePWNDeviceStateActivate.
     */
    private ApiCall<ApiResponse<ChangePWNDeviceStateResponse>, ApiException> prepareChangePWNDeviceStateActivateRequest(
            final ChangePWNDeviceStateActivateRequest body) throws JsonProcessingException, IOException {
        return new ApiCall.Builder<ApiResponse<ChangePWNDeviceStateResponse>, ApiException>()
                .globalConfig(getGlobalConfiguration())
                .requestBuilder(requestBuilder -> requestBuilder
                        .server(Server.THINGSPACE.value())
                        .path("/m2m/v1/devices/pwn/actions/state/activate")
                        .bodyParam(param -> param.value(body))
                        .bodySerializer(() ->  ApiHelper.serialize(body))
                        .headerParam(param -> param.key("Content-Type")
                                .value("application/json").isRequired(false))
                        .headerParam(param -> param.key("accept").value("application/json"))
                        .withAuth(auth -> auth
                                .and(andAuth -> andAuth
                                        .add("thingspace_oauth")
                                        .add("VZ-M2M-Token")))
                        .httpMethod(HttpMethod.POST))
                .responseHandler(responseHandler -> responseHandler
                        .responseClassType(ResponseClassType.API_RESPONSE)
                        .apiResponseDeserializer(
                                response -> ApiHelper.deserialize(response, ChangePWNDeviceStateResponse.class))
                        .nullify404(false)
                        .globalErrorCase(GLOBAL_ERROR_CASES))
                .build();
    }

    /**
     * @param  body  Required parameter: Example:
     * @return    Returns the ChangePWNDeviceStateResponse wrapped in ApiResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    public ApiResponse<ChangePWNDeviceStateResponse> changePWNDeviceStateDeactivate(
            final ChangePWNDeviceStateDeactivateRequest body) throws ApiException, IOException {
        return prepareChangePWNDeviceStateDeactivateRequest(body).execute();
    }

    /**
     * @param  body  Required parameter: Example:
     * @return    Returns the ChangePWNDeviceStateResponse wrapped in ApiResponse response from the API call
     */
    public CompletableFuture<ApiResponse<ChangePWNDeviceStateResponse>> changePWNDeviceStateDeactivateAsync(
            final ChangePWNDeviceStateDeactivateRequest body) {
        try { 
            return prepareChangePWNDeviceStateDeactivateRequest(body).executeAsync(); 
        } catch (Exception e) {  
            throw new CompletionException(e); 
        }
    }

    /**
     * Builds the ApiCall object for changePWNDeviceStateDeactivate.
     */
    private ApiCall<ApiResponse<ChangePWNDeviceStateResponse>, ApiException> prepareChangePWNDeviceStateDeactivateRequest(
            final ChangePWNDeviceStateDeactivateRequest body) throws JsonProcessingException, IOException {
        return new ApiCall.Builder<ApiResponse<ChangePWNDeviceStateResponse>, ApiException>()
                .globalConfig(getGlobalConfiguration())
                .requestBuilder(requestBuilder -> requestBuilder
                        .server(Server.THINGSPACE.value())
                        .path("/m2m/v1/devices/pwn/actions/state/deactivate")
                        .bodyParam(param -> param.value(body))
                        .bodySerializer(() ->  ApiHelper.serialize(body))
                        .headerParam(param -> param.key("Content-Type")
                                .value("application/json").isRequired(false))
                        .headerParam(param -> param.key("accept").value("application/json"))
                        .withAuth(auth -> auth
                                .and(andAuth -> andAuth
                                        .add("thingspace_oauth")
                                        .add("VZ-M2M-Token")))
                        .httpMethod(HttpMethod.POST))
                .responseHandler(responseHandler -> responseHandler
                        .responseClassType(ResponseClassType.API_RESPONSE)
                        .apiResponseDeserializer(
                                response -> ApiHelper.deserialize(response, ChangePWNDeviceStateResponse.class))
                        .nullify404(false)
                        .globalErrorCase(GLOBAL_ERROR_CASES))
                .build();
    }

    /**
     * @param  body  Required parameter: Example:
     * @return    Returns the ChangePWNDeviceProfileResponse wrapped in ApiResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    public ApiResponse<ChangePWNDeviceProfileResponse> changePWNDeviceProfile(
            final ChangePWNDeviceProfileRequest body) throws ApiException, IOException {
        return prepareChangePWNDeviceProfileRequest(body).execute();
    }

    /**
     * @param  body  Required parameter: Example:
     * @return    Returns the ChangePWNDeviceProfileResponse wrapped in ApiResponse response from the API call
     */
    public CompletableFuture<ApiResponse<ChangePWNDeviceProfileResponse>> changePWNDeviceProfileAsync(
            final ChangePWNDeviceProfileRequest body) {
        try { 
            return prepareChangePWNDeviceProfileRequest(body).executeAsync(); 
        } catch (Exception e) {  
            throw new CompletionException(e); 
        }
    }

    /**
     * Builds the ApiCall object for changePWNDeviceProfile.
     */
    private ApiCall<ApiResponse<ChangePWNDeviceProfileResponse>, ApiException> prepareChangePWNDeviceProfileRequest(
            final ChangePWNDeviceProfileRequest body) throws JsonProcessingException, IOException {
        return new ApiCall.Builder<ApiResponse<ChangePWNDeviceProfileResponse>, ApiException>()
                .globalConfig(getGlobalConfiguration())
                .requestBuilder(requestBuilder -> requestBuilder
                        .server(Server.THINGSPACE.value())
                        .path("/m2m/v1/devices/pwn/actions/profile")
                        .bodyParam(param -> param.value(body))
                        .bodySerializer(() ->  ApiHelper.serialize(body))
                        .headerParam(param -> param.key("Content-Type")
                                .value("application/json").isRequired(false))
                        .headerParam(param -> param.key("accept").value("application/json"))
                        .withAuth(auth -> auth
                                .and(andAuth -> andAuth
                                        .add("thingspace_oauth")
                                        .add("VZ-M2M-Token")))
                        .httpMethod(HttpMethod.POST))
                .responseHandler(responseHandler -> responseHandler
                        .responseClassType(ResponseClassType.API_RESPONSE)
                        .apiResponseDeserializer(
                                response -> ApiHelper.deserialize(response, ChangePWNDeviceProfileResponse.class))
                        .nullify404(false)
                        .globalErrorCase(GLOBAL_ERROR_CASES))
                .build();
    }

    /**
     * @param  body  Required parameter: Example:
     * @return    Returns the ChangePWNDeviceIpaddressResponse wrapped in ApiResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    public ApiResponse<ChangePWNDeviceIpaddressResponse> changePWNDeviceIpaddress(
            final ChangePWNDeviceIpaddressRequest body) throws ApiException, IOException {
        return prepareChangePWNDeviceIpaddressRequest(body).execute();
    }

    /**
     * @param  body  Required parameter: Example:
     * @return    Returns the ChangePWNDeviceIpaddressResponse wrapped in ApiResponse response from the API call
     */
    public CompletableFuture<ApiResponse<ChangePWNDeviceIpaddressResponse>> changePWNDeviceIpaddressAsync(
            final ChangePWNDeviceIpaddressRequest body) {
        try { 
            return prepareChangePWNDeviceIpaddressRequest(body).executeAsync(); 
        } catch (Exception e) {  
            throw new CompletionException(e); 
        }
    }

    /**
     * Builds the ApiCall object for changePWNDeviceIpaddress.
     */
    private ApiCall<ApiResponse<ChangePWNDeviceIpaddressResponse>, ApiException> prepareChangePWNDeviceIpaddressRequest(
            final ChangePWNDeviceIpaddressRequest body) throws JsonProcessingException, IOException {
        return new ApiCall.Builder<ApiResponse<ChangePWNDeviceIpaddressResponse>, ApiException>()
                .globalConfig(getGlobalConfiguration())
                .requestBuilder(requestBuilder -> requestBuilder
                        .server(Server.THINGSPACE.value())
                        .path("/m2m/v1/devices/pwn/actions/ipaddress")
                        .bodyParam(param -> param.value(body))
                        .bodySerializer(() ->  ApiHelper.serialize(body))
                        .headerParam(param -> param.key("Content-Type")
                                .value("application/json").isRequired(false))
                        .headerParam(param -> param.key("accept").value("application/json"))
                        .withAuth(auth -> auth
                                .and(andAuth -> andAuth
                                        .add("thingspace_oauth")
                                        .add("VZ-M2M-Token")))
                        .httpMethod(HttpMethod.PUT))
                .responseHandler(responseHandler -> responseHandler
                        .responseClassType(ResponseClassType.API_RESPONSE)
                        .apiResponseDeserializer(
                                response -> ApiHelper.deserialize(response, ChangePWNDeviceIpaddressResponse.class))
                        .nullify404(false)
                        .globalErrorCase(GLOBAL_ERROR_CASES))
                .build();
    }

    /**
     * @param  aname  Required parameter: Account name.
     * @return    Returns the GetPWNPerformanceConsentResponse wrapped in ApiResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    public ApiResponse<GetPWNPerformanceConsentResponse> getPWNPerformanceConsent(
            final String aname) throws ApiException, IOException {
        return prepareGetPWNPerformanceConsentRequest(aname).execute();
    }

    /**
     * @param  aname  Required parameter: Account name.
     * @return    Returns the GetPWNPerformanceConsentResponse wrapped in ApiResponse response from the API call
     */
    public CompletableFuture<ApiResponse<GetPWNPerformanceConsentResponse>> getPWNPerformanceConsentAsync(
            final String aname) {
        try { 
            return prepareGetPWNPerformanceConsentRequest(aname).executeAsync(); 
        } catch (Exception e) {  
            throw new CompletionException(e); 
        }
    }

    /**
     * Builds the ApiCall object for getPWNPerformanceConsent.
     */
    private ApiCall<ApiResponse<GetPWNPerformanceConsentResponse>, ApiException> prepareGetPWNPerformanceConsentRequest(
            final String aname) throws IOException {
        return new ApiCall.Builder<ApiResponse<GetPWNPerformanceConsentResponse>, ApiException>()
                .globalConfig(getGlobalConfiguration())
                .requestBuilder(requestBuilder -> requestBuilder
                        .server(Server.THINGSPACE.value())
                        .path("/m2m/v1/devices/pwn/performance/consent/{aname}")
                        .templateParam(param -> param.key("aname").value(aname)
                                .shouldEncode(true))
                        .headerParam(param -> param.key("accept").value("application/json"))
                        .withAuth(auth -> auth
                                .and(andAuth -> andAuth
                                        .add("thingspace_oauth")
                                        .add("VZ-M2M-Token")))
                        .httpMethod(HttpMethod.GET))
                .responseHandler(responseHandler -> responseHandler
                        .responseClassType(ResponseClassType.API_RESPONSE)
                        .apiResponseDeserializer(
                                response -> ApiHelper.deserialize(response, GetPWNPerformanceConsentResponse.class))
                        .nullify404(false)
                        .globalErrorCase(GLOBAL_ERROR_CASES))
                .build();
    }
}