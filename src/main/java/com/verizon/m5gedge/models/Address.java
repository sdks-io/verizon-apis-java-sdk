/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for Address type.
 */
public class Address {
    private String addressLine1;
    private String addressLine2;
    private String city;
    private String state;
    private String zIp;
    private String zIp4;
    private String country;
    private String phone;
    private String phoneType;
    private String emailAddress;

    /**
     * Default constructor.
     */
    public Address() {
    }

    /**
     * Initialization constructor.
     * @param  addressLine1  String value for addressLine1.
     * @param  city  String value for city.
     * @param  state  String value for state.
     * @param  zIp  String value for zIp.
     * @param  country  String value for country.
     * @param  addressLine2  String value for addressLine2.
     * @param  zIp4  String value for zIp4.
     * @param  phone  String value for phone.
     * @param  phoneType  String value for phoneType.
     * @param  emailAddress  String value for emailAddress.
     */
    public Address(
            String addressLine1,
            String city,
            String state,
            String zIp,
            String country,
            String addressLine2,
            String zIp4,
            String phone,
            String phoneType,
            String emailAddress) {
        this.addressLine1 = addressLine1;
        this.addressLine2 = addressLine2;
        this.city = city;
        this.state = state;
        this.zIp = zIp;
        this.zIp4 = zIp4;
        this.country = country;
        this.phone = phone;
        this.phoneType = phoneType;
        this.emailAddress = emailAddress;
    }

    /**
     * Getter for AddressLine1.
     * The street address for the line's primary place of use. This must be a physical address for
     * taxation; it cannot be a P.O. box.
     * @return Returns the String
     */
    @JsonGetter("addressLine1")
    public String getAddressLine1() {
        return addressLine1;
    }

    /**
     * Setter for AddressLine1.
     * The street address for the line's primary place of use. This must be a physical address for
     * taxation; it cannot be a P.O. box.
     * @param addressLine1 Value for String
     */
    @JsonSetter("addressLine1")
    public void setAddressLine1(String addressLine1) {
        this.addressLine1 = addressLine1;
    }

    /**
     * Getter for AddressLine2.
     * Optional additional street address information.
     * @return Returns the String
     */
    @JsonGetter("addressLine2")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAddressLine2() {
        return addressLine2;
    }

    /**
     * Setter for AddressLine2.
     * Optional additional street address information.
     * @param addressLine2 Value for String
     */
    @JsonSetter("addressLine2")
    public void setAddressLine2(String addressLine2) {
        this.addressLine2 = addressLine2;
    }

    /**
     * Getter for City.
     * The city for the line's primary place of use.
     * @return Returns the String
     */
    @JsonGetter("city")
    public String getCity() {
        return city;
    }

    /**
     * Setter for City.
     * The city for the line's primary place of use.
     * @param city Value for String
     */
    @JsonSetter("city")
    public void setCity(String city) {
        this.city = city;
    }

    /**
     * Getter for State.
     * The state for the line's primary place of use.
     * @return Returns the String
     */
    @JsonGetter("state")
    public String getState() {
        return state;
    }

    /**
     * Setter for State.
     * The state for the line's primary place of use.
     * @param state Value for String
     */
    @JsonSetter("state")
    public void setState(String state) {
        this.state = state;
    }

    /**
     * Getter for ZIp.
     * The ZIP code for the line's primary place of use.
     * @return Returns the String
     */
    @JsonGetter("zip")
    public String getZIp() {
        return zIp;
    }

    /**
     * Setter for ZIp.
     * The ZIP code for the line's primary place of use.
     * @param zIp Value for String
     */
    @JsonSetter("zip")
    public void setZIp(String zIp) {
        this.zIp = zIp;
    }

    /**
     * Getter for ZIp4.
     * The ZIP+4 for the line's primary place of use.
     * @return Returns the String
     */
    @JsonGetter("zip4")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getZIp4() {
        return zIp4;
    }

    /**
     * Setter for ZIp4.
     * The ZIP+4 for the line's primary place of use.
     * @param zIp4 Value for String
     */
    @JsonSetter("zip4")
    public void setZIp4(String zIp4) {
        this.zIp4 = zIp4;
    }

    /**
     * Getter for Country.
     * Either “US” or “USA” for the country of the line's primary place of use.
     * @return Returns the String
     */
    @JsonGetter("country")
    public String getCountry() {
        return country;
    }

    /**
     * Setter for Country.
     * Either “US” or “USA” for the country of the line's primary place of use.
     * @param country Value for String
     */
    @JsonSetter("country")
    public void setCountry(String country) {
        this.country = country;
    }

    /**
     * Getter for Phone.
     * A phone number where the customer can be reached.
     * @return Returns the String
     */
    @JsonGetter("phone")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPhone() {
        return phone;
    }

    /**
     * Setter for Phone.
     * A phone number where the customer can be reached.
     * @param phone Value for String
     */
    @JsonSetter("phone")
    public void setPhone(String phone) {
        this.phone = phone;
    }

    /**
     * Getter for PhoneType.
     * A single letter to indicate the customer phone type.
     * @return Returns the String
     */
    @JsonGetter("phoneType")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPhoneType() {
        return phoneType;
    }

    /**
     * Setter for PhoneType.
     * A single letter to indicate the customer phone type.
     * @param phoneType Value for String
     */
    @JsonSetter("phoneType")
    public void setPhoneType(String phoneType) {
        this.phoneType = phoneType;
    }

    /**
     * Getter for EmailAddress.
     * An email address for the customer.
     * @return Returns the String
     */
    @JsonGetter("emailAddress")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getEmailAddress() {
        return emailAddress;
    }

    /**
     * Setter for EmailAddress.
     * An email address for the customer.
     * @param emailAddress Value for String
     */
    @JsonSetter("emailAddress")
    public void setEmailAddress(String emailAddress) {
        this.emailAddress = emailAddress;
    }

    /**
     * Converts this Address into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Address [" + "addressLine1=" + addressLine1 + ", city=" + city + ", state=" + state
                + ", zIp=" + zIp + ", country=" + country + ", addressLine2=" + addressLine2
                + ", zIp4=" + zIp4 + ", phone=" + phone + ", phoneType=" + phoneType
                + ", emailAddress=" + emailAddress + "]";
    }

    /**
     * Builds a new {@link Address.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Address.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(addressLine1, city, state, zIp, country)
                .addressLine2(getAddressLine2())
                .zIp4(getZIp4())
                .phone(getPhone())
                .phoneType(getPhoneType())
                .emailAddress(getEmailAddress());
        return builder;
    }

    /**
     * Class to build instances of {@link Address}.
     */
    public static class Builder {
        private String addressLine1;
        private String city;
        private String state;
        private String zIp;
        private String country;
        private String addressLine2;
        private String zIp4;
        private String phone;
        private String phoneType;
        private String emailAddress;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  addressLine1  String value for addressLine1.
         * @param  city  String value for city.
         * @param  state  String value for state.
         * @param  zIp  String value for zIp.
         * @param  country  String value for country.
         */
        public Builder(String addressLine1, String city, String state, String zIp, String country) {
            this.addressLine1 = addressLine1;
            this.city = city;
            this.state = state;
            this.zIp = zIp;
            this.country = country;
        }

        /**
         * Setter for addressLine1.
         * @param  addressLine1  String value for addressLine1.
         * @return Builder
         */
        public Builder addressLine1(String addressLine1) {
            this.addressLine1 = addressLine1;
            return this;
        }

        /**
         * Setter for city.
         * @param  city  String value for city.
         * @return Builder
         */
        public Builder city(String city) {
            this.city = city;
            return this;
        }

        /**
         * Setter for state.
         * @param  state  String value for state.
         * @return Builder
         */
        public Builder state(String state) {
            this.state = state;
            return this;
        }

        /**
         * Setter for zIp.
         * @param  zIp  String value for zIp.
         * @return Builder
         */
        public Builder zIp(String zIp) {
            this.zIp = zIp;
            return this;
        }

        /**
         * Setter for country.
         * @param  country  String value for country.
         * @return Builder
         */
        public Builder country(String country) {
            this.country = country;
            return this;
        }

        /**
         * Setter for addressLine2.
         * @param  addressLine2  String value for addressLine2.
         * @return Builder
         */
        public Builder addressLine2(String addressLine2) {
            this.addressLine2 = addressLine2;
            return this;
        }

        /**
         * Setter for zIp4.
         * @param  zIp4  String value for zIp4.
         * @return Builder
         */
        public Builder zIp4(String zIp4) {
            this.zIp4 = zIp4;
            return this;
        }

        /**
         * Setter for phone.
         * @param  phone  String value for phone.
         * @return Builder
         */
        public Builder phone(String phone) {
            this.phone = phone;
            return this;
        }

        /**
         * Setter for phoneType.
         * @param  phoneType  String value for phoneType.
         * @return Builder
         */
        public Builder phoneType(String phoneType) {
            this.phoneType = phoneType;
            return this;
        }

        /**
         * Setter for emailAddress.
         * @param  emailAddress  String value for emailAddress.
         * @return Builder
         */
        public Builder emailAddress(String emailAddress) {
            this.emailAddress = emailAddress;
            return this;
        }

        /**
         * Builds a new {@link Address} object using the set fields.
         * @return {@link Address}
         */
        public Address build() {
            return new Address(addressLine1, city, state, zIp, country, addressLine2, zIp4, phone,
                    phoneType, emailAddress);
        }
    }
}
