/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for AnomalyTriggerRequest type.
 */
public class AnomalyTriggerRequest {
    private String accountNames;
    private Boolean includeAbnormal;
    private Boolean includeVeryAbnormal;
    private Boolean includeUnderExpectedUsage;
    private Boolean includeOverExpectedUsage;

    /**
     * Default constructor.
     */
    public AnomalyTriggerRequest() {
    }

    /**
     * Initialization constructor.
     * @param  accountNames  String value for accountNames.
     * @param  includeAbnormal  Boolean value for includeAbnormal.
     * @param  includeVeryAbnormal  Boolean value for includeVeryAbnormal.
     * @param  includeUnderExpectedUsage  Boolean value for includeUnderExpectedUsage.
     * @param  includeOverExpectedUsage  Boolean value for includeOverExpectedUsage.
     */
    public AnomalyTriggerRequest(
            String accountNames,
            Boolean includeAbnormal,
            Boolean includeVeryAbnormal,
            Boolean includeUnderExpectedUsage,
            Boolean includeOverExpectedUsage) {
        this.accountNames = accountNames;
        this.includeAbnormal = includeAbnormal;
        this.includeVeryAbnormal = includeVeryAbnormal;
        this.includeUnderExpectedUsage = includeUnderExpectedUsage;
        this.includeOverExpectedUsage = includeOverExpectedUsage;
    }

    /**
     * Getter for AccountNames.
     * The Verizon billing accounts associated with the anomaly triggers for this trigger to be
     * active for devices in those accounts. An account name is usually numeric, and must include
     * any leading zeros.
     * @return Returns the String
     */
    @JsonGetter("accountNames")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccountNames() {
        return accountNames;
    }

    /**
     * Setter for AccountNames.
     * The Verizon billing accounts associated with the anomaly triggers for this trigger to be
     * active for devices in those accounts. An account name is usually numeric, and must include
     * any leading zeros.
     * @param accountNames Value for String
     */
    @JsonSetter("accountNames")
    public void setAccountNames(String accountNames) {
        this.accountNames = accountNames;
    }

    /**
     * Getter for IncludeAbnormal.
     * Whether or not to include anomalies classified as 'abnormal'.&lt;br /&gt;true&lt;br /&gt;false&lt;br
     * /&gt;Classification is set as part of ThingSpace Intelligence anomaly detection settings.
     * @return Returns the Boolean
     */
    @JsonGetter("includeAbnormal")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getIncludeAbnormal() {
        return includeAbnormal;
    }

    /**
     * Setter for IncludeAbnormal.
     * Whether or not to include anomalies classified as 'abnormal'.&lt;br /&gt;true&lt;br /&gt;false&lt;br
     * /&gt;Classification is set as part of ThingSpace Intelligence anomaly detection settings.
     * @param includeAbnormal Value for Boolean
     */
    @JsonSetter("includeAbnormal")
    public void setIncludeAbnormal(Boolean includeAbnormal) {
        this.includeAbnormal = includeAbnormal;
    }

    /**
     * Getter for IncludeVeryAbnormal.
     * Whether or not to include anomalies classified as 'very abnormal'.&lt;br /&gt;true&lt;br /&gt;false&lt;br
     * /&gt;Classification is set as part of ThingSpace Intelligence anomaly detection settings.
     * @return Returns the Boolean
     */
    @JsonGetter("includeVeryAbnormal")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getIncludeVeryAbnormal() {
        return includeVeryAbnormal;
    }

    /**
     * Setter for IncludeVeryAbnormal.
     * Whether or not to include anomalies classified as 'very abnormal'.&lt;br /&gt;true&lt;br /&gt;false&lt;br
     * /&gt;Classification is set as part of ThingSpace Intelligence anomaly detection settings.
     * @param includeVeryAbnormal Value for Boolean
     */
    @JsonSetter("includeVeryAbnormal")
    public void setIncludeVeryAbnormal(Boolean includeVeryAbnormal) {
        this.includeVeryAbnormal = includeVeryAbnormal;
    }

    /**
     * Getter for IncludeUnderExpectedUsage.
     * Whether or not to include anomalies that are directionally under the expected usage.&lt;br
     * /&gt;true&lt;br /&gt;false.
     * @return Returns the Boolean
     */
    @JsonGetter("includeUnderExpectedUsage")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getIncludeUnderExpectedUsage() {
        return includeUnderExpectedUsage;
    }

    /**
     * Setter for IncludeUnderExpectedUsage.
     * Whether or not to include anomalies that are directionally under the expected usage.&lt;br
     * /&gt;true&lt;br /&gt;false.
     * @param includeUnderExpectedUsage Value for Boolean
     */
    @JsonSetter("includeUnderExpectedUsage")
    public void setIncludeUnderExpectedUsage(Boolean includeUnderExpectedUsage) {
        this.includeUnderExpectedUsage = includeUnderExpectedUsage;
    }

    /**
     * Getter for IncludeOverExpectedUsage.
     * Whether or not to include anomalies that are directionally over the expected usage. &lt;br
     * /&gt;true&lt;br /&gt;false.
     * @return Returns the Boolean
     */
    @JsonGetter("includeOverExpectedUsage")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getIncludeOverExpectedUsage() {
        return includeOverExpectedUsage;
    }

    /**
     * Setter for IncludeOverExpectedUsage.
     * Whether or not to include anomalies that are directionally over the expected usage. &lt;br
     * /&gt;true&lt;br /&gt;false.
     * @param includeOverExpectedUsage Value for Boolean
     */
    @JsonSetter("includeOverExpectedUsage")
    public void setIncludeOverExpectedUsage(Boolean includeOverExpectedUsage) {
        this.includeOverExpectedUsage = includeOverExpectedUsage;
    }

    /**
     * Converts this AnomalyTriggerRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "AnomalyTriggerRequest [" + "accountNames=" + accountNames + ", includeAbnormal="
                + includeAbnormal + ", includeVeryAbnormal=" + includeVeryAbnormal
                + ", includeUnderExpectedUsage=" + includeUnderExpectedUsage
                + ", includeOverExpectedUsage=" + includeOverExpectedUsage + "]";
    }

    /**
     * Builds a new {@link AnomalyTriggerRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link AnomalyTriggerRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .accountNames(getAccountNames())
                .includeAbnormal(getIncludeAbnormal())
                .includeVeryAbnormal(getIncludeVeryAbnormal())
                .includeUnderExpectedUsage(getIncludeUnderExpectedUsage())
                .includeOverExpectedUsage(getIncludeOverExpectedUsage());
        return builder;
    }

    /**
     * Class to build instances of {@link AnomalyTriggerRequest}.
     */
    public static class Builder {
        private String accountNames;
        private Boolean includeAbnormal;
        private Boolean includeVeryAbnormal;
        private Boolean includeUnderExpectedUsage;
        private Boolean includeOverExpectedUsage;



        /**
         * Setter for accountNames.
         * @param  accountNames  String value for accountNames.
         * @return Builder
         */
        public Builder accountNames(String accountNames) {
            this.accountNames = accountNames;
            return this;
        }

        /**
         * Setter for includeAbnormal.
         * @param  includeAbnormal  Boolean value for includeAbnormal.
         * @return Builder
         */
        public Builder includeAbnormal(Boolean includeAbnormal) {
            this.includeAbnormal = includeAbnormal;
            return this;
        }

        /**
         * Setter for includeVeryAbnormal.
         * @param  includeVeryAbnormal  Boolean value for includeVeryAbnormal.
         * @return Builder
         */
        public Builder includeVeryAbnormal(Boolean includeVeryAbnormal) {
            this.includeVeryAbnormal = includeVeryAbnormal;
            return this;
        }

        /**
         * Setter for includeUnderExpectedUsage.
         * @param  includeUnderExpectedUsage  Boolean value for includeUnderExpectedUsage.
         * @return Builder
         */
        public Builder includeUnderExpectedUsage(Boolean includeUnderExpectedUsage) {
            this.includeUnderExpectedUsage = includeUnderExpectedUsage;
            return this;
        }

        /**
         * Setter for includeOverExpectedUsage.
         * @param  includeOverExpectedUsage  Boolean value for includeOverExpectedUsage.
         * @return Builder
         */
        public Builder includeOverExpectedUsage(Boolean includeOverExpectedUsage) {
            this.includeOverExpectedUsage = includeOverExpectedUsage;
            return this;
        }

        /**
         * Builds a new {@link AnomalyTriggerRequest} object using the set fields.
         * @return {@link AnomalyTriggerRequest}
         */
        public AnomalyTriggerRequest build() {
            return new AnomalyTriggerRequest(accountNames, includeAbnormal, includeVeryAbnormal,
                    includeUnderExpectedUsage, includeOverExpectedUsage);
        }
    }
}
