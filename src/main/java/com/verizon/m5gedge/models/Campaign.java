/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.verizon.m5gedge.DateTimeHelper;
import java.time.LocalDate;
import java.util.List;

/**
 * This is a model class for Campaign type.
 */
public class Campaign {
    private String id;
    private String accountName;
    private String campaignName;
    private String firmwareName;
    private String firmwareFrom;
    private String firmwareTo;
    private String protocol;
    private String make;
    private String model;
    private LocalDate startDate;
    private LocalDate endDate;
    private List<V3TimeWindow> campaignTimeWindowList;
    private String status;
    private boolean autoAssignLicenseFlag;
    private boolean autoAddDevicesFlag;

    /**
     * Default constructor.
     */
    public Campaign() {
        protocol = "LWM2M";
    }

    /**
     * Initialization constructor.
     * @param  id  String value for id.
     * @param  accountName  String value for accountName.
     * @param  protocol  String value for protocol.
     * @param  make  String value for make.
     * @param  model  String value for model.
     * @param  startDate  LocalDate value for startDate.
     * @param  endDate  LocalDate value for endDate.
     * @param  status  String value for status.
     * @param  autoAssignLicenseFlag  boolean value for autoAssignLicenseFlag.
     * @param  autoAddDevicesFlag  boolean value for autoAddDevicesFlag.
     * @param  campaignName  String value for campaignName.
     * @param  firmwareName  String value for firmwareName.
     * @param  firmwareFrom  String value for firmwareFrom.
     * @param  firmwareTo  String value for firmwareTo.
     * @param  campaignTimeWindowList  List of V3TimeWindow value for campaignTimeWindowList.
     */
    public Campaign(
            String id,
            String accountName,
            String protocol,
            String make,
            String model,
            LocalDate startDate,
            LocalDate endDate,
            String status,
            boolean autoAssignLicenseFlag,
            boolean autoAddDevicesFlag,
            String campaignName,
            String firmwareName,
            String firmwareFrom,
            String firmwareTo,
            List<V3TimeWindow> campaignTimeWindowList) {
        this.id = id;
        this.accountName = accountName;
        this.campaignName = campaignName;
        this.firmwareName = firmwareName;
        this.firmwareFrom = firmwareFrom;
        this.firmwareTo = firmwareTo;
        this.protocol = protocol;
        this.make = make;
        this.model = model;
        this.startDate = startDate;
        this.endDate = endDate;
        this.campaignTimeWindowList = campaignTimeWindowList;
        this.status = status;
        this.autoAssignLicenseFlag = autoAssignLicenseFlag;
        this.autoAddDevicesFlag = autoAddDevicesFlag;
    }

    /**
     * Getter for Id.
     * Upgrade identifier.
     * @return Returns the String
     */
    @JsonGetter("id")
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * Upgrade identifier.
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for AccountName.
     * Account identifier.
     * @return Returns the String
     */
    @JsonGetter("accountName")
    public String getAccountName() {
        return accountName;
    }

    /**
     * Setter for AccountName.
     * Account identifier.
     * @param accountName Value for String
     */
    @JsonSetter("accountName")
    public void setAccountName(String accountName) {
        this.accountName = accountName;
    }

    /**
     * Getter for CampaignName.
     * Campaign name.
     * @return Returns the String
     */
    @JsonGetter("campaignName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCampaignName() {
        return campaignName;
    }

    /**
     * Setter for CampaignName.
     * Campaign name.
     * @param campaignName Value for String
     */
    @JsonSetter("campaignName")
    public void setCampaignName(String campaignName) {
        this.campaignName = campaignName;
    }

    /**
     * Getter for FirmwareName.
     * Name of firmware.
     * @return Returns the String
     */
    @JsonGetter("firmwareName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getFirmwareName() {
        return firmwareName;
    }

    /**
     * Setter for FirmwareName.
     * Name of firmware.
     * @param firmwareName Value for String
     */
    @JsonSetter("firmwareName")
    public void setFirmwareName(String firmwareName) {
        this.firmwareName = firmwareName;
    }

    /**
     * Getter for FirmwareFrom.
     * Old firmware version.
     * @return Returns the String
     */
    @JsonGetter("firmwareFrom")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getFirmwareFrom() {
        return firmwareFrom;
    }

    /**
     * Setter for FirmwareFrom.
     * Old firmware version.
     * @param firmwareFrom Value for String
     */
    @JsonSetter("firmwareFrom")
    public void setFirmwareFrom(String firmwareFrom) {
        this.firmwareFrom = firmwareFrom;
    }

    /**
     * Getter for FirmwareTo.
     * New firmware version.
     * @return Returns the String
     */
    @JsonGetter("firmwareTo")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getFirmwareTo() {
        return firmwareTo;
    }

    /**
     * Setter for FirmwareTo.
     * New firmware version.
     * @param firmwareTo Value for String
     */
    @JsonSetter("firmwareTo")
    public void setFirmwareTo(String firmwareTo) {
        this.firmwareTo = firmwareTo;
    }

    /**
     * Getter for Protocol.
     * The protocol of the firmware distribution. Default: LWM2M.
     * @return Returns the String
     */
    @JsonGetter("protocol")
    public String getProtocol() {
        return protocol;
    }

    /**
     * Setter for Protocol.
     * The protocol of the firmware distribution. Default: LWM2M.
     * @param protocol Value for String
     */
    @JsonSetter("protocol")
    public void setProtocol(String protocol) {
        this.protocol = protocol;
    }

    /**
     * Getter for Make.
     * Applicable make.
     * @return Returns the String
     */
    @JsonGetter("make")
    public String getMake() {
        return make;
    }

    /**
     * Setter for Make.
     * Applicable make.
     * @param make Value for String
     */
    @JsonSetter("make")
    public void setMake(String make) {
        this.make = make;
    }

    /**
     * Getter for Model.
     * Applicable model.
     * @return Returns the String
     */
    @JsonGetter("model")
    public String getModel() {
        return model;
    }

    /**
     * Setter for Model.
     * Applicable model.
     * @param model Value for String
     */
    @JsonSetter("model")
    public void setModel(String model) {
        this.model = model;
    }

    /**
     * Getter for StartDate.
     * Campaign start date.
     * @return Returns the LocalDate
     */
    @JsonGetter("startDate")
    @JsonSerialize(using = DateTimeHelper.SimpleDateSerializer.class)
    public LocalDate getStartDate() {
        return startDate;
    }

    /**
     * Setter for StartDate.
     * Campaign start date.
     * @param startDate Value for LocalDate
     */
    @JsonSetter("startDate")
    @JsonDeserialize(using = DateTimeHelper.SimpleDateDeserializer.class)
    public void setStartDate(LocalDate startDate) {
        this.startDate = startDate;
    }

    /**
     * Getter for EndDate.
     * Campaign end date.
     * @return Returns the LocalDate
     */
    @JsonGetter("endDate")
    @JsonSerialize(using = DateTimeHelper.SimpleDateSerializer.class)
    public LocalDate getEndDate() {
        return endDate;
    }

    /**
     * Setter for EndDate.
     * Campaign end date.
     * @param endDate Value for LocalDate
     */
    @JsonSetter("endDate")
    @JsonDeserialize(using = DateTimeHelper.SimpleDateDeserializer.class)
    public void setEndDate(LocalDate endDate) {
        this.endDate = endDate;
    }

    /**
     * Getter for CampaignTimeWindowList.
     * List of allowed campaign time windows.
     * @return Returns the List of V3TimeWindow
     */
    @JsonGetter("campaignTimeWindowList")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<V3TimeWindow> getCampaignTimeWindowList() {
        return campaignTimeWindowList;
    }

    /**
     * Setter for CampaignTimeWindowList.
     * List of allowed campaign time windows.
     * @param campaignTimeWindowList Value for List of V3TimeWindow
     */
    @JsonSetter("campaignTimeWindowList")
    public void setCampaignTimeWindowList(List<V3TimeWindow> campaignTimeWindowList) {
        this.campaignTimeWindowList = campaignTimeWindowList;
    }

    /**
     * Getter for Status.
     * Firmware upgrade status.
     * @return Returns the String
     */
    @JsonGetter("status")
    public String getStatus() {
        return status;
    }

    /**
     * Setter for Status.
     * Firmware upgrade status.
     * @param status Value for String
     */
    @JsonSetter("status")
    public void setStatus(String status) {
        this.status = status;
    }

    /**
     * Getter for AutoAssignLicenseFlag.
     * Any device included in the device list which does not have a license will automatically be
     * assigned a FOTA license, assuming there are enough FOTA licenses available, when set to true.
     * @return Returns the boolean
     */
    @JsonGetter("autoAssignLicenseFlag")
    public boolean getAutoAssignLicenseFlag() {
        return autoAssignLicenseFlag;
    }

    /**
     * Setter for AutoAssignLicenseFlag.
     * Any device included in the device list which does not have a license will automatically be
     * assigned a FOTA license, assuming there are enough FOTA licenses available, when set to true.
     * @param autoAssignLicenseFlag Value for boolean
     */
    @JsonSetter("autoAssignLicenseFlag")
    public void setAutoAssignLicenseFlag(boolean autoAssignLicenseFlag) {
        this.autoAssignLicenseFlag = autoAssignLicenseFlag;
    }

    /**
     * Getter for AutoAddDevicesFlag.
     * Beyond the devices included on the device list, any other device(s) which matches the
     * eligibility criteria (same make, model, current firmware, protocol, billing account) will
     * automatically be added to the campaign list during the life of the campaign when set to true.
     * @return Returns the boolean
     */
    @JsonGetter("autoAddDevicesFlag")
    public boolean getAutoAddDevicesFlag() {
        return autoAddDevicesFlag;
    }

    /**
     * Setter for AutoAddDevicesFlag.
     * Beyond the devices included on the device list, any other device(s) which matches the
     * eligibility criteria (same make, model, current firmware, protocol, billing account) will
     * automatically be added to the campaign list during the life of the campaign when set to true.
     * @param autoAddDevicesFlag Value for boolean
     */
    @JsonSetter("autoAddDevicesFlag")
    public void setAutoAddDevicesFlag(boolean autoAddDevicesFlag) {
        this.autoAddDevicesFlag = autoAddDevicesFlag;
    }

    /**
     * Converts this Campaign into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Campaign [" + "id=" + id + ", accountName=" + accountName + ", protocol=" + protocol
                + ", make=" + make + ", model=" + model + ", startDate=" + startDate + ", endDate="
                + endDate + ", status=" + status + ", autoAssignLicenseFlag="
                + autoAssignLicenseFlag + ", autoAddDevicesFlag=" + autoAddDevicesFlag
                + ", campaignName=" + campaignName + ", firmwareName=" + firmwareName
                + ", firmwareFrom=" + firmwareFrom + ", firmwareTo=" + firmwareTo
                + ", campaignTimeWindowList=" + campaignTimeWindowList + "]";
    }

    /**
     * Builds a new {@link Campaign.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Campaign.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(id, accountName, protocol, make, model, startDate, endDate,
                status, autoAssignLicenseFlag, autoAddDevicesFlag)
                .campaignName(getCampaignName())
                .firmwareName(getFirmwareName())
                .firmwareFrom(getFirmwareFrom())
                .firmwareTo(getFirmwareTo())
                .campaignTimeWindowList(getCampaignTimeWindowList());
        return builder;
    }

    /**
     * Class to build instances of {@link Campaign}.
     */
    public static class Builder {
        private String id;
        private String accountName;
        private String protocol = "LWM2M";
        private String make;
        private String model;
        private LocalDate startDate;
        private LocalDate endDate;
        private String status;
        private boolean autoAssignLicenseFlag;
        private boolean autoAddDevicesFlag;
        private String campaignName;
        private String firmwareName;
        private String firmwareFrom;
        private String firmwareTo;
        private List<V3TimeWindow> campaignTimeWindowList;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  id  String value for id.
         * @param  accountName  String value for accountName.
         * @param  protocol  String value for protocol.
         * @param  make  String value for make.
         * @param  model  String value for model.
         * @param  startDate  LocalDate value for startDate.
         * @param  endDate  LocalDate value for endDate.
         * @param  status  String value for status.
         * @param  autoAssignLicenseFlag  boolean value for autoAssignLicenseFlag.
         * @param  autoAddDevicesFlag  boolean value for autoAddDevicesFlag.
         */
        public Builder(String id, String accountName, String protocol, String make, String model,
                LocalDate startDate, LocalDate endDate, String status,
                boolean autoAssignLicenseFlag, boolean autoAddDevicesFlag) {
            this.id = id;
            this.accountName = accountName;
            this.protocol = protocol;
            this.make = make;
            this.model = model;
            this.startDate = startDate;
            this.endDate = endDate;
            this.status = status;
            this.autoAssignLicenseFlag = autoAssignLicenseFlag;
            this.autoAddDevicesFlag = autoAddDevicesFlag;
        }

        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for accountName.
         * @param  accountName  String value for accountName.
         * @return Builder
         */
        public Builder accountName(String accountName) {
            this.accountName = accountName;
            return this;
        }

        /**
         * Setter for protocol.
         * @param  protocol  String value for protocol.
         * @return Builder
         */
        public Builder protocol(String protocol) {
            this.protocol = protocol;
            return this;
        }

        /**
         * Setter for make.
         * @param  make  String value for make.
         * @return Builder
         */
        public Builder make(String make) {
            this.make = make;
            return this;
        }

        /**
         * Setter for model.
         * @param  model  String value for model.
         * @return Builder
         */
        public Builder model(String model) {
            this.model = model;
            return this;
        }

        /**
         * Setter for startDate.
         * @param  startDate  LocalDate value for startDate.
         * @return Builder
         */
        public Builder startDate(LocalDate startDate) {
            this.startDate = startDate;
            return this;
        }

        /**
         * Setter for endDate.
         * @param  endDate  LocalDate value for endDate.
         * @return Builder
         */
        public Builder endDate(LocalDate endDate) {
            this.endDate = endDate;
            return this;
        }

        /**
         * Setter for status.
         * @param  status  String value for status.
         * @return Builder
         */
        public Builder status(String status) {
            this.status = status;
            return this;
        }

        /**
         * Setter for autoAssignLicenseFlag.
         * @param  autoAssignLicenseFlag  boolean value for autoAssignLicenseFlag.
         * @return Builder
         */
        public Builder autoAssignLicenseFlag(boolean autoAssignLicenseFlag) {
            this.autoAssignLicenseFlag = autoAssignLicenseFlag;
            return this;
        }

        /**
         * Setter for autoAddDevicesFlag.
         * @param  autoAddDevicesFlag  boolean value for autoAddDevicesFlag.
         * @return Builder
         */
        public Builder autoAddDevicesFlag(boolean autoAddDevicesFlag) {
            this.autoAddDevicesFlag = autoAddDevicesFlag;
            return this;
        }

        /**
         * Setter for campaignName.
         * @param  campaignName  String value for campaignName.
         * @return Builder
         */
        public Builder campaignName(String campaignName) {
            this.campaignName = campaignName;
            return this;
        }

        /**
         * Setter for firmwareName.
         * @param  firmwareName  String value for firmwareName.
         * @return Builder
         */
        public Builder firmwareName(String firmwareName) {
            this.firmwareName = firmwareName;
            return this;
        }

        /**
         * Setter for firmwareFrom.
         * @param  firmwareFrom  String value for firmwareFrom.
         * @return Builder
         */
        public Builder firmwareFrom(String firmwareFrom) {
            this.firmwareFrom = firmwareFrom;
            return this;
        }

        /**
         * Setter for firmwareTo.
         * @param  firmwareTo  String value for firmwareTo.
         * @return Builder
         */
        public Builder firmwareTo(String firmwareTo) {
            this.firmwareTo = firmwareTo;
            return this;
        }

        /**
         * Setter for campaignTimeWindowList.
         * @param  campaignTimeWindowList  List of V3TimeWindow value for campaignTimeWindowList.
         * @return Builder
         */
        public Builder campaignTimeWindowList(List<V3TimeWindow> campaignTimeWindowList) {
            this.campaignTimeWindowList = campaignTimeWindowList;
            return this;
        }

        /**
         * Builds a new {@link Campaign} object using the set fields.
         * @return {@link Campaign}
         */
        public Campaign build() {
            return new Campaign(id, accountName, protocol, make, model, startDate, endDate, status,
                    autoAssignLicenseFlag, autoAddDevicesFlag, campaignName, firmwareName,
                    firmwareFrom, firmwareTo, campaignTimeWindowList);
        }
    }
}
