/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;


/**
 * ClientTypeEnum to be used.
 */
public enum ClientTypeEnum {
    V2_X,

    COMPUTERVISION,

    MACHINELEARNING,

    IOT,

    GAMING,

    AR,

    VR,

    ANALYTICS,

    ROBOTICS;


    private static TreeMap<String, ClientTypeEnum> valueMap = new TreeMap<>();
    private String value;

    static {
        V2_X.value = "V2X";
        COMPUTERVISION.value = "ComputerVision";
        MACHINELEARNING.value = "MachineLearning";
        IOT.value = "IoT";
        GAMING.value = "Gaming";
        AR.value = "AR";
        VR.value = "VR";
        ANALYTICS.value = "Analytics";
        ROBOTICS.value = "Robotics";

        valueMap.put("V2X", V2_X);
        valueMap.put("ComputerVision", COMPUTERVISION);
        valueMap.put("MachineLearning", MACHINELEARNING);
        valueMap.put("IoT", IOT);
        valueMap.put("Gaming", GAMING);
        valueMap.put("AR", AR);
        valueMap.put("VR", VR);
        valueMap.put("Analytics", ANALYTICS);
        valueMap.put("Robotics", ROBOTICS);
    }

    /**
     * Returns the enum member associated with the given string value.
     * @param toConvert String value to get enum member.
     * @return The enum member against the given string value.
     * @throws IOException when provided value is not mapped to any enum member.
     */
    @JsonCreator
    public static ClientTypeEnum constructFromString(String toConvert) throws IOException {
        ClientTypeEnum enumValue = fromString(toConvert);
        if (enumValue == null)
        {
            throw new IOException("Unable to create enum instance with value: " + toConvert);
        }
        return enumValue;
    }

    /**
     * Returns the enum member associated with the given string value.
     * @param toConvert String value to get enum member.
     * @return The enum member against the given string value.
     */
    public static ClientTypeEnum fromString(String toConvert) {
        return valueMap.get(toConvert);
    }

    /**
     * Returns the string value associated with the enum member.
     * @return The string value against enum member.
     */
    @JsonValue
    public String value() {
        return value;
    }
        
    /**
     * Get string representation of this enum.
     */
    @Override
    public String toString() {
        return value.toString();
    }

    /**
     * Convert list of ClientTypeEnum values to list of string values.
     * @param toConvert The list of ClientTypeEnum values to convert.
     * @return List of representative string values.
     */
    public static List<String> toValue(List<ClientTypeEnum> toConvert) {
        if (toConvert == null) {
            return null;
        }
        List<String> convertedValues = new ArrayList<>();
        for (ClientTypeEnum enumValue : toConvert) {
            convertedValues.add(enumValue.value);
        }
        return convertedValues;
    }
} 