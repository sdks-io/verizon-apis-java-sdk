/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for Condition type.
 */
public class Condition {
    private List<Keyschunk2> condition;

    /**
     * Default constructor.
     */
    public Condition() {
    }

    /**
     * Initialization constructor.
     * @param  condition  List of Keyschunk2 value for condition.
     */
    public Condition(
            List<Keyschunk2> condition) {
        this.condition = condition;
    }

    /**
     * Getter for Condition.
     * @return Returns the List of Keyschunk2
     */
    @JsonGetter("condition")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<Keyschunk2> getCondition() {
        return condition;
    }

    /**
     * Setter for Condition.
     * @param condition Value for List of Keyschunk2
     */
    @JsonSetter("condition")
    public void setCondition(List<Keyschunk2> condition) {
        this.condition = condition;
    }

    /**
     * Converts this Condition into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Condition [" + "condition=" + condition + "]";
    }

    /**
     * Builds a new {@link Condition.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Condition.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .condition(getCondition());
        return builder;
    }

    /**
     * Class to build instances of {@link Condition}.
     */
    public static class Builder {
        private List<Keyschunk2> condition;



        /**
         * Setter for condition.
         * @param  condition  List of Keyschunk2 value for condition.
         * @return Builder
         */
        public Builder condition(List<Keyschunk2> condition) {
            this.condition = condition;
            return this;
        }

        /**
         * Builds a new {@link Condition} object using the set fields.
         * @return {@link Condition}
         */
        public Condition build() {
            return new Condition(condition);
        }
    }
}
