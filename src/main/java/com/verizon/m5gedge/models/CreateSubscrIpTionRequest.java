/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for CreateSubscrIpTionRequest type.
 */
public class CreateSubscrIpTionRequest {
    private AccountIdentifier accountidentifier;
    private String descrIpTion;
    private Boolean disabled;
    private String email;
    private String filter;
    private String billingaccountid;
    private String streamkind;
    private String targetid;
    private String name;
    private Boolean allowaggregation;

    /**
     * Default constructor.
     */
    public CreateSubscrIpTionRequest() {
    }

    /**
     * Initialization constructor.
     * @param  accountidentifier  AccountIdentifier value for accountidentifier.
     * @param  descrIpTion  String value for descrIpTion.
     * @param  disabled  Boolean value for disabled.
     * @param  email  String value for email.
     * @param  filter  String value for filter.
     * @param  billingaccountid  String value for billingaccountid.
     * @param  streamkind  String value for streamkind.
     * @param  targetid  String value for targetid.
     * @param  name  String value for name.
     * @param  allowaggregation  Boolean value for allowaggregation.
     */
    public CreateSubscrIpTionRequest(
            AccountIdentifier accountidentifier,
            String descrIpTion,
            Boolean disabled,
            String email,
            String filter,
            String billingaccountid,
            String streamkind,
            String targetid,
            String name,
            Boolean allowaggregation) {
        this.accountidentifier = accountidentifier;
        this.descrIpTion = descrIpTion;
        this.disabled = disabled;
        this.email = email;
        this.filter = filter;
        this.billingaccountid = billingaccountid;
        this.streamkind = streamkind;
        this.targetid = targetid;
        this.name = name;
        this.allowaggregation = allowaggregation;
    }

    /**
     * Getter for Accountidentifier.
     * The ID of the authenticating billing account, in the format
     * `{"billingaccountid":"1234567890-12345"}`.
     * @return Returns the AccountIdentifier
     */
    @JsonGetter("accountidentifier")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public AccountIdentifier getAccountidentifier() {
        return accountidentifier;
    }

    /**
     * Setter for Accountidentifier.
     * The ID of the authenticating billing account, in the format
     * `{"billingaccountid":"1234567890-12345"}`.
     * @param accountidentifier Value for AccountIdentifier
     */
    @JsonSetter("accountidentifier")
    public void setAccountidentifier(AccountIdentifier accountidentifier) {
        this.accountidentifier = accountidentifier;
    }

    /**
     * Getter for DescrIpTion.
     * Descriptive information about the subscription.
     * @return Returns the String
     */
    @JsonGetter("description")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDescrIpTion() {
        return descrIpTion;
    }

    /**
     * Setter for DescrIpTion.
     * Descriptive information about the subscription.
     * @param descrIpTion Value for String
     */
    @JsonSetter("description")
    public void setDescrIpTion(String descrIpTion) {
        this.descrIpTion = descrIpTion;
    }

    /**
     * Getter for Disabled.
     * Enable or disable the subscription. A disabled subscription will not send any data.
     * @return Returns the Boolean
     */
    @JsonGetter("disabled")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getDisabled() {
        return disabled;
    }

    /**
     * Setter for Disabled.
     * Enable or disable the subscription. A disabled subscription will not send any data.
     * @param disabled Value for Boolean
     */
    @JsonSetter("disabled")
    public void setDisabled(Boolean disabled) {
        this.disabled = disabled;
    }

    /**
     * Getter for Email.
     * The address to which any error reports should be delivered.
     * @return Returns the String
     */
    @JsonGetter("email")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getEmail() {
        return email;
    }

    /**
     * Setter for Email.
     * The address to which any error reports should be delivered.
     * @param email Value for String
     */
    @JsonSetter("email")
    public void setEmail(String email) {
        this.email = email;
    }

    /**
     * Getter for Filter.
     * String containing a $filter object with a property and value to filter out non-matching
     * events.
     * @return Returns the String
     */
    @JsonGetter("filter")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getFilter() {
        return filter;
    }

    /**
     * Setter for Filter.
     * String containing a $filter object with a property and value to filter out non-matching
     * events.
     * @param filter Value for String
     */
    @JsonSetter("filter")
    public void setFilter(String filter) {
        this.filter = filter;
    }

    /**
     * Getter for Billingaccountid.
     * @return Returns the String
     */
    @JsonGetter("billingaccountid")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBillingaccountid() {
        return billingaccountid;
    }

    /**
     * Setter for Billingaccountid.
     * @param billingaccountid Value for String
     */
    @JsonSetter("billingaccountid")
    public void setBillingaccountid(String billingaccountid) {
        this.billingaccountid = billingaccountid;
    }

    /**
     * Getter for Streamkind.
     * The type of event data to send via this subscription. This will be `ts.event` in most cases.
     * Other event types are `ts.event.diagnostics` for device diagnostic data,
     * `ts.event.configuration` for device configuration events, or `ts.event.security`. Note that
     * the device ThingSpace client must support sending specific event types for anything other
     * than `ts.event`.
     * @return Returns the String
     */
    @JsonGetter("streamkind")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getStreamkind() {
        return streamkind;
    }

    /**
     * Setter for Streamkind.
     * The type of event data to send via this subscription. This will be `ts.event` in most cases.
     * Other event types are `ts.event.diagnostics` for device diagnostic data,
     * `ts.event.configuration` for device configuration events, or `ts.event.security`. Note that
     * the device ThingSpace client must support sending specific event types for anything other
     * than `ts.event`.
     * @param streamkind Value for String
     */
    @JsonSetter("streamkind")
    public void setStreamkind(String streamkind) {
        this.streamkind = streamkind;
    }

    /**
     * Getter for Targetid.
     * The ID of the target resource to be used when dispatching events. The corresponding target
     * should have a “stream” addressscheme.
     * @return Returns the String
     */
    @JsonGetter("targetid")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getTargetid() {
        return targetid;
    }

    /**
     * Setter for Targetid.
     * The ID of the target resource to be used when dispatching events. The corresponding target
     * should have a “stream” addressscheme.
     * @param targetid Value for String
     */
    @JsonSetter("targetid")
    public void setTargetid(String targetid) {
        this.targetid = targetid;
    }

    /**
     * Getter for Name.
     * Name of the subscription.
     * @return Returns the String
     */
    @JsonGetter("name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * Name of the subscription.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for Allowaggregation.
     * Setting this value to `false` prevents the data returned from being aggregated and makes the
     * data easier to parse.
     * @return Returns the Boolean
     */
    @JsonGetter("allowaggregation")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getAllowaggregation() {
        return allowaggregation;
    }

    /**
     * Setter for Allowaggregation.
     * Setting this value to `false` prevents the data returned from being aggregated and makes the
     * data easier to parse.
     * @param allowaggregation Value for Boolean
     */
    @JsonSetter("allowaggregation")
    public void setAllowaggregation(Boolean allowaggregation) {
        this.allowaggregation = allowaggregation;
    }

    /**
     * Converts this CreateSubscrIpTionRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "CreateSubscrIpTionRequest [" + "accountidentifier=" + accountidentifier
                + ", descrIpTion=" + descrIpTion + ", disabled=" + disabled + ", email=" + email
                + ", filter=" + filter + ", billingaccountid=" + billingaccountid + ", streamkind="
                + streamkind + ", targetid=" + targetid + ", name=" + name + ", allowaggregation="
                + allowaggregation + "]";
    }

    /**
     * Builds a new {@link CreateSubscrIpTionRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link CreateSubscrIpTionRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .accountidentifier(getAccountidentifier())
                .descrIpTion(getDescrIpTion())
                .disabled(getDisabled())
                .email(getEmail())
                .filter(getFilter())
                .billingaccountid(getBillingaccountid())
                .streamkind(getStreamkind())
                .targetid(getTargetid())
                .name(getName())
                .allowaggregation(getAllowaggregation());
        return builder;
    }

    /**
     * Class to build instances of {@link CreateSubscrIpTionRequest}.
     */
    public static class Builder {
        private AccountIdentifier accountidentifier;
        private String descrIpTion;
        private Boolean disabled;
        private String email;
        private String filter;
        private String billingaccountid;
        private String streamkind;
        private String targetid;
        private String name;
        private Boolean allowaggregation;



        /**
         * Setter for accountidentifier.
         * @param  accountidentifier  AccountIdentifier value for accountidentifier.
         * @return Builder
         */
        public Builder accountidentifier(AccountIdentifier accountidentifier) {
            this.accountidentifier = accountidentifier;
            return this;
        }

        /**
         * Setter for descrIpTion.
         * @param  descrIpTion  String value for descrIpTion.
         * @return Builder
         */
        public Builder descrIpTion(String descrIpTion) {
            this.descrIpTion = descrIpTion;
            return this;
        }

        /**
         * Setter for disabled.
         * @param  disabled  Boolean value for disabled.
         * @return Builder
         */
        public Builder disabled(Boolean disabled) {
            this.disabled = disabled;
            return this;
        }

        /**
         * Setter for email.
         * @param  email  String value for email.
         * @return Builder
         */
        public Builder email(String email) {
            this.email = email;
            return this;
        }

        /**
         * Setter for filter.
         * @param  filter  String value for filter.
         * @return Builder
         */
        public Builder filter(String filter) {
            this.filter = filter;
            return this;
        }

        /**
         * Setter for billingaccountid.
         * @param  billingaccountid  String value for billingaccountid.
         * @return Builder
         */
        public Builder billingaccountid(String billingaccountid) {
            this.billingaccountid = billingaccountid;
            return this;
        }

        /**
         * Setter for streamkind.
         * @param  streamkind  String value for streamkind.
         * @return Builder
         */
        public Builder streamkind(String streamkind) {
            this.streamkind = streamkind;
            return this;
        }

        /**
         * Setter for targetid.
         * @param  targetid  String value for targetid.
         * @return Builder
         */
        public Builder targetid(String targetid) {
            this.targetid = targetid;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for allowaggregation.
         * @param  allowaggregation  Boolean value for allowaggregation.
         * @return Builder
         */
        public Builder allowaggregation(Boolean allowaggregation) {
            this.allowaggregation = allowaggregation;
            return this;
        }

        /**
         * Builds a new {@link CreateSubscrIpTionRequest} object using the set fields.
         * @return {@link CreateSubscrIpTionRequest}
         */
        public CreateSubscrIpTionRequest build() {
            return new CreateSubscrIpTionRequest(accountidentifier, descrIpTion, disabled, email,
                    filter, billingaccountid, streamkind, targetid, name, allowaggregation);
        }
    }
}
