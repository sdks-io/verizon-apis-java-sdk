/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for CreateTriggerRequestOptions type.
 */
public class CreateTriggerRequestOptions {
    private String name;
    private String triggerCategory;
    private String accountName;
    private AnomalyTriggerRequest anomalyTriggerRequest;
    private TriggerNotification notification;
    private Boolean active;

    /**
     * Default constructor.
     */
    public CreateTriggerRequestOptions() {
    }

    /**
     * Initialization constructor.
     * @param  name  String value for name.
     * @param  triggerCategory  String value for triggerCategory.
     * @param  accountName  String value for accountName.
     * @param  anomalyTriggerRequest  AnomalyTriggerRequest value for anomalyTriggerRequest.
     * @param  notification  TriggerNotification value for notification.
     * @param  active  Boolean value for active.
     */
    public CreateTriggerRequestOptions(
            String name,
            String triggerCategory,
            String accountName,
            AnomalyTriggerRequest anomalyTriggerRequest,
            TriggerNotification notification,
            Boolean active) {
        this.name = name;
        this.triggerCategory = triggerCategory;
        this.accountName = accountName;
        this.anomalyTriggerRequest = anomalyTriggerRequest;
        this.notification = notification;
        this.active = active;
    }

    /**
     * Getter for Name.
     * Trigger name.
     * @return Returns the String
     */
    @JsonGetter("name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * Trigger name.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for TriggerCategory.
     * This is the value to use in the request body to detect anomalous behaivior. The values in
     * this table will only be relevant when this parameter is set to this value.
     * @return Returns the String
     */
    @JsonGetter("triggerCategory")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getTriggerCategory() {
        return triggerCategory;
    }

    /**
     * Setter for TriggerCategory.
     * This is the value to use in the request body to detect anomalous behaivior. The values in
     * this table will only be relevant when this parameter is set to this value.
     * @param triggerCategory Value for String
     */
    @JsonSetter("triggerCategory")
    public void setTriggerCategory(String triggerCategory) {
        this.triggerCategory = triggerCategory;
    }

    /**
     * Getter for AccountName.
     * Account name.
     * @return Returns the String
     */
    @JsonGetter("accountName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccountName() {
        return accountName;
    }

    /**
     * Setter for AccountName.
     * Account name.
     * @param accountName Value for String
     */
    @JsonSetter("accountName")
    public void setAccountName(String accountName) {
        this.accountName = accountName;
    }

    /**
     * Getter for AnomalyTriggerRequest.
     * The details of the UsageAnomaly trigger.
     * @return Returns the AnomalyTriggerRequest
     */
    @JsonGetter("anomalyTriggerRequest")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public AnomalyTriggerRequest getAnomalyTriggerRequest() {
        return anomalyTriggerRequest;
    }

    /**
     * Setter for AnomalyTriggerRequest.
     * The details of the UsageAnomaly trigger.
     * @param anomalyTriggerRequest Value for AnomalyTriggerRequest
     */
    @JsonSetter("anomalyTriggerRequest")
    public void setAnomalyTriggerRequest(AnomalyTriggerRequest anomalyTriggerRequest) {
        this.anomalyTriggerRequest = anomalyTriggerRequest;
    }

    /**
     * Getter for Notification.
     * The notification details of the trigger.
     * @return Returns the TriggerNotification
     */
    @JsonGetter("notification")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public TriggerNotification getNotification() {
        return notification;
    }

    /**
     * Setter for Notification.
     * The notification details of the trigger.
     * @param notification Value for TriggerNotification
     */
    @JsonSetter("notification")
    public void setNotification(TriggerNotification notification) {
        this.notification = notification;
    }

    /**
     * Getter for Active.
     * Indicates anomaly detection is active&lt;br /&gt;True - Anomaly detection is active.&lt;br /&gt;False -
     * Anomaly detection is not active.
     * @return Returns the Boolean
     */
    @JsonGetter("active")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getActive() {
        return active;
    }

    /**
     * Setter for Active.
     * Indicates anomaly detection is active&lt;br /&gt;True - Anomaly detection is active.&lt;br /&gt;False -
     * Anomaly detection is not active.
     * @param active Value for Boolean
     */
    @JsonSetter("active")
    public void setActive(Boolean active) {
        this.active = active;
    }

    /**
     * Converts this CreateTriggerRequestOptions into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "CreateTriggerRequestOptions [" + "name=" + name + ", triggerCategory="
                + triggerCategory + ", accountName=" + accountName + ", anomalyTriggerRequest="
                + anomalyTriggerRequest + ", notification=" + notification + ", active=" + active
                + "]";
    }

    /**
     * Builds a new {@link CreateTriggerRequestOptions.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link CreateTriggerRequestOptions.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .name(getName())
                .triggerCategory(getTriggerCategory())
                .accountName(getAccountName())
                .anomalyTriggerRequest(getAnomalyTriggerRequest())
                .notification(getNotification())
                .active(getActive());
        return builder;
    }

    /**
     * Class to build instances of {@link CreateTriggerRequestOptions}.
     */
    public static class Builder {
        private String name;
        private String triggerCategory;
        private String accountName;
        private AnomalyTriggerRequest anomalyTriggerRequest;
        private TriggerNotification notification;
        private Boolean active;



        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for triggerCategory.
         * @param  triggerCategory  String value for triggerCategory.
         * @return Builder
         */
        public Builder triggerCategory(String triggerCategory) {
            this.triggerCategory = triggerCategory;
            return this;
        }

        /**
         * Setter for accountName.
         * @param  accountName  String value for accountName.
         * @return Builder
         */
        public Builder accountName(String accountName) {
            this.accountName = accountName;
            return this;
        }

        /**
         * Setter for anomalyTriggerRequest.
         * @param  anomalyTriggerRequest  AnomalyTriggerRequest value for anomalyTriggerRequest.
         * @return Builder
         */
        public Builder anomalyTriggerRequest(AnomalyTriggerRequest anomalyTriggerRequest) {
            this.anomalyTriggerRequest = anomalyTriggerRequest;
            return this;
        }

        /**
         * Setter for notification.
         * @param  notification  TriggerNotification value for notification.
         * @return Builder
         */
        public Builder notification(TriggerNotification notification) {
            this.notification = notification;
            return this;
        }

        /**
         * Setter for active.
         * @param  active  Boolean value for active.
         * @return Builder
         */
        public Builder active(Boolean active) {
            this.active = active;
            return this;
        }

        /**
         * Builds a new {@link CreateTriggerRequestOptions} object using the set fields.
         * @return {@link CreateTriggerRequestOptions}
         */
        public CreateTriggerRequestOptions build() {
            return new CreateTriggerRequestOptions(name, triggerCategory, accountName,
                    anomalyTriggerRequest, notification, active);
        }
    }
}
