/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for DailyUsageHistory type.
 */
public class DailyUsageHistory {
    private String bytesUsed;
    private List<ExtendedAttribute> extendedAttributes;
    private String servicePlan;
    private String smsUsed;
    private String source;
    private String timestamp;

    /**
     * Default constructor.
     */
    public DailyUsageHistory() {
    }

    /**
     * Initialization constructor.
     * @param  bytesUsed  String value for bytesUsed.
     * @param  extendedAttributes  List of ExtendedAttribute value for extendedAttributes.
     * @param  servicePlan  String value for servicePlan.
     * @param  smsUsed  String value for smsUsed.
     * @param  source  String value for source.
     * @param  timestamp  String value for timestamp.
     */
    public DailyUsageHistory(
            String bytesUsed,
            List<ExtendedAttribute> extendedAttributes,
            String servicePlan,
            String smsUsed,
            String source,
            String timestamp) {
        this.bytesUsed = bytesUsed;
        this.extendedAttributes = extendedAttributes;
        this.servicePlan = servicePlan;
        this.smsUsed = smsUsed;
        this.source = source;
        this.timestamp = timestamp;
    }

    /**
     * Getter for BytesUsed.
     * the total data usage recorded in Bytes
     * @return Returns the String
     */
    @JsonGetter("bytesUsed")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBytesUsed() {
        return bytesUsed;
    }

    /**
     * Setter for BytesUsed.
     * the total data usage recorded in Bytes
     * @param bytesUsed Value for String
     */
    @JsonSetter("bytesUsed")
    public void setBytesUsed(String bytesUsed) {
        this.bytesUsed = bytesUsed;
    }

    /**
     * Getter for ExtendedAttributes.
     * @return Returns the List of ExtendedAttribute
     */
    @JsonGetter("extendedAttributes")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<ExtendedAttribute> getExtendedAttributes() {
        return extendedAttributes;
    }

    /**
     * Setter for ExtendedAttributes.
     * @param extendedAttributes Value for List of ExtendedAttribute
     */
    @JsonSetter("extendedAttributes")
    public void setExtendedAttributes(List<ExtendedAttribute> extendedAttributes) {
        this.extendedAttributes = extendedAttributes;
    }

    /**
     * Getter for ServicePlan.
     * @return Returns the String
     */
    @JsonGetter("servicePlan")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getServicePlan() {
        return servicePlan;
    }

    /**
     * Setter for ServicePlan.
     * @param servicePlan Value for String
     */
    @JsonSetter("servicePlan")
    public void setServicePlan(String servicePlan) {
        this.servicePlan = servicePlan;
    }

    /**
     * Getter for SmsUsed.
     * The total number of SMS messages from and to the device
     * @return Returns the String
     */
    @JsonGetter("smsUsed")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSmsUsed() {
        return smsUsed;
    }

    /**
     * Setter for SmsUsed.
     * The total number of SMS messages from and to the device
     * @param smsUsed Value for String
     */
    @JsonSetter("smsUsed")
    public void setSmsUsed(String smsUsed) {
        this.smsUsed = smsUsed;
    }

    /**
     * Getter for Source.
     * Where the collected data is being gathered from
     * @return Returns the String
     */
    @JsonGetter("source")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSource() {
        return source;
    }

    /**
     * Setter for Source.
     * Where the collected data is being gathered from
     * @param source Value for String
     */
    @JsonSetter("source")
    public void setSource(String source) {
        this.source = source;
    }

    /**
     * Getter for Timestamp.
     * Timestamp of when the retrieved record was completed ($datetime)
     * @return Returns the String
     */
    @JsonGetter("timestamp")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getTimestamp() {
        return timestamp;
    }

    /**
     * Setter for Timestamp.
     * Timestamp of when the retrieved record was completed ($datetime)
     * @param timestamp Value for String
     */
    @JsonSetter("timestamp")
    public void setTimestamp(String timestamp) {
        this.timestamp = timestamp;
    }

    /**
     * Converts this DailyUsageHistory into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "DailyUsageHistory [" + "bytesUsed=" + bytesUsed + ", extendedAttributes="
                + extendedAttributes + ", servicePlan=" + servicePlan + ", smsUsed=" + smsUsed
                + ", source=" + source + ", timestamp=" + timestamp + "]";
    }

    /**
     * Builds a new {@link DailyUsageHistory.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link DailyUsageHistory.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .bytesUsed(getBytesUsed())
                .extendedAttributes(getExtendedAttributes())
                .servicePlan(getServicePlan())
                .smsUsed(getSmsUsed())
                .source(getSource())
                .timestamp(getTimestamp());
        return builder;
    }

    /**
     * Class to build instances of {@link DailyUsageHistory}.
     */
    public static class Builder {
        private String bytesUsed;
        private List<ExtendedAttribute> extendedAttributes;
        private String servicePlan;
        private String smsUsed;
        private String source;
        private String timestamp;



        /**
         * Setter for bytesUsed.
         * @param  bytesUsed  String value for bytesUsed.
         * @return Builder
         */
        public Builder bytesUsed(String bytesUsed) {
            this.bytesUsed = bytesUsed;
            return this;
        }

        /**
         * Setter for extendedAttributes.
         * @param  extendedAttributes  List of ExtendedAttribute value for extendedAttributes.
         * @return Builder
         */
        public Builder extendedAttributes(List<ExtendedAttribute> extendedAttributes) {
            this.extendedAttributes = extendedAttributes;
            return this;
        }

        /**
         * Setter for servicePlan.
         * @param  servicePlan  String value for servicePlan.
         * @return Builder
         */
        public Builder servicePlan(String servicePlan) {
            this.servicePlan = servicePlan;
            return this;
        }

        /**
         * Setter for smsUsed.
         * @param  smsUsed  String value for smsUsed.
         * @return Builder
         */
        public Builder smsUsed(String smsUsed) {
            this.smsUsed = smsUsed;
            return this;
        }

        /**
         * Setter for source.
         * @param  source  String value for source.
         * @return Builder
         */
        public Builder source(String source) {
            this.source = source;
            return this;
        }

        /**
         * Setter for timestamp.
         * @param  timestamp  String value for timestamp.
         * @return Builder
         */
        public Builder timestamp(String timestamp) {
            this.timestamp = timestamp;
            return this;
        }

        /**
         * Builds a new {@link DailyUsageHistory} object using the set fields.
         * @return {@link DailyUsageHistory}
         */
        public DailyUsageHistory build() {
            return new DailyUsageHistory(bytesUsed, extendedAttributes, servicePlan, smsUsed,
                    source, timestamp);
        }
    }
}
