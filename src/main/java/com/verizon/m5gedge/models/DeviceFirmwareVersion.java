/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.verizon.m5gedge.DateTimeHelper;
import java.time.LocalDateTime;

/**
 * This is a model class for DeviceFirmwareVersion type.
 */
public class DeviceFirmwareVersion {
    private String status;
    private String reason;
    private String deviceId;
    private String firmwareVersion;
    private LocalDateTime firmwareVersionUpdateTime;

    /**
     * Default constructor.
     */
    public DeviceFirmwareVersion() {
    }

    /**
     * Initialization constructor.
     * @param  deviceId  String value for deviceId.
     * @param  firmwareVersion  String value for firmwareVersion.
     * @param  status  String value for status.
     * @param  reason  String value for reason.
     * @param  firmwareVersionUpdateTime  LocalDateTime value for firmwareVersionUpdateTime.
     */
    public DeviceFirmwareVersion(
            String deviceId,
            String firmwareVersion,
            String status,
            String reason,
            LocalDateTime firmwareVersionUpdateTime) {
        this.status = status;
        this.reason = reason;
        this.deviceId = deviceId;
        this.firmwareVersion = firmwareVersion;
        this.firmwareVersionUpdateTime = firmwareVersionUpdateTime;
    }

    /**
     * Getter for Status.
     * @return Returns the String
     */
    @JsonGetter("status")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getStatus() {
        return status;
    }

    /**
     * Setter for Status.
     * @param status Value for String
     */
    @JsonSetter("status")
    public void setStatus(String status) {
        this.status = status;
    }

    /**
     * Getter for Reason.
     * @return Returns the String
     */
    @JsonGetter("reason")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getReason() {
        return reason;
    }

    /**
     * Setter for Reason.
     * @param reason Value for String
     */
    @JsonSetter("reason")
    public void setReason(String reason) {
        this.reason = reason;
    }

    /**
     * Getter for DeviceId.
     * Device IMEI.
     * @return Returns the String
     */
    @JsonGetter("deviceId")
    public String getDeviceId() {
        return deviceId;
    }

    /**
     * Setter for DeviceId.
     * Device IMEI.
     * @param deviceId Value for String
     */
    @JsonSetter("deviceId")
    public void setDeviceId(String deviceId) {
        this.deviceId = deviceId;
    }

    /**
     * Getter for FirmwareVersion.
     * Device Firmware Version.
     * @return Returns the String
     */
    @JsonGetter("firmwareVersion")
    public String getFirmwareVersion() {
        return firmwareVersion;
    }

    /**
     * Setter for FirmwareVersion.
     * Device Firmware Version.
     * @param firmwareVersion Value for String
     */
    @JsonSetter("firmwareVersion")
    public void setFirmwareVersion(String firmwareVersion) {
        this.firmwareVersion = firmwareVersion;
    }

    /**
     * Getter for FirmwareVersionUpdateTime.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("firmwareVersionUpdateTime")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getFirmwareVersionUpdateTime() {
        return firmwareVersionUpdateTime;
    }

    /**
     * Setter for FirmwareVersionUpdateTime.
     * @param firmwareVersionUpdateTime Value for LocalDateTime
     */
    @JsonSetter("firmwareVersionUpdateTime")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setFirmwareVersionUpdateTime(LocalDateTime firmwareVersionUpdateTime) {
        this.firmwareVersionUpdateTime = firmwareVersionUpdateTime;
    }

    /**
     * Converts this DeviceFirmwareVersion into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "DeviceFirmwareVersion [" + "deviceId=" + deviceId + ", firmwareVersion="
                + firmwareVersion + ", status=" + status + ", reason=" + reason
                + ", firmwareVersionUpdateTime=" + firmwareVersionUpdateTime + "]";
    }

    /**
     * Builds a new {@link DeviceFirmwareVersion.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link DeviceFirmwareVersion.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(deviceId, firmwareVersion)
                .status(getStatus())
                .reason(getReason())
                .firmwareVersionUpdateTime(getFirmwareVersionUpdateTime());
        return builder;
    }

    /**
     * Class to build instances of {@link DeviceFirmwareVersion}.
     */
    public static class Builder {
        private String deviceId;
        private String firmwareVersion;
        private String status;
        private String reason;
        private LocalDateTime firmwareVersionUpdateTime;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  deviceId  String value for deviceId.
         * @param  firmwareVersion  String value for firmwareVersion.
         */
        public Builder(String deviceId, String firmwareVersion) {
            this.deviceId = deviceId;
            this.firmwareVersion = firmwareVersion;
        }

        /**
         * Setter for deviceId.
         * @param  deviceId  String value for deviceId.
         * @return Builder
         */
        public Builder deviceId(String deviceId) {
            this.deviceId = deviceId;
            return this;
        }

        /**
         * Setter for firmwareVersion.
         * @param  firmwareVersion  String value for firmwareVersion.
         * @return Builder
         */
        public Builder firmwareVersion(String firmwareVersion) {
            this.firmwareVersion = firmwareVersion;
            return this;
        }

        /**
         * Setter for status.
         * @param  status  String value for status.
         * @return Builder
         */
        public Builder status(String status) {
            this.status = status;
            return this;
        }

        /**
         * Setter for reason.
         * @param  reason  String value for reason.
         * @return Builder
         */
        public Builder reason(String reason) {
            this.reason = reason;
            return this;
        }

        /**
         * Setter for firmwareVersionUpdateTime.
         * @param  firmwareVersionUpdateTime  LocalDateTime value for firmwareVersionUpdateTime.
         * @return Builder
         */
        public Builder firmwareVersionUpdateTime(LocalDateTime firmwareVersionUpdateTime) {
            this.firmwareVersionUpdateTime = firmwareVersionUpdateTime;
            return this;
        }

        /**
         * Builds a new {@link DeviceFirmwareVersion} object using the set fields.
         * @return {@link DeviceFirmwareVersion}
         */
        public DeviceFirmwareVersion build() {
            return new DeviceFirmwareVersion(deviceId, firmwareVersion, status, reason,
                    firmwareVersionUpdateTime);
        }
    }
}
