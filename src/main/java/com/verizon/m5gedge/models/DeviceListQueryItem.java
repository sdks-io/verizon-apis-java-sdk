/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for DeviceListQueryItem type.
 */
public class DeviceListQueryItem {
    private String deviceId;
    private String mdn;
    private String model;
    private String make;
    private String firmware;
    private Boolean fotaEligible;
    private Boolean licenseAssigned;
    private String upgradeTime;

    /**
     * Default constructor.
     */
    public DeviceListQueryItem() {
    }

    /**
     * Initialization constructor.
     * @param  deviceId  String value for deviceId.
     * @param  mdn  String value for mdn.
     * @param  model  String value for model.
     * @param  make  String value for make.
     * @param  firmware  String value for firmware.
     * @param  fotaEligible  Boolean value for fotaEligible.
     * @param  licenseAssigned  Boolean value for licenseAssigned.
     * @param  upgradeTime  String value for upgradeTime.
     */
    public DeviceListQueryItem(
            String deviceId,
            String mdn,
            String model,
            String make,
            String firmware,
            Boolean fotaEligible,
            Boolean licenseAssigned,
            String upgradeTime) {
        this.deviceId = deviceId;
        this.mdn = mdn;
        this.model = model;
        this.make = make;
        this.firmware = firmware;
        this.fotaEligible = fotaEligible;
        this.licenseAssigned = licenseAssigned;
        this.upgradeTime = upgradeTime;
    }

    /**
     * Getter for DeviceId.
     * Device IMEI.
     * @return Returns the String
     */
    @JsonGetter("deviceId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDeviceId() {
        return deviceId;
    }

    /**
     * Setter for DeviceId.
     * Device IMEI.
     * @param deviceId Value for String
     */
    @JsonSetter("deviceId")
    public void setDeviceId(String deviceId) {
        this.deviceId = deviceId;
    }

    /**
     * Getter for Mdn.
     * The MDN (phone number) of the device.
     * @return Returns the String
     */
    @JsonGetter("mdn")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getMdn() {
        return mdn;
    }

    /**
     * Setter for Mdn.
     * The MDN (phone number) of the device.
     * @param mdn Value for String
     */
    @JsonSetter("mdn")
    public void setMdn(String mdn) {
        this.mdn = mdn;
    }

    /**
     * Getter for Model.
     * The device model name.
     * @return Returns the String
     */
    @JsonGetter("model")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getModel() {
        return model;
    }

    /**
     * Setter for Model.
     * The device model name.
     * @param model Value for String
     */
    @JsonSetter("model")
    public void setModel(String model) {
        this.model = model;
    }

    /**
     * Getter for Make.
     * The device make.
     * @return Returns the String
     */
    @JsonGetter("make")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getMake() {
        return make;
    }

    /**
     * Setter for Make.
     * The device make.
     * @param make Value for String
     */
    @JsonSetter("make")
    public void setMake(String make) {
        this.make = make;
    }

    /**
     * Getter for Firmware.
     * The name of the firmware image currently installed on the device.
     * @return Returns the String
     */
    @JsonGetter("firmware")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getFirmware() {
        return firmware;
    }

    /**
     * Setter for Firmware.
     * The name of the firmware image currently installed on the device.
     * @param firmware Value for String
     */
    @JsonSetter("firmware")
    public void setFirmware(String firmware) {
        this.firmware = firmware;
    }

    /**
     * Getter for FotaEligible.
     * True if the device firmware can be upgraded over the air using the Software Management
     * Services API.
     * @return Returns the Boolean
     */
    @JsonGetter("fotaEligible")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getFotaEligible() {
        return fotaEligible;
    }

    /**
     * Setter for FotaEligible.
     * True if the device firmware can be upgraded over the air using the Software Management
     * Services API.
     * @param fotaEligible Value for Boolean
     */
    @JsonSetter("fotaEligible")
    public void setFotaEligible(Boolean fotaEligible) {
        this.fotaEligible = fotaEligible;
    }

    /**
     * Getter for LicenseAssigned.
     * True if an MRC license has been assigned to this device.
     * @return Returns the Boolean
     */
    @JsonGetter("licenseAssigned")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getLicenseAssigned() {
        return licenseAssigned;
    }

    /**
     * Setter for LicenseAssigned.
     * True if an MRC license has been assigned to this device.
     * @param licenseAssigned Value for Boolean
     */
    @JsonSetter("licenseAssigned")
    public void setLicenseAssigned(Boolean licenseAssigned) {
        this.licenseAssigned = licenseAssigned;
    }

    /**
     * Getter for UpgradeTime.
     * The date and time that the device firmware was last upgraded. If a device has never been
     * upgraded, the upgradeTime will be 01/01/1900 0:0:0.
     * @return Returns the String
     */
    @JsonGetter("upgradeTime")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getUpgradeTime() {
        return upgradeTime;
    }

    /**
     * Setter for UpgradeTime.
     * The date and time that the device firmware was last upgraded. If a device has never been
     * upgraded, the upgradeTime will be 01/01/1900 0:0:0.
     * @param upgradeTime Value for String
     */
    @JsonSetter("upgradeTime")
    public void setUpgradeTime(String upgradeTime) {
        this.upgradeTime = upgradeTime;
    }

    /**
     * Converts this DeviceListQueryItem into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "DeviceListQueryItem [" + "deviceId=" + deviceId + ", mdn=" + mdn + ", model="
                + model + ", make=" + make + ", firmware=" + firmware + ", fotaEligible="
                + fotaEligible + ", licenseAssigned=" + licenseAssigned + ", upgradeTime="
                + upgradeTime + "]";
    }

    /**
     * Builds a new {@link DeviceListQueryItem.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link DeviceListQueryItem.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .deviceId(getDeviceId())
                .mdn(getMdn())
                .model(getModel())
                .make(getMake())
                .firmware(getFirmware())
                .fotaEligible(getFotaEligible())
                .licenseAssigned(getLicenseAssigned())
                .upgradeTime(getUpgradeTime());
        return builder;
    }

    /**
     * Class to build instances of {@link DeviceListQueryItem}.
     */
    public static class Builder {
        private String deviceId;
        private String mdn;
        private String model;
        private String make;
        private String firmware;
        private Boolean fotaEligible;
        private Boolean licenseAssigned;
        private String upgradeTime;



        /**
         * Setter for deviceId.
         * @param  deviceId  String value for deviceId.
         * @return Builder
         */
        public Builder deviceId(String deviceId) {
            this.deviceId = deviceId;
            return this;
        }

        /**
         * Setter for mdn.
         * @param  mdn  String value for mdn.
         * @return Builder
         */
        public Builder mdn(String mdn) {
            this.mdn = mdn;
            return this;
        }

        /**
         * Setter for model.
         * @param  model  String value for model.
         * @return Builder
         */
        public Builder model(String model) {
            this.model = model;
            return this;
        }

        /**
         * Setter for make.
         * @param  make  String value for make.
         * @return Builder
         */
        public Builder make(String make) {
            this.make = make;
            return this;
        }

        /**
         * Setter for firmware.
         * @param  firmware  String value for firmware.
         * @return Builder
         */
        public Builder firmware(String firmware) {
            this.firmware = firmware;
            return this;
        }

        /**
         * Setter for fotaEligible.
         * @param  fotaEligible  Boolean value for fotaEligible.
         * @return Builder
         */
        public Builder fotaEligible(Boolean fotaEligible) {
            this.fotaEligible = fotaEligible;
            return this;
        }

        /**
         * Setter for licenseAssigned.
         * @param  licenseAssigned  Boolean value for licenseAssigned.
         * @return Builder
         */
        public Builder licenseAssigned(Boolean licenseAssigned) {
            this.licenseAssigned = licenseAssigned;
            return this;
        }

        /**
         * Setter for upgradeTime.
         * @param  upgradeTime  String value for upgradeTime.
         * @return Builder
         */
        public Builder upgradeTime(String upgradeTime) {
            this.upgradeTime = upgradeTime;
            return this;
        }

        /**
         * Builds a new {@link DeviceListQueryItem} object using the set fields.
         * @return {@link DeviceListQueryItem}
         */
        public DeviceListQueryItem build() {
            return new DeviceListQueryItem(deviceId, mdn, model, make, firmware, fotaEligible,
                    licenseAssigned, upgradeTime);
        }
    }
}
