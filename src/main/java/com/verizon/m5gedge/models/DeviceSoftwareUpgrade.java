/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.verizon.m5gedge.DateTimeHelper;
import java.time.LocalDate;

/**
 * This is a model class for DeviceSoftwareUpgrade type.
 */
public class DeviceSoftwareUpgrade {
    private String deviceId;
    private String id;
    private String accountName;
    private String softwareName;
    private LocalDate startDate;
    private String status;
    private String reason;

    /**
     * Default constructor.
     */
    public DeviceSoftwareUpgrade() {
    }

    /**
     * Initialization constructor.
     * @param  deviceId  String value for deviceId.
     * @param  id  String value for id.
     * @param  accountName  String value for accountName.
     * @param  startDate  LocalDate value for startDate.
     * @param  status  String value for status.
     * @param  reason  String value for reason.
     * @param  softwareName  String value for softwareName.
     */
    public DeviceSoftwareUpgrade(
            String deviceId,
            String id,
            String accountName,
            LocalDate startDate,
            String status,
            String reason,
            String softwareName) {
        this.deviceId = deviceId;
        this.id = id;
        this.accountName = accountName;
        this.softwareName = softwareName;
        this.startDate = startDate;
        this.status = status;
        this.reason = reason;
    }

    /**
     * Getter for DeviceId.
     * Device identifier.
     * @return Returns the String
     */
    @JsonGetter("deviceId")
    public String getDeviceId() {
        return deviceId;
    }

    /**
     * Setter for DeviceId.
     * Device identifier.
     * @param deviceId Value for String
     */
    @JsonSetter("deviceId")
    public void setDeviceId(String deviceId) {
        this.deviceId = deviceId;
    }

    /**
     * Getter for Id.
     * Upgrade identifier.
     * @return Returns the String
     */
    @JsonGetter("id")
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * Upgrade identifier.
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for AccountName.
     * Account identifier.
     * @return Returns the String
     */
    @JsonGetter("accountName")
    public String getAccountName() {
        return accountName;
    }

    /**
     * Setter for AccountName.
     * Account identifier.
     * @param accountName Value for String
     */
    @JsonSetter("accountName")
    public void setAccountName(String accountName) {
        this.accountName = accountName;
    }

    /**
     * Getter for SoftwareName.
     * Software name.
     * @return Returns the String
     */
    @JsonGetter("softwareName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSoftwareName() {
        return softwareName;
    }

    /**
     * Setter for SoftwareName.
     * Software name.
     * @param softwareName Value for String
     */
    @JsonSetter("softwareName")
    public void setSoftwareName(String softwareName) {
        this.softwareName = softwareName;
    }

    /**
     * Getter for StartDate.
     * Software upgrade start date.
     * @return Returns the LocalDate
     */
    @JsonGetter("startDate")
    @JsonSerialize(using = DateTimeHelper.SimpleDateSerializer.class)
    public LocalDate getStartDate() {
        return startDate;
    }

    /**
     * Setter for StartDate.
     * Software upgrade start date.
     * @param startDate Value for LocalDate
     */
    @JsonSetter("startDate")
    @JsonDeserialize(using = DateTimeHelper.SimpleDateDeserializer.class)
    public void setStartDate(LocalDate startDate) {
        this.startDate = startDate;
    }

    /**
     * Getter for Status.
     * Software upgrade status.
     * @return Returns the String
     */
    @JsonGetter("status")
    public String getStatus() {
        return status;
    }

    /**
     * Setter for Status.
     * Software upgrade status.
     * @param status Value for String
     */
    @JsonSetter("status")
    public void setStatus(String status) {
        this.status = status;
    }

    /**
     * Getter for Reason.
     * Software upgrade result reason.
     * @return Returns the String
     */
    @JsonGetter("reason")
    public String getReason() {
        return reason;
    }

    /**
     * Setter for Reason.
     * Software upgrade result reason.
     * @param reason Value for String
     */
    @JsonSetter("reason")
    public void setReason(String reason) {
        this.reason = reason;
    }

    /**
     * Converts this DeviceSoftwareUpgrade into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "DeviceSoftwareUpgrade [" + "deviceId=" + deviceId + ", id=" + id + ", accountName="
                + accountName + ", startDate=" + startDate + ", status=" + status + ", reason="
                + reason + ", softwareName=" + softwareName + "]";
    }

    /**
     * Builds a new {@link DeviceSoftwareUpgrade.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link DeviceSoftwareUpgrade.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(deviceId, id, accountName, startDate, status, reason)
                .softwareName(getSoftwareName());
        return builder;
    }

    /**
     * Class to build instances of {@link DeviceSoftwareUpgrade}.
     */
    public static class Builder {
        private String deviceId;
        private String id;
        private String accountName;
        private LocalDate startDate;
        private String status;
        private String reason;
        private String softwareName;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  deviceId  String value for deviceId.
         * @param  id  String value for id.
         * @param  accountName  String value for accountName.
         * @param  startDate  LocalDate value for startDate.
         * @param  status  String value for status.
         * @param  reason  String value for reason.
         */
        public Builder(String deviceId, String id, String accountName, LocalDate startDate,
                String status, String reason) {
            this.deviceId = deviceId;
            this.id = id;
            this.accountName = accountName;
            this.startDate = startDate;
            this.status = status;
            this.reason = reason;
        }

        /**
         * Setter for deviceId.
         * @param  deviceId  String value for deviceId.
         * @return Builder
         */
        public Builder deviceId(String deviceId) {
            this.deviceId = deviceId;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for accountName.
         * @param  accountName  String value for accountName.
         * @return Builder
         */
        public Builder accountName(String accountName) {
            this.accountName = accountName;
            return this;
        }

        /**
         * Setter for startDate.
         * @param  startDate  LocalDate value for startDate.
         * @return Builder
         */
        public Builder startDate(LocalDate startDate) {
            this.startDate = startDate;
            return this;
        }

        /**
         * Setter for status.
         * @param  status  String value for status.
         * @return Builder
         */
        public Builder status(String status) {
            this.status = status;
            return this;
        }

        /**
         * Setter for reason.
         * @param  reason  String value for reason.
         * @return Builder
         */
        public Builder reason(String reason) {
            this.reason = reason;
            return this;
        }

        /**
         * Setter for softwareName.
         * @param  softwareName  String value for softwareName.
         * @return Builder
         */
        public Builder softwareName(String softwareName) {
            this.softwareName = softwareName;
            return this;
        }

        /**
         * Builds a new {@link DeviceSoftwareUpgrade} object using the set fields.
         * @return {@link DeviceSoftwareUpgrade}
         */
        public DeviceSoftwareUpgrade build() {
            return new DeviceSoftwareUpgrade(deviceId, id, accountName, startDate, status, reason,
                    softwareName);
        }
    }
}
