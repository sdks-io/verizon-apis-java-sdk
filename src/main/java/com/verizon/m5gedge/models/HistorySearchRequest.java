/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for HistorySearchRequest type.
 */
public class HistorySearchRequest {
    private HistorySearchFilter filter;
    private Integer limitNumber;
    private HistorySearchLimitTime limitTime;
    private String page;

    /**
     * Default constructor.
     */
    public HistorySearchRequest() {
    }

    /**
     * Initialization constructor.
     * @param  filter  HistorySearchFilter value for filter.
     * @param  limitNumber  Integer value for limitNumber.
     * @param  limitTime  HistorySearchLimitTime value for limitTime.
     * @param  page  String value for page.
     */
    public HistorySearchRequest(
            HistorySearchFilter filter,
            Integer limitNumber,
            HistorySearchLimitTime limitTime,
            String page) {
        this.filter = filter;
        this.limitNumber = limitNumber;
        this.limitTime = limitTime;
        this.page = page;
    }

    /**
     * Getter for Filter.
     * The selected device and attributes for which a request should retrieve data.
     * @return Returns the HistorySearchFilter
     */
    @JsonGetter("$filter")
    public HistorySearchFilter getFilter() {
        return filter;
    }

    /**
     * Setter for Filter.
     * The selected device and attributes for which a request should retrieve data.
     * @param filter Value for HistorySearchFilter
     */
    @JsonSetter("$filter")
    public void setFilter(HistorySearchFilter filter) {
        this.filter = filter;
    }

    /**
     * Getter for LimitNumber.
     * The maximum number of historical attributes to include in the response. If the request
     * matches more than this number of attributes, the response will contain an X-Next value in the
     * header that can be used as the page value in the next request to retrieve the next page of
     * events.
     * @return Returns the Integer
     */
    @JsonGetter("$limitNumber")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getLimitNumber() {
        return limitNumber;
    }

    /**
     * Setter for LimitNumber.
     * The maximum number of historical attributes to include in the response. If the request
     * matches more than this number of attributes, the response will contain an X-Next value in the
     * header that can be used as the page value in the next request to retrieve the next page of
     * events.
     * @param limitNumber Value for Integer
     */
    @JsonSetter("$limitNumber")
    public void setLimitNumber(Integer limitNumber) {
        this.limitNumber = limitNumber;
    }

    /**
     * Getter for LimitTime.
     * The time period for which a request should retrieve data, beginning with the
     * limitTime.startOn and proceeding with the limitTime.duration.
     * @return Returns the HistorySearchLimitTime
     */
    @JsonGetter("$limitTime")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public HistorySearchLimitTime getLimitTime() {
        return limitTime;
    }

    /**
     * Setter for LimitTime.
     * The time period for which a request should retrieve data, beginning with the
     * limitTime.startOn and proceeding with the limitTime.duration.
     * @param limitTime Value for HistorySearchLimitTime
     */
    @JsonSetter("$limitTime")
    public void setLimitTime(HistorySearchLimitTime limitTime) {
        this.limitTime = limitTime;
    }

    /**
     * Getter for Page.
     * Page number for pagination purposes.
     * @return Returns the String
     */
    @JsonGetter("$page")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPage() {
        return page;
    }

    /**
     * Setter for Page.
     * Page number for pagination purposes.
     * @param page Value for String
     */
    @JsonSetter("$page")
    public void setPage(String page) {
        this.page = page;
    }

    /**
     * Converts this HistorySearchRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "HistorySearchRequest [" + "filter=" + filter + ", limitNumber=" + limitNumber
                + ", limitTime=" + limitTime + ", page=" + page + "]";
    }

    /**
     * Builds a new {@link HistorySearchRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link HistorySearchRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(filter)
                .limitNumber(getLimitNumber())
                .limitTime(getLimitTime())
                .page(getPage());
        return builder;
    }

    /**
     * Class to build instances of {@link HistorySearchRequest}.
     */
    public static class Builder {
        private HistorySearchFilter filter;
        private Integer limitNumber;
        private HistorySearchLimitTime limitTime;
        private String page;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  filter  HistorySearchFilter value for filter.
         */
        public Builder(HistorySearchFilter filter) {
            this.filter = filter;
        }

        /**
         * Setter for filter.
         * @param  filter  HistorySearchFilter value for filter.
         * @return Builder
         */
        public Builder filter(HistorySearchFilter filter) {
            this.filter = filter;
            return this;
        }

        /**
         * Setter for limitNumber.
         * @param  limitNumber  Integer value for limitNumber.
         * @return Builder
         */
        public Builder limitNumber(Integer limitNumber) {
            this.limitNumber = limitNumber;
            return this;
        }

        /**
         * Setter for limitTime.
         * @param  limitTime  HistorySearchLimitTime value for limitTime.
         * @return Builder
         */
        public Builder limitTime(HistorySearchLimitTime limitTime) {
            this.limitTime = limitTime;
            return this;
        }

        /**
         * Setter for page.
         * @param  page  String value for page.
         * @return Builder
         */
        public Builder page(String page) {
            this.page = page;
            return this;
        }

        /**
         * Builds a new {@link HistorySearchRequest} object using the set fields.
         * @return {@link HistorySearchRequest}
         */
        public HistorySearchRequest build() {
            return new HistorySearchRequest(filter, limitNumber, limitTime, page);
        }
    }
}
