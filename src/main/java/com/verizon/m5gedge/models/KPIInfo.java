/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for KPIInfo type.
 */
public class KPIInfo {
    private String name;
    private String value;
    private String nodeName;
    private String nodeType;
    private String descrIpTion;
    private String unit;
    private String category;
    private String timeOfLastUpdate;

    /**
     * Default constructor.
     */
    public KPIInfo() {
    }

    /**
     * Initialization constructor.
     * @param  name  String value for name.
     * @param  value  String value for value.
     * @param  nodeName  String value for nodeName.
     * @param  nodeType  String value for nodeType.
     * @param  descrIpTion  String value for descrIpTion.
     * @param  unit  String value for unit.
     * @param  category  String value for category.
     * @param  timeOfLastUpdate  String value for timeOfLastUpdate.
     */
    public KPIInfo(
            String name,
            String value,
            String nodeName,
            String nodeType,
            String descrIpTion,
            String unit,
            String category,
            String timeOfLastUpdate) {
        this.name = name;
        this.value = value;
        this.nodeName = nodeName;
        this.nodeType = nodeType;
        this.descrIpTion = descrIpTion;
        this.unit = unit;
        this.category = category;
        this.timeOfLastUpdate = timeOfLastUpdate;
    }

    /**
     * Getter for Name.
     * @return Returns the String
     */
    @JsonGetter("name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for Value.
     * @return Returns the String
     */
    @JsonGetter("value")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getValue() {
        return value;
    }

    /**
     * Setter for Value.
     * @param value Value for String
     */
    @JsonSetter("value")
    public void setValue(String value) {
        this.value = value;
    }

    /**
     * Getter for NodeName.
     * @return Returns the String
     */
    @JsonGetter("nodeName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getNodeName() {
        return nodeName;
    }

    /**
     * Setter for NodeName.
     * @param nodeName Value for String
     */
    @JsonSetter("nodeName")
    public void setNodeName(String nodeName) {
        this.nodeName = nodeName;
    }

    /**
     * Getter for NodeType.
     * @return Returns the String
     */
    @JsonGetter("nodeType")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getNodeType() {
        return nodeType;
    }

    /**
     * Setter for NodeType.
     * @param nodeType Value for String
     */
    @JsonSetter("nodeType")
    public void setNodeType(String nodeType) {
        this.nodeType = nodeType;
    }

    /**
     * Getter for DescrIpTion.
     * @return Returns the String
     */
    @JsonGetter("description")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDescrIpTion() {
        return descrIpTion;
    }

    /**
     * Setter for DescrIpTion.
     * @param descrIpTion Value for String
     */
    @JsonSetter("description")
    public void setDescrIpTion(String descrIpTion) {
        this.descrIpTion = descrIpTion;
    }

    /**
     * Getter for Unit.
     * @return Returns the String
     */
    @JsonGetter("unit")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getUnit() {
        return unit;
    }

    /**
     * Setter for Unit.
     * @param unit Value for String
     */
    @JsonSetter("unit")
    public void setUnit(String unit) {
        this.unit = unit;
    }

    /**
     * Getter for Category.
     * @return Returns the String
     */
    @JsonGetter("category")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCategory() {
        return category;
    }

    /**
     * Setter for Category.
     * @param category Value for String
     */
    @JsonSetter("category")
    public void setCategory(String category) {
        this.category = category;
    }

    /**
     * Getter for TimeOfLastUpdate.
     * @return Returns the String
     */
    @JsonGetter("timeOfLastUpdate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getTimeOfLastUpdate() {
        return timeOfLastUpdate;
    }

    /**
     * Setter for TimeOfLastUpdate.
     * @param timeOfLastUpdate Value for String
     */
    @JsonSetter("timeOfLastUpdate")
    public void setTimeOfLastUpdate(String timeOfLastUpdate) {
        this.timeOfLastUpdate = timeOfLastUpdate;
    }

    /**
     * Converts this KPIInfo into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "KPIInfo [" + "name=" + name + ", value=" + value + ", nodeName=" + nodeName
                + ", nodeType=" + nodeType + ", descrIpTion=" + descrIpTion + ", unit=" + unit
                + ", category=" + category + ", timeOfLastUpdate=" + timeOfLastUpdate + "]";
    }

    /**
     * Builds a new {@link KPIInfo.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link KPIInfo.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .name(getName())
                .value(getValue())
                .nodeName(getNodeName())
                .nodeType(getNodeType())
                .descrIpTion(getDescrIpTion())
                .unit(getUnit())
                .category(getCategory())
                .timeOfLastUpdate(getTimeOfLastUpdate());
        return builder;
    }

    /**
     * Class to build instances of {@link KPIInfo}.
     */
    public static class Builder {
        private String name;
        private String value;
        private String nodeName;
        private String nodeType;
        private String descrIpTion;
        private String unit;
        private String category;
        private String timeOfLastUpdate;



        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for value.
         * @param  value  String value for value.
         * @return Builder
         */
        public Builder value(String value) {
            this.value = value;
            return this;
        }

        /**
         * Setter for nodeName.
         * @param  nodeName  String value for nodeName.
         * @return Builder
         */
        public Builder nodeName(String nodeName) {
            this.nodeName = nodeName;
            return this;
        }

        /**
         * Setter for nodeType.
         * @param  nodeType  String value for nodeType.
         * @return Builder
         */
        public Builder nodeType(String nodeType) {
            this.nodeType = nodeType;
            return this;
        }

        /**
         * Setter for descrIpTion.
         * @param  descrIpTion  String value for descrIpTion.
         * @return Builder
         */
        public Builder descrIpTion(String descrIpTion) {
            this.descrIpTion = descrIpTion;
            return this;
        }

        /**
         * Setter for unit.
         * @param  unit  String value for unit.
         * @return Builder
         */
        public Builder unit(String unit) {
            this.unit = unit;
            return this;
        }

        /**
         * Setter for category.
         * @param  category  String value for category.
         * @return Builder
         */
        public Builder category(String category) {
            this.category = category;
            return this;
        }

        /**
         * Setter for timeOfLastUpdate.
         * @param  timeOfLastUpdate  String value for timeOfLastUpdate.
         * @return Builder
         */
        public Builder timeOfLastUpdate(String timeOfLastUpdate) {
            this.timeOfLastUpdate = timeOfLastUpdate;
            return this;
        }

        /**
         * Builds a new {@link KPIInfo} object using the set fields.
         * @return {@link KPIInfo}
         */
        public KPIInfo build() {
            return new KPIInfo(name, value, nodeName, nodeType, descrIpTion, unit, category,
                    timeOfLastUpdate);
        }
    }
}
