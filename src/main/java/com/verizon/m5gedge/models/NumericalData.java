/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for NumericalData type.
 */
public class NumericalData {
    private Integer value;
    private NumericalDataUnitEnum unit;

    /**
     * Default constructor.
     */
    public NumericalData() {
    }

    /**
     * Initialization constructor.
     * @param  value  Integer value for value.
     * @param  unit  NumericalDataUnitEnum value for unit.
     */
    public NumericalData(
            Integer value,
            NumericalDataUnitEnum unit) {
        this.value = value;
        this.unit = unit;
    }

    /**
     * Getter for Value.
     * Numerical value.
     * @return Returns the Integer
     */
    @JsonGetter("value")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getValue() {
        return value;
    }

    /**
     * Setter for Value.
     * Numerical value.
     * @param value Value for Integer
     */
    @JsonSetter("value")
    public void setValue(Integer value) {
        this.value = value;
    }

    /**
     * Getter for Unit.
     * Unit of time.
     * @return Returns the NumericalDataUnitEnum
     */
    @JsonGetter("unit")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public NumericalDataUnitEnum getUnit() {
        return unit;
    }

    /**
     * Setter for Unit.
     * Unit of time.
     * @param unit Value for NumericalDataUnitEnum
     */
    @JsonSetter("unit")
    public void setUnit(NumericalDataUnitEnum unit) {
        this.unit = unit;
    }

    /**
     * Converts this NumericalData into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "NumericalData [" + "value=" + value + ", unit=" + unit + "]";
    }

    /**
     * Builds a new {@link NumericalData.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link NumericalData.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .value(getValue())
                .unit(getUnit());
        return builder;
    }

    /**
     * Class to build instances of {@link NumericalData}.
     */
    public static class Builder {
        private Integer value;
        private NumericalDataUnitEnum unit;



        /**
         * Setter for value.
         * @param  value  Integer value for value.
         * @return Builder
         */
        public Builder value(Integer value) {
            this.value = value;
            return this;
        }

        /**
         * Setter for unit.
         * @param  unit  NumericalDataUnitEnum value for unit.
         * @return Builder
         */
        public Builder unit(NumericalDataUnitEnum unit) {
            this.unit = unit;
            return this;
        }

        /**
         * Builds a new {@link NumericalData} object using the set fields.
         * @return {@link NumericalData}
         */
        public NumericalData build() {
            return new NumericalData(value, unit);
        }
    }
}
