/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for Region type.
 */
public class Region {
    private OptionalNullable<String> regionId;
    private OptionalNullable<String> name;
    private OptionalNullable<String> countryCode;
    private OptionalNullable<String> metro;
    private OptionalNullable<String> area;

    /**
     * Default constructor.
     */
    public Region() {
    }

    /**
     * Initialization constructor.
     * @param  regionId  String value for regionId.
     * @param  name  String value for name.
     * @param  countryCode  String value for countryCode.
     * @param  metro  String value for metro.
     * @param  area  String value for area.
     */
    public Region(
            String regionId,
            String name,
            String countryCode,
            String metro,
            String area) {
        this.regionId = OptionalNullable.of(regionId);
        this.name = OptionalNullable.of(name);
        this.countryCode = OptionalNullable.of(countryCode);
        this.metro = OptionalNullable.of(metro);
        this.area = OptionalNullable.of(area);
    }

    /**
     * Initialization constructor.
     * @param  regionId  String value for regionId.
     * @param  name  String value for name.
     * @param  countryCode  String value for countryCode.
     * @param  metro  String value for metro.
     * @param  area  String value for area.
     */

    protected Region(OptionalNullable<String> regionId, OptionalNullable<String> name,
            OptionalNullable<String> countryCode, OptionalNullable<String> metro,
            OptionalNullable<String> area) {
        this.regionId = regionId;
        this.name = name;
        this.countryCode = countryCode;
        this.metro = metro;
        this.area = area;
    }

    /**
     * Internal Getter for RegionId.
     * The unique identifier of the region.
     * @return Returns the Internal String
     */
    @JsonGetter("regionId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetRegionId() {
        return this.regionId;
    }

    /**
     * Getter for RegionId.
     * The unique identifier of the region.
     * @return Returns the String
     */
    public String getRegionId() {
        return OptionalNullable.getFrom(regionId);
    }

    /**
     * Setter for RegionId.
     * The unique identifier of the region.
     * @param regionId Value for String
     */
    @JsonSetter("regionId")
    public void setRegionId(String regionId) {
        this.regionId = OptionalNullable.of(regionId);
    }

    /**
     * UnSetter for RegionId.
     * The unique identifier of the region.
     */
    public void unsetRegionId() {
        regionId = null;
    }

    /**
     * Internal Getter for Name.
     * A relevant and identifiable region name.
     * @return Returns the Internal String
     */
    @JsonGetter("name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetName() {
        return this.name;
    }

    /**
     * Getter for Name.
     * A relevant and identifiable region name.
     * @return Returns the String
     */
    public String getName() {
        return OptionalNullable.getFrom(name);
    }

    /**
     * Setter for Name.
     * A relevant and identifiable region name.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = OptionalNullable.of(name);
    }

    /**
     * UnSetter for Name.
     * A relevant and identifiable region name.
     */
    public void unsetName() {
        name = null;
    }

    /**
     * Internal Getter for CountryCode.
     * A two-character alpha code for a country, based on ISO 3166-1 alpha-2. This is future
     * functionality, so the value returned is 'null'.
     * @return Returns the Internal String
     */
    @JsonGetter("countryCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetCountryCode() {
        return this.countryCode;
    }

    /**
     * Getter for CountryCode.
     * A two-character alpha code for a country, based on ISO 3166-1 alpha-2. This is future
     * functionality, so the value returned is 'null'.
     * @return Returns the String
     */
    public String getCountryCode() {
        return OptionalNullable.getFrom(countryCode);
    }

    /**
     * Setter for CountryCode.
     * A two-character alpha code for a country, based on ISO 3166-1 alpha-2. This is future
     * functionality, so the value returned is 'null'.
     * @param countryCode Value for String
     */
    @JsonSetter("countryCode")
    public void setCountryCode(String countryCode) {
        this.countryCode = OptionalNullable.of(countryCode);
    }

    /**
     * UnSetter for CountryCode.
     * A two-character alpha code for a country, based on ISO 3166-1 alpha-2. This is future
     * functionality, so the value returned is 'null'.
     */
    public void unsetCountryCode() {
        countryCode = null;
    }

    /**
     * Internal Getter for Metro.
     * The metropolitan area or 'City' value. This is future functionality, so the value returned is
     * 'null'.
     * @return Returns the Internal String
     */
    @JsonGetter("metro")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetMetro() {
        return this.metro;
    }

    /**
     * Getter for Metro.
     * The metropolitan area or 'City' value. This is future functionality, so the value returned is
     * 'null'.
     * @return Returns the String
     */
    public String getMetro() {
        return OptionalNullable.getFrom(metro);
    }

    /**
     * Setter for Metro.
     * The metropolitan area or 'City' value. This is future functionality, so the value returned is
     * 'null'.
     * @param metro Value for String
     */
    @JsonSetter("metro")
    public void setMetro(String metro) {
        this.metro = OptionalNullable.of(metro);
    }

    /**
     * UnSetter for Metro.
     * The metropolitan area or 'City' value. This is future functionality, so the value returned is
     * 'null'.
     */
    public void unsetMetro() {
        metro = null;
    }

    /**
     * Internal Getter for Area.
     * This is a sub-set of 'City' and is similar to 'Zone'. This is future functionality, so the
     * value returned is 'null'.
     * @return Returns the Internal String
     */
    @JsonGetter("area")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetArea() {
        return this.area;
    }

    /**
     * Getter for Area.
     * This is a sub-set of 'City' and is similar to 'Zone'. This is future functionality, so the
     * value returned is 'null'.
     * @return Returns the String
     */
    public String getArea() {
        return OptionalNullable.getFrom(area);
    }

    /**
     * Setter for Area.
     * This is a sub-set of 'City' and is similar to 'Zone'. This is future functionality, so the
     * value returned is 'null'.
     * @param area Value for String
     */
    @JsonSetter("area")
    public void setArea(String area) {
        this.area = OptionalNullable.of(area);
    }

    /**
     * UnSetter for Area.
     * This is a sub-set of 'City' and is similar to 'Zone'. This is future functionality, so the
     * value returned is 'null'.
     */
    public void unsetArea() {
        area = null;
    }

    /**
     * Converts this Region into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Region [" + "regionId=" + regionId + ", name=" + name + ", countryCode="
                + countryCode + ", metro=" + metro + ", area=" + area + "]";
    }

    /**
     * Builds a new {@link Region.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Region.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder();
        builder.regionId = internalGetRegionId();
        builder.name = internalGetName();
        builder.countryCode = internalGetCountryCode();
        builder.metro = internalGetMetro();
        builder.area = internalGetArea();
        return builder;
    }

    /**
     * Class to build instances of {@link Region}.
     */
    public static class Builder {
        private OptionalNullable<String> regionId;
        private OptionalNullable<String> name;
        private OptionalNullable<String> countryCode;
        private OptionalNullable<String> metro;
        private OptionalNullable<String> area;



        /**
         * Setter for regionId.
         * @param  regionId  String value for regionId.
         * @return Builder
         */
        public Builder regionId(String regionId) {
            this.regionId = OptionalNullable.of(regionId);
            return this;
        }

        /**
         * UnSetter for regionId.
         * @return Builder
         */
        public Builder unsetRegionId() {
            regionId = null;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = OptionalNullable.of(name);
            return this;
        }

        /**
         * UnSetter for name.
         * @return Builder
         */
        public Builder unsetName() {
            name = null;
            return this;
        }

        /**
         * Setter for countryCode.
         * @param  countryCode  String value for countryCode.
         * @return Builder
         */
        public Builder countryCode(String countryCode) {
            this.countryCode = OptionalNullable.of(countryCode);
            return this;
        }

        /**
         * UnSetter for countryCode.
         * @return Builder
         */
        public Builder unsetCountryCode() {
            countryCode = null;
            return this;
        }

        /**
         * Setter for metro.
         * @param  metro  String value for metro.
         * @return Builder
         */
        public Builder metro(String metro) {
            this.metro = OptionalNullable.of(metro);
            return this;
        }

        /**
         * UnSetter for metro.
         * @return Builder
         */
        public Builder unsetMetro() {
            metro = null;
            return this;
        }

        /**
         * Setter for area.
         * @param  area  String value for area.
         * @return Builder
         */
        public Builder area(String area) {
            this.area = OptionalNullable.of(area);
            return this;
        }

        /**
         * UnSetter for area.
         * @return Builder
         */
        public Builder unsetArea() {
            area = null;
            return this;
        }

        /**
         * Builds a new {@link Region} object using the set fields.
         * @return {@link Region}
         */
        public Region build() {
            return new Region(regionId, name, countryCode, metro, area);
        }
    }
}
