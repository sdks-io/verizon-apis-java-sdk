/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for RequestTrigger type.
 */
public class RequestTrigger {
    private String triggerId;
    private String triggerName;
    private String accountName;
    private String organizationName;
    private String triggerCategory;
    private List<PromoAlert1> promoAlerts;

    /**
     * Default constructor.
     */
    public RequestTrigger() {
    }

    /**
     * Initialization constructor.
     * @param  triggerId  String value for triggerId.
     * @param  triggerName  String value for triggerName.
     * @param  accountName  String value for accountName.
     * @param  organizationName  String value for organizationName.
     * @param  triggerCategory  String value for triggerCategory.
     * @param  promoAlerts  List of PromoAlert1 value for promoAlerts.
     */
    public RequestTrigger(
            String triggerId,
            String triggerName,
            String accountName,
            String organizationName,
            String triggerCategory,
            List<PromoAlert1> promoAlerts) {
        this.triggerId = triggerId;
        this.triggerName = triggerName;
        this.accountName = accountName;
        this.organizationName = organizationName;
        this.triggerCategory = triggerCategory;
        this.promoAlerts = promoAlerts;
    }

    /**
     * Getter for TriggerId.
     * @return Returns the String
     */
    @JsonGetter("triggerId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getTriggerId() {
        return triggerId;
    }

    /**
     * Setter for TriggerId.
     * @param triggerId Value for String
     */
    @JsonSetter("triggerId")
    public void setTriggerId(String triggerId) {
        this.triggerId = triggerId;
    }

    /**
     * Getter for TriggerName.
     * @return Returns the String
     */
    @JsonGetter("triggerName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getTriggerName() {
        return triggerName;
    }

    /**
     * Setter for TriggerName.
     * @param triggerName Value for String
     */
    @JsonSetter("triggerName")
    public void setTriggerName(String triggerName) {
        this.triggerName = triggerName;
    }

    /**
     * Getter for AccountName.
     * @return Returns the String
     */
    @JsonGetter("accountName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccountName() {
        return accountName;
    }

    /**
     * Setter for AccountName.
     * @param accountName Value for String
     */
    @JsonSetter("accountName")
    public void setAccountName(String accountName) {
        this.accountName = accountName;
    }

    /**
     * Getter for OrganizationName.
     * @return Returns the String
     */
    @JsonGetter("organizationName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getOrganizationName() {
        return organizationName;
    }

    /**
     * Setter for OrganizationName.
     * @param organizationName Value for String
     */
    @JsonSetter("organizationName")
    public void setOrganizationName(String organizationName) {
        this.organizationName = organizationName;
    }

    /**
     * Getter for TriggerCategory.
     * @return Returns the String
     */
    @JsonGetter("triggerCategory")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getTriggerCategory() {
        return triggerCategory;
    }

    /**
     * Setter for TriggerCategory.
     * @param triggerCategory Value for String
     */
    @JsonSetter("triggerCategory")
    public void setTriggerCategory(String triggerCategory) {
        this.triggerCategory = triggerCategory;
    }

    /**
     * Getter for PromoAlerts.
     * @return Returns the List of PromoAlert1
     */
    @JsonGetter("promoAlerts")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<PromoAlert1> getPromoAlerts() {
        return promoAlerts;
    }

    /**
     * Setter for PromoAlerts.
     * @param promoAlerts Value for List of PromoAlert1
     */
    @JsonSetter("promoAlerts")
    public void setPromoAlerts(List<PromoAlert1> promoAlerts) {
        this.promoAlerts = promoAlerts;
    }

    /**
     * Converts this RequestTrigger into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "RequestTrigger [" + "triggerId=" + triggerId + ", triggerName=" + triggerName
                + ", accountName=" + accountName + ", organizationName=" + organizationName
                + ", triggerCategory=" + triggerCategory + ", promoAlerts=" + promoAlerts + "]";
    }

    /**
     * Builds a new {@link RequestTrigger.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link RequestTrigger.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .triggerId(getTriggerId())
                .triggerName(getTriggerName())
                .accountName(getAccountName())
                .organizationName(getOrganizationName())
                .triggerCategory(getTriggerCategory())
                .promoAlerts(getPromoAlerts());
        return builder;
    }

    /**
     * Class to build instances of {@link RequestTrigger}.
     */
    public static class Builder {
        private String triggerId;
        private String triggerName;
        private String accountName;
        private String organizationName;
        private String triggerCategory;
        private List<PromoAlert1> promoAlerts;



        /**
         * Setter for triggerId.
         * @param  triggerId  String value for triggerId.
         * @return Builder
         */
        public Builder triggerId(String triggerId) {
            this.triggerId = triggerId;
            return this;
        }

        /**
         * Setter for triggerName.
         * @param  triggerName  String value for triggerName.
         * @return Builder
         */
        public Builder triggerName(String triggerName) {
            this.triggerName = triggerName;
            return this;
        }

        /**
         * Setter for accountName.
         * @param  accountName  String value for accountName.
         * @return Builder
         */
        public Builder accountName(String accountName) {
            this.accountName = accountName;
            return this;
        }

        /**
         * Setter for organizationName.
         * @param  organizationName  String value for organizationName.
         * @return Builder
         */
        public Builder organizationName(String organizationName) {
            this.organizationName = organizationName;
            return this;
        }

        /**
         * Setter for triggerCategory.
         * @param  triggerCategory  String value for triggerCategory.
         * @return Builder
         */
        public Builder triggerCategory(String triggerCategory) {
            this.triggerCategory = triggerCategory;
            return this;
        }

        /**
         * Setter for promoAlerts.
         * @param  promoAlerts  List of PromoAlert1 value for promoAlerts.
         * @return Builder
         */
        public Builder promoAlerts(List<PromoAlert1> promoAlerts) {
            this.promoAlerts = promoAlerts;
            return this;
        }

        /**
         * Builds a new {@link RequestTrigger} object using the set fields.
         * @return {@link RequestTrigger}
         */
        public RequestTrigger build() {
            return new RequestTrigger(triggerId, triggerName, accountName, organizationName,
                    triggerCategory, promoAlerts);
        }
    }
}
