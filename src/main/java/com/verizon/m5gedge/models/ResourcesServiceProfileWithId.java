/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for ResourcesServiceProfileWithId type.
 */
public class ResourcesServiceProfileWithId {
    private String serviceProfileId;
    private ClientTypeEnum clientType;
    private String ecspFilter;
    private String clientSchedule;
    private String clientServiceArea;
    private NetworkResourcesType networkResources;
    private ComputeResourcesType computeResources;
    private MECPlatformsAdditionalSupportInfo properties;

    /**
     * Default constructor.
     */
    public ResourcesServiceProfileWithId() {
    }

    /**
     * Initialization constructor.
     * @param  clientType  ClientTypeEnum value for clientType.
     * @param  serviceProfileId  String value for serviceProfileId.
     * @param  ecspFilter  String value for ecspFilter.
     * @param  clientSchedule  String value for clientSchedule.
     * @param  clientServiceArea  String value for clientServiceArea.
     * @param  networkResources  NetworkResourcesType value for networkResources.
     * @param  computeResources  ComputeResourcesType value for computeResources.
     * @param  properties  MECPlatformsAdditionalSupportInfo value for properties.
     */
    public ResourcesServiceProfileWithId(
            ClientTypeEnum clientType,
            String serviceProfileId,
            String ecspFilter,
            String clientSchedule,
            String clientServiceArea,
            NetworkResourcesType networkResources,
            ComputeResourcesType computeResources,
            MECPlatformsAdditionalSupportInfo properties) {
        this.serviceProfileId = serviceProfileId;
        this.clientType = clientType;
        this.ecspFilter = ecspFilter;
        this.clientSchedule = clientSchedule;
        this.clientServiceArea = clientServiceArea;
        this.networkResources = networkResources;
        this.computeResources = computeResources;
        this.properties = properties;
    }

    /**
     * Getter for ServiceProfileId.
     * Unique identifier for a service profile.
     * @return Returns the String
     */
    @JsonGetter("serviceProfileId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getServiceProfileId() {
        return serviceProfileId;
    }

    /**
     * Setter for ServiceProfileId.
     * Unique identifier for a service profile.
     * @param serviceProfileId Value for String
     */
    @JsonSetter("serviceProfileId")
    public void setServiceProfileId(String serviceProfileId) {
        this.serviceProfileId = serviceProfileId;
    }

    /**
     * Getter for ClientType.
     * The category of application client.
     * @return Returns the ClientTypeEnum
     */
    @JsonGetter("clientType")
    public ClientTypeEnum getClientType() {
        return clientType;
    }

    /**
     * Setter for ClientType.
     * The category of application client.
     * @param clientType Value for ClientTypeEnum
     */
    @JsonSetter("clientType")
    public void setClientType(ClientTypeEnum clientType) {
        this.clientType = clientType;
    }

    /**
     * Getter for EcspFilter.
     * Identity of the preferred Edge Computing Service Provider.
     * @return Returns the String
     */
    @JsonGetter("ecspFilter")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getEcspFilter() {
        return ecspFilter;
    }

    /**
     * Setter for EcspFilter.
     * Identity of the preferred Edge Computing Service Provider.
     * @param ecspFilter Value for String
     */
    @JsonSetter("ecspFilter")
    public void setEcspFilter(String ecspFilter) {
        this.ecspFilter = ecspFilter;
    }

    /**
     * Getter for ClientSchedule.
     * The expected operation schedule of the application client (e.g. time windows).
     * @return Returns the String
     */
    @JsonGetter("clientSchedule")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getClientSchedule() {
        return clientSchedule;
    }

    /**
     * Setter for ClientSchedule.
     * The expected operation schedule of the application client (e.g. time windows).
     * @param clientSchedule Value for String
     */
    @JsonSetter("clientSchedule")
    public void setClientSchedule(String clientSchedule) {
        this.clientSchedule = clientSchedule;
    }

    /**
     * Getter for ClientServiceArea.
     * The expected location(s) (e.g. route) of the hosting UE during the Client's operation
     * schedule.
     * @return Returns the String
     */
    @JsonGetter("clientServiceArea")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getClientServiceArea() {
        return clientServiceArea;
    }

    /**
     * Setter for ClientServiceArea.
     * The expected location(s) (e.g. route) of the hosting UE during the Client's operation
     * schedule.
     * @param clientServiceArea Value for String
     */
    @JsonSetter("clientServiceArea")
    public void setClientServiceArea(String clientServiceArea) {
        this.clientServiceArea = clientServiceArea;
    }

    /**
     * Getter for NetworkResources.
     * Network resources of a service profile.
     * @return Returns the NetworkResourcesType
     */
    @JsonGetter("networkResources")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public NetworkResourcesType getNetworkResources() {
        return networkResources;
    }

    /**
     * Setter for NetworkResources.
     * Network resources of a service profile.
     * @param networkResources Value for NetworkResourcesType
     */
    @JsonSetter("networkResources")
    public void setNetworkResources(NetworkResourcesType networkResources) {
        this.networkResources = networkResources;
    }

    /**
     * Getter for ComputeResources.
     * Compute resources of a service profile.
     * @return Returns the ComputeResourcesType
     */
    @JsonGetter("computeResources")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public ComputeResourcesType getComputeResources() {
        return computeResources;
    }

    /**
     * Setter for ComputeResources.
     * Compute resources of a service profile.
     * @param computeResources Value for ComputeResourcesType
     */
    @JsonSetter("computeResources")
    public void setComputeResources(ComputeResourcesType computeResources) {
        this.computeResources = computeResources;
    }

    /**
     * Getter for Properties.
     * Additional service support information for the MEC platform.
     * @return Returns the MECPlatformsAdditionalSupportInfo
     */
    @JsonGetter("properties")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public MECPlatformsAdditionalSupportInfo getProperties() {
        return properties;
    }

    /**
     * Setter for Properties.
     * Additional service support information for the MEC platform.
     * @param properties Value for MECPlatformsAdditionalSupportInfo
     */
    @JsonSetter("properties")
    public void setProperties(MECPlatformsAdditionalSupportInfo properties) {
        this.properties = properties;
    }

    /**
     * Converts this ResourcesServiceProfileWithId into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ResourcesServiceProfileWithId [" + "clientType=" + clientType
                + ", serviceProfileId=" + serviceProfileId + ", ecspFilter=" + ecspFilter
                + ", clientSchedule=" + clientSchedule + ", clientServiceArea=" + clientServiceArea
                + ", networkResources=" + networkResources + ", computeResources="
                + computeResources + ", properties=" + properties + "]";
    }

    /**
     * Builds a new {@link ResourcesServiceProfileWithId.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ResourcesServiceProfileWithId.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(clientType)
                .serviceProfileId(getServiceProfileId())
                .ecspFilter(getEcspFilter())
                .clientSchedule(getClientSchedule())
                .clientServiceArea(getClientServiceArea())
                .networkResources(getNetworkResources())
                .computeResources(getComputeResources())
                .properties(getProperties());
        return builder;
    }

    /**
     * Class to build instances of {@link ResourcesServiceProfileWithId}.
     */
    public static class Builder {
        private ClientTypeEnum clientType;
        private String serviceProfileId;
        private String ecspFilter;
        private String clientSchedule;
        private String clientServiceArea;
        private NetworkResourcesType networkResources;
        private ComputeResourcesType computeResources;
        private MECPlatformsAdditionalSupportInfo properties;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  clientType  ClientTypeEnum value for clientType.
         */
        public Builder(ClientTypeEnum clientType) {
            this.clientType = clientType;
        }

        /**
         * Setter for clientType.
         * @param  clientType  ClientTypeEnum value for clientType.
         * @return Builder
         */
        public Builder clientType(ClientTypeEnum clientType) {
            this.clientType = clientType;
            return this;
        }

        /**
         * Setter for serviceProfileId.
         * @param  serviceProfileId  String value for serviceProfileId.
         * @return Builder
         */
        public Builder serviceProfileId(String serviceProfileId) {
            this.serviceProfileId = serviceProfileId;
            return this;
        }

        /**
         * Setter for ecspFilter.
         * @param  ecspFilter  String value for ecspFilter.
         * @return Builder
         */
        public Builder ecspFilter(String ecspFilter) {
            this.ecspFilter = ecspFilter;
            return this;
        }

        /**
         * Setter for clientSchedule.
         * @param  clientSchedule  String value for clientSchedule.
         * @return Builder
         */
        public Builder clientSchedule(String clientSchedule) {
            this.clientSchedule = clientSchedule;
            return this;
        }

        /**
         * Setter for clientServiceArea.
         * @param  clientServiceArea  String value for clientServiceArea.
         * @return Builder
         */
        public Builder clientServiceArea(String clientServiceArea) {
            this.clientServiceArea = clientServiceArea;
            return this;
        }

        /**
         * Setter for networkResources.
         * @param  networkResources  NetworkResourcesType value for networkResources.
         * @return Builder
         */
        public Builder networkResources(NetworkResourcesType networkResources) {
            this.networkResources = networkResources;
            return this;
        }

        /**
         * Setter for computeResources.
         * @param  computeResources  ComputeResourcesType value for computeResources.
         * @return Builder
         */
        public Builder computeResources(ComputeResourcesType computeResources) {
            this.computeResources = computeResources;
            return this;
        }

        /**
         * Setter for properties.
         * @param  properties  MECPlatformsAdditionalSupportInfo value for properties.
         * @return Builder
         */
        public Builder properties(MECPlatformsAdditionalSupportInfo properties) {
            this.properties = properties;
            return this;
        }

        /**
         * Builds a new {@link ResourcesServiceProfileWithId} object using the set fields.
         * @return {@link ResourcesServiceProfileWithId}
         */
        public ResourcesServiceProfileWithId build() {
            return new ResourcesServiceProfileWithId(clientType, serviceProfileId, ecspFilter,
                    clientSchedule, clientServiceArea, networkResources, computeResources,
                    properties);
        }
    }
}
