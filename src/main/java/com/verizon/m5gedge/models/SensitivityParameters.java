/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for SensitivityParameters type.
 */
public class SensitivityParameters {
    private Double abnormalMaxValue;
    private Boolean enableAbnormal;
    private Boolean enableVeryAbnormal;
    private Double veryAbnormalMaxValue;

    /**
     * Default constructor.
     */
    public SensitivityParameters() {
    }

    /**
     * Initialization constructor.
     * @param  abnormalMaxValue  Double value for abnormalMaxValue.
     * @param  enableAbnormal  Boolean value for enableAbnormal.
     * @param  enableVeryAbnormal  Boolean value for enableVeryAbnormal.
     * @param  veryAbnormalMaxValue  Double value for veryAbnormalMaxValue.
     */
    public SensitivityParameters(
            Double abnormalMaxValue,
            Boolean enableAbnormal,
            Boolean enableVeryAbnormal,
            Double veryAbnormalMaxValue) {
        this.abnormalMaxValue = abnormalMaxValue;
        this.enableAbnormal = enableAbnormal;
        this.enableVeryAbnormal = enableVeryAbnormal;
        this.veryAbnormalMaxValue = veryAbnormalMaxValue;
    }

    /**
     * Getter for AbnormalMaxValue.
     * The maximum value of the threshold in the units being measured.
     * @return Returns the Double
     */
    @JsonGetter("abnormalMaxValue")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getAbnormalMaxValue() {
        return abnormalMaxValue;
    }

    /**
     * Setter for AbnormalMaxValue.
     * The maximum value of the threshold in the units being measured.
     * @param abnormalMaxValue Value for Double
     */
    @JsonSetter("abnormalMaxValue")
    public void setAbnormalMaxValue(Double abnormalMaxValue) {
        this.abnormalMaxValue = abnormalMaxValue;
    }

    /**
     * Getter for EnableAbnormal.
     * If abnormal values are being monitored.&lt;br /&gt;true - Monitor for abnormal values&lt;br /&gt;false -
     * Do not monitor for abnormal values.
     * @return Returns the Boolean
     */
    @JsonGetter("enableAbnormal")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getEnableAbnormal() {
        return enableAbnormal;
    }

    /**
     * Setter for EnableAbnormal.
     * If abnormal values are being monitored.&lt;br /&gt;true - Monitor for abnormal values&lt;br /&gt;false -
     * Do not monitor for abnormal values.
     * @param enableAbnormal Value for Boolean
     */
    @JsonSetter("enableAbnormal")
    public void setEnableAbnormal(Boolean enableAbnormal) {
        this.enableAbnormal = enableAbnormal;
    }

    /**
     * Getter for EnableVeryAbnormal.
     * If very abnormal values are being monitored.&lt;br /&gt;true - Monitor for very abnormal values&lt;br
     * /&gt;false - Do not monitor for very abnormal values.
     * @return Returns the Boolean
     */
    @JsonGetter("enableVeryAbnormal")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getEnableVeryAbnormal() {
        return enableVeryAbnormal;
    }

    /**
     * Setter for EnableVeryAbnormal.
     * If very abnormal values are being monitored.&lt;br /&gt;true - Monitor for very abnormal values&lt;br
     * /&gt;false - Do not monitor for very abnormal values.
     * @param enableVeryAbnormal Value for Boolean
     */
    @JsonSetter("enableVeryAbnormal")
    public void setEnableVeryAbnormal(Boolean enableVeryAbnormal) {
        this.enableVeryAbnormal = enableVeryAbnormal;
    }

    /**
     * Getter for VeryAbnormalMaxValue.
     * The maximum value of the threshold in the units being measured.
     * @return Returns the Double
     */
    @JsonGetter("veryAbnormalMaxValue")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getVeryAbnormalMaxValue() {
        return veryAbnormalMaxValue;
    }

    /**
     * Setter for VeryAbnormalMaxValue.
     * The maximum value of the threshold in the units being measured.
     * @param veryAbnormalMaxValue Value for Double
     */
    @JsonSetter("veryAbnormalMaxValue")
    public void setVeryAbnormalMaxValue(Double veryAbnormalMaxValue) {
        this.veryAbnormalMaxValue = veryAbnormalMaxValue;
    }

    /**
     * Converts this SensitivityParameters into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "SensitivityParameters [" + "abnormalMaxValue=" + abnormalMaxValue
                + ", enableAbnormal=" + enableAbnormal + ", enableVeryAbnormal="
                + enableVeryAbnormal + ", veryAbnormalMaxValue=" + veryAbnormalMaxValue + "]";
    }

    /**
     * Builds a new {@link SensitivityParameters.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link SensitivityParameters.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .abnormalMaxValue(getAbnormalMaxValue())
                .enableAbnormal(getEnableAbnormal())
                .enableVeryAbnormal(getEnableVeryAbnormal())
                .veryAbnormalMaxValue(getVeryAbnormalMaxValue());
        return builder;
    }

    /**
     * Class to build instances of {@link SensitivityParameters}.
     */
    public static class Builder {
        private Double abnormalMaxValue;
        private Boolean enableAbnormal;
        private Boolean enableVeryAbnormal;
        private Double veryAbnormalMaxValue;



        /**
         * Setter for abnormalMaxValue.
         * @param  abnormalMaxValue  Double value for abnormalMaxValue.
         * @return Builder
         */
        public Builder abnormalMaxValue(Double abnormalMaxValue) {
            this.abnormalMaxValue = abnormalMaxValue;
            return this;
        }

        /**
         * Setter for enableAbnormal.
         * @param  enableAbnormal  Boolean value for enableAbnormal.
         * @return Builder
         */
        public Builder enableAbnormal(Boolean enableAbnormal) {
            this.enableAbnormal = enableAbnormal;
            return this;
        }

        /**
         * Setter for enableVeryAbnormal.
         * @param  enableVeryAbnormal  Boolean value for enableVeryAbnormal.
         * @return Builder
         */
        public Builder enableVeryAbnormal(Boolean enableVeryAbnormal) {
            this.enableVeryAbnormal = enableVeryAbnormal;
            return this;
        }

        /**
         * Setter for veryAbnormalMaxValue.
         * @param  veryAbnormalMaxValue  Double value for veryAbnormalMaxValue.
         * @return Builder
         */
        public Builder veryAbnormalMaxValue(Double veryAbnormalMaxValue) {
            this.veryAbnormalMaxValue = veryAbnormalMaxValue;
            return this;
        }

        /**
         * Builds a new {@link SensitivityParameters} object using the set fields.
         * @return {@link SensitivityParameters}
         */
        public SensitivityParameters build() {
            return new SensitivityParameters(abnormalMaxValue, enableAbnormal, enableVeryAbnormal,
                    veryAbnormalMaxValue);
        }
    }
}
