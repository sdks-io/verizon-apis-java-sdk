/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for TriggerType2 type.
 */
public class TriggerType2 {
    private UsageAnomalyAttributes anomalyattributes;
    private TriggerNotification notification;

    /**
     * Default constructor.
     */
    public TriggerType2() {
    }

    /**
     * Initialization constructor.
     * @param  anomalyattributes  UsageAnomalyAttributes value for anomalyattributes.
     * @param  notification  TriggerNotification value for notification.
     */
    public TriggerType2(
            UsageAnomalyAttributes anomalyattributes,
            TriggerNotification notification) {
        this.anomalyattributes = anomalyattributes;
        this.notification = notification;
    }

    /**
     * Getter for Anomalyattributes.
     * The details of the UsageAnomaly trigger.
     * @return Returns the UsageAnomalyAttributes
     */
    @JsonGetter("anomalyattributes")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public UsageAnomalyAttributes getAnomalyattributes() {
        return anomalyattributes;
    }

    /**
     * Setter for Anomalyattributes.
     * The details of the UsageAnomaly trigger.
     * @param anomalyattributes Value for UsageAnomalyAttributes
     */
    @JsonSetter("anomalyattributes")
    public void setAnomalyattributes(UsageAnomalyAttributes anomalyattributes) {
        this.anomalyattributes = anomalyattributes;
    }

    /**
     * Getter for Notification.
     * The notification details of the trigger.
     * @return Returns the TriggerNotification
     */
    @JsonGetter("notification")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public TriggerNotification getNotification() {
        return notification;
    }

    /**
     * Setter for Notification.
     * The notification details of the trigger.
     * @param notification Value for TriggerNotification
     */
    @JsonSetter("notification")
    public void setNotification(TriggerNotification notification) {
        this.notification = notification;
    }

    /**
     * Converts this TriggerType2 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "TriggerType2 [" + "anomalyattributes=" + anomalyattributes + ", notification="
                + notification + "]";
    }

    /**
     * Builds a new {@link TriggerType2.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link TriggerType2.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .anomalyattributes(getAnomalyattributes())
                .notification(getNotification());
        return builder;
    }

    /**
     * Class to build instances of {@link TriggerType2}.
     */
    public static class Builder {
        private UsageAnomalyAttributes anomalyattributes;
        private TriggerNotification notification;



        /**
         * Setter for anomalyattributes.
         * @param  anomalyattributes  UsageAnomalyAttributes value for anomalyattributes.
         * @return Builder
         */
        public Builder anomalyattributes(UsageAnomalyAttributes anomalyattributes) {
            this.anomalyattributes = anomalyattributes;
            return this;
        }

        /**
         * Setter for notification.
         * @param  notification  TriggerNotification value for notification.
         * @return Builder
         */
        public Builder notification(TriggerNotification notification) {
            this.notification = notification;
            return this;
        }

        /**
         * Builds a new {@link TriggerType2} object using the set fields.
         * @return {@link TriggerType2}
         */
        public TriggerType2 build() {
            return new TriggerType2(anomalyattributes, notification);
        }
    }
}
