/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for UploadAndScheduleFileRequest type.
 */
public class UploadAndScheduleFileRequest {
    private String campaignName;
    private String fileName;
    private String fileVersion;
    private String distributionType;
    private String startDate;
    private String endDate;
    private String downloadAfterDate;
    private List<DownloadTimeWindow> downloadTimeWindowList;
    private String installAfterDate;
    private List<DownloadTimeWindow> installTimeWindowList;
    private List<String> deviceList;

    /**
     * Default constructor.
     */
    public UploadAndScheduleFileRequest() {
    }

    /**
     * Initialization constructor.
     * @param  campaignName  String value for campaignName.
     * @param  fileName  String value for fileName.
     * @param  fileVersion  String value for fileVersion.
     * @param  distributionType  String value for distributionType.
     * @param  startDate  String value for startDate.
     * @param  endDate  String value for endDate.
     * @param  downloadAfterDate  String value for downloadAfterDate.
     * @param  downloadTimeWindowList  List of DownloadTimeWindow value for downloadTimeWindowList.
     * @param  installAfterDate  String value for installAfterDate.
     * @param  installTimeWindowList  List of DownloadTimeWindow value for installTimeWindowList.
     * @param  deviceList  List of String value for deviceList.
     */
    public UploadAndScheduleFileRequest(
            String campaignName,
            String fileName,
            String fileVersion,
            String distributionType,
            String startDate,
            String endDate,
            String downloadAfterDate,
            List<DownloadTimeWindow> downloadTimeWindowList,
            String installAfterDate,
            List<DownloadTimeWindow> installTimeWindowList,
            List<String> deviceList) {
        this.campaignName = campaignName;
        this.fileName = fileName;
        this.fileVersion = fileVersion;
        this.distributionType = distributionType;
        this.startDate = startDate;
        this.endDate = endDate;
        this.downloadAfterDate = downloadAfterDate;
        this.downloadTimeWindowList = downloadTimeWindowList;
        this.installAfterDate = installAfterDate;
        this.installTimeWindowList = installTimeWindowList;
        this.deviceList = deviceList;
    }

    /**
     * Getter for CampaignName.
     * The campaign name.
     * @return Returns the String
     */
    @JsonGetter("campaignName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCampaignName() {
        return campaignName;
    }

    /**
     * Setter for CampaignName.
     * The campaign name.
     * @param campaignName Value for String
     */
    @JsonSetter("campaignName")
    public void setCampaignName(String campaignName) {
        this.campaignName = campaignName;
    }

    /**
     * Getter for FileName.
     * The name of the file you are upgrading to.
     * @return Returns the String
     */
    @JsonGetter("fileName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getFileName() {
        return fileName;
    }

    /**
     * Setter for FileName.
     * The name of the file you are upgrading to.
     * @param fileName Value for String
     */
    @JsonSetter("fileName")
    public void setFileName(String fileName) {
        this.fileName = fileName;
    }

    /**
     * Getter for FileVersion.
     * The version of the file you are upgrading to.
     * @return Returns the String
     */
    @JsonGetter("fileVersion")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getFileVersion() {
        return fileVersion;
    }

    /**
     * Setter for FileVersion.
     * The version of the file you are upgrading to.
     * @param fileVersion Value for String
     */
    @JsonSetter("fileVersion")
    public void setFileVersion(String fileVersion) {
        this.fileVersion = fileVersion;
    }

    /**
     * Getter for DistributionType.
     * Valid values
     * @return Returns the String
     */
    @JsonGetter("distributionType")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDistributionType() {
        return distributionType;
    }

    /**
     * Setter for DistributionType.
     * Valid values
     * @param distributionType Value for String
     */
    @JsonSetter("distributionType")
    public void setDistributionType(String distributionType) {
        this.distributionType = distributionType;
    }

    /**
     * Getter for StartDate.
     * Campaign start date.
     * @return Returns the String
     */
    @JsonGetter("startDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getStartDate() {
        return startDate;
    }

    /**
     * Setter for StartDate.
     * Campaign start date.
     * @param startDate Value for String
     */
    @JsonSetter("startDate")
    public void setStartDate(String startDate) {
        this.startDate = startDate;
    }

    /**
     * Getter for EndDate.
     * Campaign end date.
     * @return Returns the String
     */
    @JsonGetter("endDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getEndDate() {
        return endDate;
    }

    /**
     * Setter for EndDate.
     * Campaign end date.
     * @param endDate Value for String
     */
    @JsonSetter("endDate")
    public void setEndDate(String endDate) {
        this.endDate = endDate;
    }

    /**
     * Getter for DownloadAfterDate.
     * Specifies the starting date the client should download the package. If null, client downloads
     * as soon as possible.
     * @return Returns the String
     */
    @JsonGetter("downloadAfterDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDownloadAfterDate() {
        return downloadAfterDate;
    }

    /**
     * Setter for DownloadAfterDate.
     * Specifies the starting date the client should download the package. If null, client downloads
     * as soon as possible.
     * @param downloadAfterDate Value for String
     */
    @JsonSetter("downloadAfterDate")
    public void setDownloadAfterDate(String downloadAfterDate) {
        this.downloadAfterDate = downloadAfterDate;
    }

    /**
     * Getter for DownloadTimeWindowList.
     * List of allowed download time windows.
     * @return Returns the List of DownloadTimeWindow
     */
    @JsonGetter("downloadTimeWindowList")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<DownloadTimeWindow> getDownloadTimeWindowList() {
        return downloadTimeWindowList;
    }

    /**
     * Setter for DownloadTimeWindowList.
     * List of allowed download time windows.
     * @param downloadTimeWindowList Value for List of DownloadTimeWindow
     */
    @JsonSetter("downloadTimeWindowList")
    public void setDownloadTimeWindowList(List<DownloadTimeWindow> downloadTimeWindowList) {
        this.downloadTimeWindowList = downloadTimeWindowList;
    }

    /**
     * Getter for InstallAfterDate.
     * The date after which you install the package. If null, install as soon as possible.
     * @return Returns the String
     */
    @JsonGetter("installAfterDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getInstallAfterDate() {
        return installAfterDate;
    }

    /**
     * Setter for InstallAfterDate.
     * The date after which you install the package. If null, install as soon as possible.
     * @param installAfterDate Value for String
     */
    @JsonSetter("installAfterDate")
    public void setInstallAfterDate(String installAfterDate) {
        this.installAfterDate = installAfterDate;
    }

    /**
     * Getter for InstallTimeWindowList.
     * List of allowed install time windows.
     * @return Returns the List of DownloadTimeWindow
     */
    @JsonGetter("installTimeWindowList")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<DownloadTimeWindow> getInstallTimeWindowList() {
        return installTimeWindowList;
    }

    /**
     * Setter for InstallTimeWindowList.
     * List of allowed install time windows.
     * @param installTimeWindowList Value for List of DownloadTimeWindow
     */
    @JsonSetter("installTimeWindowList")
    public void setInstallTimeWindowList(List<DownloadTimeWindow> installTimeWindowList) {
        this.installTimeWindowList = installTimeWindowList;
    }

    /**
     * Getter for DeviceList.
     * Device IMEI list.
     * @return Returns the List of String
     */
    @JsonGetter("deviceList")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<String> getDeviceList() {
        return deviceList;
    }

    /**
     * Setter for DeviceList.
     * Device IMEI list.
     * @param deviceList Value for List of String
     */
    @JsonSetter("deviceList")
    public void setDeviceList(List<String> deviceList) {
        this.deviceList = deviceList;
    }

    /**
     * Converts this UploadAndScheduleFileRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "UploadAndScheduleFileRequest [" + "campaignName=" + campaignName + ", fileName="
                + fileName + ", fileVersion=" + fileVersion + ", distributionType="
                + distributionType + ", startDate=" + startDate + ", endDate=" + endDate
                + ", downloadAfterDate=" + downloadAfterDate + ", downloadTimeWindowList="
                + downloadTimeWindowList + ", installAfterDate=" + installAfterDate
                + ", installTimeWindowList=" + installTimeWindowList + ", deviceList=" + deviceList
                + "]";
    }

    /**
     * Builds a new {@link UploadAndScheduleFileRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link UploadAndScheduleFileRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .campaignName(getCampaignName())
                .fileName(getFileName())
                .fileVersion(getFileVersion())
                .distributionType(getDistributionType())
                .startDate(getStartDate())
                .endDate(getEndDate())
                .downloadAfterDate(getDownloadAfterDate())
                .downloadTimeWindowList(getDownloadTimeWindowList())
                .installAfterDate(getInstallAfterDate())
                .installTimeWindowList(getInstallTimeWindowList())
                .deviceList(getDeviceList());
        return builder;
    }

    /**
     * Class to build instances of {@link UploadAndScheduleFileRequest}.
     */
    public static class Builder {
        private String campaignName;
        private String fileName;
        private String fileVersion;
        private String distributionType;
        private String startDate;
        private String endDate;
        private String downloadAfterDate;
        private List<DownloadTimeWindow> downloadTimeWindowList;
        private String installAfterDate;
        private List<DownloadTimeWindow> installTimeWindowList;
        private List<String> deviceList;



        /**
         * Setter for campaignName.
         * @param  campaignName  String value for campaignName.
         * @return Builder
         */
        public Builder campaignName(String campaignName) {
            this.campaignName = campaignName;
            return this;
        }

        /**
         * Setter for fileName.
         * @param  fileName  String value for fileName.
         * @return Builder
         */
        public Builder fileName(String fileName) {
            this.fileName = fileName;
            return this;
        }

        /**
         * Setter for fileVersion.
         * @param  fileVersion  String value for fileVersion.
         * @return Builder
         */
        public Builder fileVersion(String fileVersion) {
            this.fileVersion = fileVersion;
            return this;
        }

        /**
         * Setter for distributionType.
         * @param  distributionType  String value for distributionType.
         * @return Builder
         */
        public Builder distributionType(String distributionType) {
            this.distributionType = distributionType;
            return this;
        }

        /**
         * Setter for startDate.
         * @param  startDate  String value for startDate.
         * @return Builder
         */
        public Builder startDate(String startDate) {
            this.startDate = startDate;
            return this;
        }

        /**
         * Setter for endDate.
         * @param  endDate  String value for endDate.
         * @return Builder
         */
        public Builder endDate(String endDate) {
            this.endDate = endDate;
            return this;
        }

        /**
         * Setter for downloadAfterDate.
         * @param  downloadAfterDate  String value for downloadAfterDate.
         * @return Builder
         */
        public Builder downloadAfterDate(String downloadAfterDate) {
            this.downloadAfterDate = downloadAfterDate;
            return this;
        }

        /**
         * Setter for downloadTimeWindowList.
         * @param  downloadTimeWindowList  List of DownloadTimeWindow value for
         *         downloadTimeWindowList.
         * @return Builder
         */
        public Builder downloadTimeWindowList(List<DownloadTimeWindow> downloadTimeWindowList) {
            this.downloadTimeWindowList = downloadTimeWindowList;
            return this;
        }

        /**
         * Setter for installAfterDate.
         * @param  installAfterDate  String value for installAfterDate.
         * @return Builder
         */
        public Builder installAfterDate(String installAfterDate) {
            this.installAfterDate = installAfterDate;
            return this;
        }

        /**
         * Setter for installTimeWindowList.
         * @param  installTimeWindowList  List of DownloadTimeWindow value for
         *         installTimeWindowList.
         * @return Builder
         */
        public Builder installTimeWindowList(List<DownloadTimeWindow> installTimeWindowList) {
            this.installTimeWindowList = installTimeWindowList;
            return this;
        }

        /**
         * Setter for deviceList.
         * @param  deviceList  List of String value for deviceList.
         * @return Builder
         */
        public Builder deviceList(List<String> deviceList) {
            this.deviceList = deviceList;
            return this;
        }

        /**
         * Builds a new {@link UploadAndScheduleFileRequest} object using the set fields.
         * @return {@link UploadAndScheduleFileRequest}
         */
        public UploadAndScheduleFileRequest build() {
            return new UploadAndScheduleFileRequest(campaignName, fileName, fileVersion,
                    distributionType, startDate, endDate, downloadAfterDate, downloadTimeWindowList,
                    installAfterDate, installTimeWindowList, deviceList);
        }
    }
}
