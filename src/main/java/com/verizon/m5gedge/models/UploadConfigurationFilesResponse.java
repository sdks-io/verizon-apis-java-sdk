/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.verizon.m5gedge.DateTimeHelper;
import java.time.LocalDate;

/**
 * This is a model class for UploadConfigurationFilesResponse type.
 */
public class UploadConfigurationFilesResponse {
    private String fileName;
    private String fileVersion;
    private LocalDate launchDate;
    private String releaseNote;
    private String model;
    private String make;
    private String distributionType;
    private String devicePlatformId;
    private String localTargetPath;

    /**
     * Default constructor.
     */
    public UploadConfigurationFilesResponse() {
    }

    /**
     * Initialization constructor.
     * @param  fileName  String value for fileName.
     * @param  fileVersion  String value for fileVersion.
     * @param  launchDate  LocalDate value for launchDate.
     * @param  releaseNote  String value for releaseNote.
     * @param  model  String value for model.
     * @param  make  String value for make.
     * @param  distributionType  String value for distributionType.
     * @param  devicePlatformId  String value for devicePlatformId.
     * @param  localTargetPath  String value for localTargetPath.
     */
    public UploadConfigurationFilesResponse(
            String fileName,
            String fileVersion,
            LocalDate launchDate,
            String releaseNote,
            String model,
            String make,
            String distributionType,
            String devicePlatformId,
            String localTargetPath) {
        this.fileName = fileName;
        this.fileVersion = fileVersion;
        this.launchDate = launchDate;
        this.releaseNote = releaseNote;
        this.model = model;
        this.make = make;
        this.distributionType = distributionType;
        this.devicePlatformId = devicePlatformId;
        this.localTargetPath = localTargetPath;
    }

    /**
     * Getter for FileName.
     * The name of the file you are upgrading to.
     * @return Returns the String
     */
    @JsonGetter("fileName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getFileName() {
        return fileName;
    }

    /**
     * Setter for FileName.
     * The name of the file you are upgrading to.
     * @param fileName Value for String
     */
    @JsonSetter("fileName")
    public void setFileName(String fileName) {
        this.fileName = fileName;
    }

    /**
     * Getter for FileVersion.
     * The version of the file you are upgrading to.
     * @return Returns the String
     */
    @JsonGetter("fileVersion")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getFileVersion() {
        return fileVersion;
    }

    /**
     * Setter for FileVersion.
     * The version of the file you are upgrading to.
     * @param fileVersion Value for String
     */
    @JsonSetter("fileVersion")
    public void setFileVersion(String fileVersion) {
        this.fileVersion = fileVersion;
    }

    /**
     * Getter for LaunchDate.
     * Software launch date.
     * @return Returns the LocalDate
     */
    @JsonGetter("launchDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.SimpleDateSerializer.class)
    public LocalDate getLaunchDate() {
        return launchDate;
    }

    /**
     * Setter for LaunchDate.
     * Software launch date.
     * @param launchDate Value for LocalDate
     */
    @JsonSetter("launchDate")
    @JsonDeserialize(using = DateTimeHelper.SimpleDateDeserializer.class)
    public void setLaunchDate(LocalDate launchDate) {
        this.launchDate = launchDate;
    }

    /**
     * Getter for ReleaseNote.
     * Software release note.
     * @return Returns the String
     */
    @JsonGetter("releaseNote")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getReleaseNote() {
        return releaseNote;
    }

    /**
     * Setter for ReleaseNote.
     * Software release note.
     * @param releaseNote Value for String
     */
    @JsonSetter("releaseNote")
    public void setReleaseNote(String releaseNote) {
        this.releaseNote = releaseNote;
    }

    /**
     * Getter for Model.
     * Software applicable device model.
     * @return Returns the String
     */
    @JsonGetter("model")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getModel() {
        return model;
    }

    /**
     * Setter for Model.
     * Software applicable device model.
     * @param model Value for String
     */
    @JsonSetter("model")
    public void setModel(String model) {
        this.model = model;
    }

    /**
     * Getter for Make.
     * Software applicable device make.
     * @return Returns the String
     */
    @JsonGetter("make")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getMake() {
        return make;
    }

    /**
     * Setter for Make.
     * Software applicable device make.
     * @param make Value for String
     */
    @JsonSetter("make")
    public void setMake(String make) {
        this.make = make;
    }

    /**
     * Getter for DistributionType.
     * LWM2M, OMD-DM or HTTP.
     * @return Returns the String
     */
    @JsonGetter("distributionType")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDistributionType() {
        return distributionType;
    }

    /**
     * Setter for DistributionType.
     * LWM2M, OMD-DM or HTTP.
     * @param distributionType Value for String
     */
    @JsonSetter("distributionType")
    public void setDistributionType(String distributionType) {
        this.distributionType = distributionType;
    }

    /**
     * Getter for DevicePlatformId.
     * The platform (Android, iOS, etc.) that the software can be applied to.
     * @return Returns the String
     */
    @JsonGetter("devicePlatformId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDevicePlatformId() {
        return devicePlatformId;
    }

    /**
     * Setter for DevicePlatformId.
     * The platform (Android, iOS, etc.) that the software can be applied to.
     * @param devicePlatformId Value for String
     */
    @JsonSetter("devicePlatformId")
    public void setDevicePlatformId(String devicePlatformId) {
        this.devicePlatformId = devicePlatformId;
    }

    /**
     * Getter for LocalTargetPath.
     * Local target path on the device.
     * @return Returns the String
     */
    @JsonGetter("localTargetPath")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getLocalTargetPath() {
        return localTargetPath;
    }

    /**
     * Setter for LocalTargetPath.
     * Local target path on the device.
     * @param localTargetPath Value for String
     */
    @JsonSetter("localTargetPath")
    public void setLocalTargetPath(String localTargetPath) {
        this.localTargetPath = localTargetPath;
    }

    /**
     * Converts this UploadConfigurationFilesResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "UploadConfigurationFilesResponse [" + "fileName=" + fileName + ", fileVersion="
                + fileVersion + ", launchDate=" + launchDate + ", releaseNote=" + releaseNote
                + ", model=" + model + ", make=" + make + ", distributionType=" + distributionType
                + ", devicePlatformId=" + devicePlatformId + ", localTargetPath=" + localTargetPath
                + "]";
    }

    /**
     * Builds a new {@link UploadConfigurationFilesResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link UploadConfigurationFilesResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .fileName(getFileName())
                .fileVersion(getFileVersion())
                .launchDate(getLaunchDate())
                .releaseNote(getReleaseNote())
                .model(getModel())
                .make(getMake())
                .distributionType(getDistributionType())
                .devicePlatformId(getDevicePlatformId())
                .localTargetPath(getLocalTargetPath());
        return builder;
    }

    /**
     * Class to build instances of {@link UploadConfigurationFilesResponse}.
     */
    public static class Builder {
        private String fileName;
        private String fileVersion;
        private LocalDate launchDate;
        private String releaseNote;
        private String model;
        private String make;
        private String distributionType;
        private String devicePlatformId;
        private String localTargetPath;



        /**
         * Setter for fileName.
         * @param  fileName  String value for fileName.
         * @return Builder
         */
        public Builder fileName(String fileName) {
            this.fileName = fileName;
            return this;
        }

        /**
         * Setter for fileVersion.
         * @param  fileVersion  String value for fileVersion.
         * @return Builder
         */
        public Builder fileVersion(String fileVersion) {
            this.fileVersion = fileVersion;
            return this;
        }

        /**
         * Setter for launchDate.
         * @param  launchDate  LocalDate value for launchDate.
         * @return Builder
         */
        public Builder launchDate(LocalDate launchDate) {
            this.launchDate = launchDate;
            return this;
        }

        /**
         * Setter for releaseNote.
         * @param  releaseNote  String value for releaseNote.
         * @return Builder
         */
        public Builder releaseNote(String releaseNote) {
            this.releaseNote = releaseNote;
            return this;
        }

        /**
         * Setter for model.
         * @param  model  String value for model.
         * @return Builder
         */
        public Builder model(String model) {
            this.model = model;
            return this;
        }

        /**
         * Setter for make.
         * @param  make  String value for make.
         * @return Builder
         */
        public Builder make(String make) {
            this.make = make;
            return this;
        }

        /**
         * Setter for distributionType.
         * @param  distributionType  String value for distributionType.
         * @return Builder
         */
        public Builder distributionType(String distributionType) {
            this.distributionType = distributionType;
            return this;
        }

        /**
         * Setter for devicePlatformId.
         * @param  devicePlatformId  String value for devicePlatformId.
         * @return Builder
         */
        public Builder devicePlatformId(String devicePlatformId) {
            this.devicePlatformId = devicePlatformId;
            return this;
        }

        /**
         * Setter for localTargetPath.
         * @param  localTargetPath  String value for localTargetPath.
         * @return Builder
         */
        public Builder localTargetPath(String localTargetPath) {
            this.localTargetPath = localTargetPath;
            return this;
        }

        /**
         * Builds a new {@link UploadConfigurationFilesResponse} object using the set fields.
         * @return {@link UploadConfigurationFilesResponse}
         */
        public UploadConfigurationFilesResponse build() {
            return new UploadConfigurationFilesResponse(fileName, fileVersion, launchDate,
                    releaseNote, model, make, distributionType, devicePlatformId, localTargetPath);
        }
    }
}
