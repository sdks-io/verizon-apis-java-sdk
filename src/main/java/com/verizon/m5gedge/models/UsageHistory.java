/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.verizon.m5gedge.DateTimeHelper;
import java.time.LocalDateTime;

/**
 * This is a model class for UsageHistory type.
 */
public class UsageHistory {
    private Integer bytesUsed;
    private String serviceplan;
    private Integer smsUsed;
    private Integer moSMS;
    private Integer mtSMS;
    private String source;
    private LocalDateTime eventDateTime;

    /**
     * Default constructor.
     */
    public UsageHistory() {
    }

    /**
     * Initialization constructor.
     * @param  bytesUsed  Integer value for bytesUsed.
     * @param  serviceplan  String value for serviceplan.
     * @param  smsUsed  Integer value for smsUsed.
     * @param  moSMS  Integer value for moSMS.
     * @param  mtSMS  Integer value for mtSMS.
     * @param  source  String value for source.
     * @param  eventDateTime  LocalDateTime value for eventDateTime.
     */
    public UsageHistory(
            Integer bytesUsed,
            String serviceplan,
            Integer smsUsed,
            Integer moSMS,
            Integer mtSMS,
            String source,
            LocalDateTime eventDateTime) {
        this.bytesUsed = bytesUsed;
        this.serviceplan = serviceplan;
        this.smsUsed = smsUsed;
        this.moSMS = moSMS;
        this.mtSMS = mtSMS;
        this.source = source;
        this.eventDateTime = eventDateTime;
    }

    /**
     * Getter for BytesUsed.
     * @return Returns the Integer
     */
    @JsonGetter("bytesUsed")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getBytesUsed() {
        return bytesUsed;
    }

    /**
     * Setter for BytesUsed.
     * @param bytesUsed Value for Integer
     */
    @JsonSetter("bytesUsed")
    public void setBytesUsed(Integer bytesUsed) {
        this.bytesUsed = bytesUsed;
    }

    /**
     * Getter for Serviceplan.
     * @return Returns the String
     */
    @JsonGetter("serviceplan")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getServiceplan() {
        return serviceplan;
    }

    /**
     * Setter for Serviceplan.
     * @param serviceplan Value for String
     */
    @JsonSetter("serviceplan")
    public void setServiceplan(String serviceplan) {
        this.serviceplan = serviceplan;
    }

    /**
     * Getter for SmsUsed.
     * @return Returns the Integer
     */
    @JsonGetter("smsUsed")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getSmsUsed() {
        return smsUsed;
    }

    /**
     * Setter for SmsUsed.
     * @param smsUsed Value for Integer
     */
    @JsonSetter("smsUsed")
    public void setSmsUsed(Integer smsUsed) {
        this.smsUsed = smsUsed;
    }

    /**
     * Getter for MoSMS.
     * @return Returns the Integer
     */
    @JsonGetter("moSMS")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getMoSMS() {
        return moSMS;
    }

    /**
     * Setter for MoSMS.
     * @param moSMS Value for Integer
     */
    @JsonSetter("moSMS")
    public void setMoSMS(Integer moSMS) {
        this.moSMS = moSMS;
    }

    /**
     * Getter for MtSMS.
     * @return Returns the Integer
     */
    @JsonGetter("mtSMS")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getMtSMS() {
        return mtSMS;
    }

    /**
     * Setter for MtSMS.
     * @param mtSMS Value for Integer
     */
    @JsonSetter("mtSMS")
    public void setMtSMS(Integer mtSMS) {
        this.mtSMS = mtSMS;
    }

    /**
     * Getter for Source.
     * @return Returns the String
     */
    @JsonGetter("source")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSource() {
        return source;
    }

    /**
     * Setter for Source.
     * @param source Value for String
     */
    @JsonSetter("source")
    public void setSource(String source) {
        this.source = source;
    }

    /**
     * Getter for EventDateTime.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("eventDateTime")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getEventDateTime() {
        return eventDateTime;
    }

    /**
     * Setter for EventDateTime.
     * @param eventDateTime Value for LocalDateTime
     */
    @JsonSetter("eventDateTime")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setEventDateTime(LocalDateTime eventDateTime) {
        this.eventDateTime = eventDateTime;
    }

    /**
     * Converts this UsageHistory into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "UsageHistory [" + "bytesUsed=" + bytesUsed + ", serviceplan=" + serviceplan
                + ", smsUsed=" + smsUsed + ", moSMS=" + moSMS + ", mtSMS=" + mtSMS + ", source="
                + source + ", eventDateTime=" + eventDateTime + "]";
    }

    /**
     * Builds a new {@link UsageHistory.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link UsageHistory.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .bytesUsed(getBytesUsed())
                .serviceplan(getServiceplan())
                .smsUsed(getSmsUsed())
                .moSMS(getMoSMS())
                .mtSMS(getMtSMS())
                .source(getSource())
                .eventDateTime(getEventDateTime());
        return builder;
    }

    /**
     * Class to build instances of {@link UsageHistory}.
     */
    public static class Builder {
        private Integer bytesUsed;
        private String serviceplan;
        private Integer smsUsed;
        private Integer moSMS;
        private Integer mtSMS;
        private String source;
        private LocalDateTime eventDateTime;



        /**
         * Setter for bytesUsed.
         * @param  bytesUsed  Integer value for bytesUsed.
         * @return Builder
         */
        public Builder bytesUsed(Integer bytesUsed) {
            this.bytesUsed = bytesUsed;
            return this;
        }

        /**
         * Setter for serviceplan.
         * @param  serviceplan  String value for serviceplan.
         * @return Builder
         */
        public Builder serviceplan(String serviceplan) {
            this.serviceplan = serviceplan;
            return this;
        }

        /**
         * Setter for smsUsed.
         * @param  smsUsed  Integer value for smsUsed.
         * @return Builder
         */
        public Builder smsUsed(Integer smsUsed) {
            this.smsUsed = smsUsed;
            return this;
        }

        /**
         * Setter for moSMS.
         * @param  moSMS  Integer value for moSMS.
         * @return Builder
         */
        public Builder moSMS(Integer moSMS) {
            this.moSMS = moSMS;
            return this;
        }

        /**
         * Setter for mtSMS.
         * @param  mtSMS  Integer value for mtSMS.
         * @return Builder
         */
        public Builder mtSMS(Integer mtSMS) {
            this.mtSMS = mtSMS;
            return this;
        }

        /**
         * Setter for source.
         * @param  source  String value for source.
         * @return Builder
         */
        public Builder source(String source) {
            this.source = source;
            return this;
        }

        /**
         * Setter for eventDateTime.
         * @param  eventDateTime  LocalDateTime value for eventDateTime.
         * @return Builder
         */
        public Builder eventDateTime(LocalDateTime eventDateTime) {
            this.eventDateTime = eventDateTime;
            return this;
        }

        /**
         * Builds a new {@link UsageHistory} object using the set fields.
         * @return {@link UsageHistory}
         */
        public UsageHistory build() {
            return new UsageHistory(bytesUsed, serviceplan, smsUsed, moSMS, mtSMS, source,
                    eventDateTime);
        }
    }
}
