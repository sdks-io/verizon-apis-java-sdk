/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for UsageTriggerUpdateRequest type.
 */
public class UsageTriggerUpdateRequest {
    private String triggerName;
    private String accountName;
    private String thresholdValue;
    private String smsPhoneNumbers;
    private String emailAddresses;

    /**
     * Default constructor.
     */
    public UsageTriggerUpdateRequest() {
    }

    /**
     * Initialization constructor.
     * @param  accountName  String value for accountName.
     * @param  triggerName  String value for triggerName.
     * @param  thresholdValue  String value for thresholdValue.
     * @param  smsPhoneNumbers  String value for smsPhoneNumbers.
     * @param  emailAddresses  String value for emailAddresses.
     */
    public UsageTriggerUpdateRequest(
            String accountName,
            String triggerName,
            String thresholdValue,
            String smsPhoneNumbers,
            String emailAddresses) {
        this.triggerName = triggerName;
        this.accountName = accountName;
        this.thresholdValue = thresholdValue;
        this.smsPhoneNumbers = smsPhoneNumbers;
        this.emailAddresses = emailAddresses;
    }

    /**
     * Getter for TriggerName.
     * Usage trigger name
     * @return Returns the String
     */
    @JsonGetter("triggerName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getTriggerName() {
        return triggerName;
    }

    /**
     * Setter for TriggerName.
     * Usage trigger name
     * @param triggerName Value for String
     */
    @JsonSetter("triggerName")
    public void setTriggerName(String triggerName) {
        this.triggerName = triggerName;
    }

    /**
     * Getter for AccountName.
     * Account name
     * @return Returns the String
     */
    @JsonGetter("accountName")
    public String getAccountName() {
        return accountName;
    }

    /**
     * Setter for AccountName.
     * Account name
     * @param accountName Value for String
     */
    @JsonSetter("accountName")
    public void setAccountName(String accountName) {
        this.accountName = accountName;
    }

    /**
     * Getter for ThresholdValue.
     * The percent of subscribed usage required to activate the trigger, such as 90 or 100.
     * @return Returns the String
     */
    @JsonGetter("thresholdValue")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getThresholdValue() {
        return thresholdValue;
    }

    /**
     * Setter for ThresholdValue.
     * The percent of subscribed usage required to activate the trigger, such as 90 or 100.
     * @param thresholdValue Value for String
     */
    @JsonSetter("thresholdValue")
    public void setThresholdValue(String thresholdValue) {
        this.thresholdValue = thresholdValue;
    }

    /**
     * Getter for SmsPhoneNumbers.
     * Comma-separated list of phone numbers to send SMS alerts to. Digits only; no dashes or
     * parentheses, etc.
     * @return Returns the String
     */
    @JsonGetter("smsPhoneNumbers")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSmsPhoneNumbers() {
        return smsPhoneNumbers;
    }

    /**
     * Setter for SmsPhoneNumbers.
     * Comma-separated list of phone numbers to send SMS alerts to. Digits only; no dashes or
     * parentheses, etc.
     * @param smsPhoneNumbers Value for String
     */
    @JsonSetter("smsPhoneNumbers")
    public void setSmsPhoneNumbers(String smsPhoneNumbers) {
        this.smsPhoneNumbers = smsPhoneNumbers;
    }

    /**
     * Getter for EmailAddresses.
     * Comma-separated list of email addresses to send alerts to.
     * @return Returns the String
     */
    @JsonGetter("emailAddresses")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getEmailAddresses() {
        return emailAddresses;
    }

    /**
     * Setter for EmailAddresses.
     * Comma-separated list of email addresses to send alerts to.
     * @param emailAddresses Value for String
     */
    @JsonSetter("emailAddresses")
    public void setEmailAddresses(String emailAddresses) {
        this.emailAddresses = emailAddresses;
    }

    /**
     * Converts this UsageTriggerUpdateRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "UsageTriggerUpdateRequest [" + "accountName=" + accountName + ", triggerName="
                + triggerName + ", thresholdValue=" + thresholdValue + ", smsPhoneNumbers="
                + smsPhoneNumbers + ", emailAddresses=" + emailAddresses + "]";
    }

    /**
     * Builds a new {@link UsageTriggerUpdateRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link UsageTriggerUpdateRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(accountName)
                .triggerName(getTriggerName())
                .thresholdValue(getThresholdValue())
                .smsPhoneNumbers(getSmsPhoneNumbers())
                .emailAddresses(getEmailAddresses());
        return builder;
    }

    /**
     * Class to build instances of {@link UsageTriggerUpdateRequest}.
     */
    public static class Builder {
        private String accountName;
        private String triggerName;
        private String thresholdValue;
        private String smsPhoneNumbers;
        private String emailAddresses;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  accountName  String value for accountName.
         */
        public Builder(String accountName) {
            this.accountName = accountName;
        }

        /**
         * Setter for accountName.
         * @param  accountName  String value for accountName.
         * @return Builder
         */
        public Builder accountName(String accountName) {
            this.accountName = accountName;
            return this;
        }

        /**
         * Setter for triggerName.
         * @param  triggerName  String value for triggerName.
         * @return Builder
         */
        public Builder triggerName(String triggerName) {
            this.triggerName = triggerName;
            return this;
        }

        /**
         * Setter for thresholdValue.
         * @param  thresholdValue  String value for thresholdValue.
         * @return Builder
         */
        public Builder thresholdValue(String thresholdValue) {
            this.thresholdValue = thresholdValue;
            return this;
        }

        /**
         * Setter for smsPhoneNumbers.
         * @param  smsPhoneNumbers  String value for smsPhoneNumbers.
         * @return Builder
         */
        public Builder smsPhoneNumbers(String smsPhoneNumbers) {
            this.smsPhoneNumbers = smsPhoneNumbers;
            return this;
        }

        /**
         * Setter for emailAddresses.
         * @param  emailAddresses  String value for emailAddresses.
         * @return Builder
         */
        public Builder emailAddresses(String emailAddresses) {
            this.emailAddresses = emailAddresses;
            return this;
        }

        /**
         * Builds a new {@link UsageTriggerUpdateRequest} object using the set fields.
         * @return {@link UsageTriggerUpdateRequest}
         */
        public UsageTriggerUpdateRequest build() {
            return new UsageTriggerUpdateRequest(accountName, triggerName, thresholdValue,
                    smsPhoneNumbers, emailAddresses);
        }
    }
}
