/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.verizon.m5gedge.DateTimeHelper;
import java.time.LocalDateTime;
import java.util.List;

/**
 * This is a model class for V1ListOfLicensesToRemove type.
 */
public class V1ListOfLicensesToRemove {
    private Integer count;
    private Boolean hasMoreData;
    private LocalDateTime updateTime;
    private List<String> deviceList;

    /**
     * Default constructor.
     */
    public V1ListOfLicensesToRemove() {
    }

    /**
     * Initialization constructor.
     * @param  count  Integer value for count.
     * @param  hasMoreData  Boolean value for hasMoreData.
     * @param  updateTime  LocalDateTime value for updateTime.
     * @param  deviceList  List of String value for deviceList.
     */
    public V1ListOfLicensesToRemove(
            Integer count,
            Boolean hasMoreData,
            LocalDateTime updateTime,
            List<String> deviceList) {
        this.count = count;
        this.hasMoreData = hasMoreData;
        this.updateTime = updateTime;
        this.deviceList = deviceList;
    }

    /**
     * Getter for Count.
     * The total number of devices on the list.
     * @return Returns the Integer
     */
    @JsonGetter("count")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getCount() {
        return count;
    }

    /**
     * Setter for Count.
     * The total number of devices on the list.
     * @param count Value for Integer
     */
    @JsonSetter("count")
    public void setCount(Integer count) {
        this.count = count;
    }

    /**
     * Getter for HasMoreData.
     * True if there are more devices to retrieve.
     * @return Returns the Boolean
     */
    @JsonGetter("hasMoreData")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getHasMoreData() {
        return hasMoreData;
    }

    /**
     * Setter for HasMoreData.
     * True if there are more devices to retrieve.
     * @param hasMoreData Value for Boolean
     */
    @JsonSetter("hasMoreData")
    public void setHasMoreData(Boolean hasMoreData) {
        this.hasMoreData = hasMoreData;
    }

    /**
     * Getter for UpdateTime.
     * The date and time that the list was last updated.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("updateTime")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getUpdateTime() {
        return updateTime;
    }

    /**
     * Setter for UpdateTime.
     * The date and time that the list was last updated.
     * @param updateTime Value for LocalDateTime
     */
    @JsonSetter("updateTime")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setUpdateTime(LocalDateTime updateTime) {
        this.updateTime = updateTime;
    }

    /**
     * Getter for DeviceList.
     * The IMEIs of the devices.
     * @return Returns the List of String
     */
    @JsonGetter("deviceList")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<String> getDeviceList() {
        return deviceList;
    }

    /**
     * Setter for DeviceList.
     * The IMEIs of the devices.
     * @param deviceList Value for List of String
     */
    @JsonSetter("deviceList")
    public void setDeviceList(List<String> deviceList) {
        this.deviceList = deviceList;
    }

    /**
     * Converts this V1ListOfLicensesToRemove into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "V1ListOfLicensesToRemove [" + "count=" + count + ", hasMoreData=" + hasMoreData
                + ", updateTime=" + updateTime + ", deviceList=" + deviceList + "]";
    }

    /**
     * Builds a new {@link V1ListOfLicensesToRemove.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link V1ListOfLicensesToRemove.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .count(getCount())
                .hasMoreData(getHasMoreData())
                .updateTime(getUpdateTime())
                .deviceList(getDeviceList());
        return builder;
    }

    /**
     * Class to build instances of {@link V1ListOfLicensesToRemove}.
     */
    public static class Builder {
        private Integer count;
        private Boolean hasMoreData;
        private LocalDateTime updateTime;
        private List<String> deviceList;



        /**
         * Setter for count.
         * @param  count  Integer value for count.
         * @return Builder
         */
        public Builder count(Integer count) {
            this.count = count;
            return this;
        }

        /**
         * Setter for hasMoreData.
         * @param  hasMoreData  Boolean value for hasMoreData.
         * @return Builder
         */
        public Builder hasMoreData(Boolean hasMoreData) {
            this.hasMoreData = hasMoreData;
            return this;
        }

        /**
         * Setter for updateTime.
         * @param  updateTime  LocalDateTime value for updateTime.
         * @return Builder
         */
        public Builder updateTime(LocalDateTime updateTime) {
            this.updateTime = updateTime;
            return this;
        }

        /**
         * Setter for deviceList.
         * @param  deviceList  List of String value for deviceList.
         * @return Builder
         */
        public Builder deviceList(List<String> deviceList) {
            this.deviceList = deviceList;
            return this;
        }

        /**
         * Builds a new {@link V1ListOfLicensesToRemove} object using the set fields.
         * @return {@link V1ListOfLicensesToRemove}
         */
        public V1ListOfLicensesToRemove build() {
            return new V1ListOfLicensesToRemove(count, hasMoreData, updateTime, deviceList);
        }
    }
}
