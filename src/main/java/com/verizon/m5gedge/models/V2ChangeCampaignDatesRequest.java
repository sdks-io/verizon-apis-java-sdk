/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.verizon.m5gedge.DateTimeHelper;
import java.time.LocalDate;
import java.util.List;

/**
 * This is a model class for V2ChangeCampaignDatesRequest type.
 */
public class V2ChangeCampaignDatesRequest {
    private LocalDate startDate;
    private LocalDate endDate;
    private LocalDate downloadAfterDate;
    private List<V2TimeWindow> downloadTimeWindowList;
    private LocalDate installAfterDate;
    private List<V2TimeWindow> installTimeWindowList;

    /**
     * Default constructor.
     */
    public V2ChangeCampaignDatesRequest() {
    }

    /**
     * Initialization constructor.
     * @param  startDate  LocalDate value for startDate.
     * @param  endDate  LocalDate value for endDate.
     * @param  downloadAfterDate  LocalDate value for downloadAfterDate.
     * @param  downloadTimeWindowList  List of V2TimeWindow value for downloadTimeWindowList.
     * @param  installAfterDate  LocalDate value for installAfterDate.
     * @param  installTimeWindowList  List of V2TimeWindow value for installTimeWindowList.
     */
    public V2ChangeCampaignDatesRequest(
            LocalDate startDate,
            LocalDate endDate,
            LocalDate downloadAfterDate,
            List<V2TimeWindow> downloadTimeWindowList,
            LocalDate installAfterDate,
            List<V2TimeWindow> installTimeWindowList) {
        this.startDate = startDate;
        this.endDate = endDate;
        this.downloadAfterDate = downloadAfterDate;
        this.downloadTimeWindowList = downloadTimeWindowList;
        this.installAfterDate = installAfterDate;
        this.installTimeWindowList = installTimeWindowList;
    }

    /**
     * Getter for StartDate.
     * Campaign start date.
     * @return Returns the LocalDate
     */
    @JsonGetter("startDate")
    @JsonSerialize(using = DateTimeHelper.SimpleDateSerializer.class)
    public LocalDate getStartDate() {
        return startDate;
    }

    /**
     * Setter for StartDate.
     * Campaign start date.
     * @param startDate Value for LocalDate
     */
    @JsonSetter("startDate")
    @JsonDeserialize(using = DateTimeHelper.SimpleDateDeserializer.class)
    public void setStartDate(LocalDate startDate) {
        this.startDate = startDate;
    }

    /**
     * Getter for EndDate.
     * Campaign end date.
     * @return Returns the LocalDate
     */
    @JsonGetter("endDate")
    @JsonSerialize(using = DateTimeHelper.SimpleDateSerializer.class)
    public LocalDate getEndDate() {
        return endDate;
    }

    /**
     * Setter for EndDate.
     * Campaign end date.
     * @param endDate Value for LocalDate
     */
    @JsonSetter("endDate")
    @JsonDeserialize(using = DateTimeHelper.SimpleDateDeserializer.class)
    public void setEndDate(LocalDate endDate) {
        this.endDate = endDate;
    }

    /**
     * Getter for DownloadAfterDate.
     * Specifies starting date client should download package. If null, client will download as soon
     * as possible.
     * @return Returns the LocalDate
     */
    @JsonGetter("downloadAfterDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.SimpleDateSerializer.class)
    public LocalDate getDownloadAfterDate() {
        return downloadAfterDate;
    }

    /**
     * Setter for DownloadAfterDate.
     * Specifies starting date client should download package. If null, client will download as soon
     * as possible.
     * @param downloadAfterDate Value for LocalDate
     */
    @JsonSetter("downloadAfterDate")
    @JsonDeserialize(using = DateTimeHelper.SimpleDateDeserializer.class)
    public void setDownloadAfterDate(LocalDate downloadAfterDate) {
        this.downloadAfterDate = downloadAfterDate;
    }

    /**
     * Getter for DownloadTimeWindowList.
     * List of allowed download time windows. Removing of existing windows is not allowed.
     * @return Returns the List of V2TimeWindow
     */
    @JsonGetter("downloadTimeWindowList")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<V2TimeWindow> getDownloadTimeWindowList() {
        return downloadTimeWindowList;
    }

    /**
     * Setter for DownloadTimeWindowList.
     * List of allowed download time windows. Removing of existing windows is not allowed.
     * @param downloadTimeWindowList Value for List of V2TimeWindow
     */
    @JsonSetter("downloadTimeWindowList")
    public void setDownloadTimeWindowList(List<V2TimeWindow> downloadTimeWindowList) {
        this.downloadTimeWindowList = downloadTimeWindowList;
    }

    /**
     * Getter for InstallAfterDate.
     * Client will install package after date. If null, client will install as soon as possible.
     * @return Returns the LocalDate
     */
    @JsonGetter("installAfterDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.SimpleDateSerializer.class)
    public LocalDate getInstallAfterDate() {
        return installAfterDate;
    }

    /**
     * Setter for InstallAfterDate.
     * Client will install package after date. If null, client will install as soon as possible.
     * @param installAfterDate Value for LocalDate
     */
    @JsonSetter("installAfterDate")
    @JsonDeserialize(using = DateTimeHelper.SimpleDateDeserializer.class)
    public void setInstallAfterDate(LocalDate installAfterDate) {
        this.installAfterDate = installAfterDate;
    }

    /**
     * Getter for InstallTimeWindowList.
     * List of allowed install time windows. Removing of existing windows is not allowed.
     * @return Returns the List of V2TimeWindow
     */
    @JsonGetter("installTimeWindowList")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<V2TimeWindow> getInstallTimeWindowList() {
        return installTimeWindowList;
    }

    /**
     * Setter for InstallTimeWindowList.
     * List of allowed install time windows. Removing of existing windows is not allowed.
     * @param installTimeWindowList Value for List of V2TimeWindow
     */
    @JsonSetter("installTimeWindowList")
    public void setInstallTimeWindowList(List<V2TimeWindow> installTimeWindowList) {
        this.installTimeWindowList = installTimeWindowList;
    }

    /**
     * Converts this V2ChangeCampaignDatesRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "V2ChangeCampaignDatesRequest [" + "startDate=" + startDate + ", endDate=" + endDate
                + ", downloadAfterDate=" + downloadAfterDate + ", downloadTimeWindowList="
                + downloadTimeWindowList + ", installAfterDate=" + installAfterDate
                + ", installTimeWindowList=" + installTimeWindowList + "]";
    }

    /**
     * Builds a new {@link V2ChangeCampaignDatesRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link V2ChangeCampaignDatesRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(startDate, endDate)
                .downloadAfterDate(getDownloadAfterDate())
                .downloadTimeWindowList(getDownloadTimeWindowList())
                .installAfterDate(getInstallAfterDate())
                .installTimeWindowList(getInstallTimeWindowList());
        return builder;
    }

    /**
     * Class to build instances of {@link V2ChangeCampaignDatesRequest}.
     */
    public static class Builder {
        private LocalDate startDate;
        private LocalDate endDate;
        private LocalDate downloadAfterDate;
        private List<V2TimeWindow> downloadTimeWindowList;
        private LocalDate installAfterDate;
        private List<V2TimeWindow> installTimeWindowList;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  startDate  LocalDate value for startDate.
         * @param  endDate  LocalDate value for endDate.
         */
        public Builder(LocalDate startDate, LocalDate endDate) {
            this.startDate = startDate;
            this.endDate = endDate;
        }

        /**
         * Setter for startDate.
         * @param  startDate  LocalDate value for startDate.
         * @return Builder
         */
        public Builder startDate(LocalDate startDate) {
            this.startDate = startDate;
            return this;
        }

        /**
         * Setter for endDate.
         * @param  endDate  LocalDate value for endDate.
         * @return Builder
         */
        public Builder endDate(LocalDate endDate) {
            this.endDate = endDate;
            return this;
        }

        /**
         * Setter for downloadAfterDate.
         * @param  downloadAfterDate  LocalDate value for downloadAfterDate.
         * @return Builder
         */
        public Builder downloadAfterDate(LocalDate downloadAfterDate) {
            this.downloadAfterDate = downloadAfterDate;
            return this;
        }

        /**
         * Setter for downloadTimeWindowList.
         * @param  downloadTimeWindowList  List of V2TimeWindow value for downloadTimeWindowList.
         * @return Builder
         */
        public Builder downloadTimeWindowList(List<V2TimeWindow> downloadTimeWindowList) {
            this.downloadTimeWindowList = downloadTimeWindowList;
            return this;
        }

        /**
         * Setter for installAfterDate.
         * @param  installAfterDate  LocalDate value for installAfterDate.
         * @return Builder
         */
        public Builder installAfterDate(LocalDate installAfterDate) {
            this.installAfterDate = installAfterDate;
            return this;
        }

        /**
         * Setter for installTimeWindowList.
         * @param  installTimeWindowList  List of V2TimeWindow value for installTimeWindowList.
         * @return Builder
         */
        public Builder installTimeWindowList(List<V2TimeWindow> installTimeWindowList) {
            this.installTimeWindowList = installTimeWindowList;
            return this;
        }

        /**
         * Builds a new {@link V2ChangeCampaignDatesRequest} object using the set fields.
         * @return {@link V2ChangeCampaignDatesRequest}
         */
        public V2ChangeCampaignDatesRequest build() {
            return new V2ChangeCampaignDatesRequest(startDate, endDate, downloadAfterDate,
                    downloadTimeWindowList, installAfterDate, installTimeWindowList);
        }
    }
}
