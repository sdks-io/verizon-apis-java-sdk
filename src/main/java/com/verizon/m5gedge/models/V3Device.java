/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.verizon.m5gedge.DateTimeHelper;
import java.time.LocalDateTime;
import java.util.List;

/**
 * This is a model class for V3Device type.
 */
public class V3Device {
    private String deviceId;
    private String requestStatus;
    private String resultReason;
    private String mdn;
    private String model;
    private String make;
    private String firmware;
    private Boolean fotaEligible;
    private String status;
    private Boolean licenseAssigned;
    private String protocol;
    private List<V3SoftwareInfo> softwareList;
    private List<V3SoftwareInfo> fileList;
    private String createTime;
    private String statusTime;
    private String updateTime;
    private String refreshTime;
    private LocalDateTime lastConnectionTime;

    /**
     * Default constructor.
     */
    public V3Device() {
    }

    /**
     * Initialization constructor.
     * @param  deviceId  String value for deviceId.
     * @param  requestStatus  String value for requestStatus.
     * @param  resultReason  String value for resultReason.
     * @param  mdn  String value for mdn.
     * @param  model  String value for model.
     * @param  make  String value for make.
     * @param  firmware  String value for firmware.
     * @param  fotaEligible  Boolean value for fotaEligible.
     * @param  status  String value for status.
     * @param  licenseAssigned  Boolean value for licenseAssigned.
     * @param  protocol  String value for protocol.
     * @param  softwareList  List of V3SoftwareInfo value for softwareList.
     * @param  fileList  List of V3SoftwareInfo value for fileList.
     * @param  createTime  String value for createTime.
     * @param  statusTime  String value for statusTime.
     * @param  updateTime  String value for updateTime.
     * @param  refreshTime  String value for refreshTime.
     * @param  lastConnectionTime  LocalDateTime value for lastConnectionTime.
     */
    public V3Device(
            String deviceId,
            String requestStatus,
            String resultReason,
            String mdn,
            String model,
            String make,
            String firmware,
            Boolean fotaEligible,
            String status,
            Boolean licenseAssigned,
            String protocol,
            List<V3SoftwareInfo> softwareList,
            List<V3SoftwareInfo> fileList,
            String createTime,
            String statusTime,
            String updateTime,
            String refreshTime,
            LocalDateTime lastConnectionTime) {
        this.deviceId = deviceId;
        this.requestStatus = requestStatus;
        this.resultReason = resultReason;
        this.mdn = mdn;
        this.model = model;
        this.make = make;
        this.firmware = firmware;
        this.fotaEligible = fotaEligible;
        this.status = status;
        this.licenseAssigned = licenseAssigned;
        this.protocol = protocol;
        this.softwareList = softwareList;
        this.fileList = fileList;
        this.createTime = createTime;
        this.statusTime = statusTime;
        this.updateTime = updateTime;
        this.refreshTime = refreshTime;
        this.lastConnectionTime = lastConnectionTime;
    }

    /**
     * Getter for DeviceId.
     * Device IMEI.
     * @return Returns the String
     */
    @JsonGetter("deviceId")
    public String getDeviceId() {
        return deviceId;
    }

    /**
     * Setter for DeviceId.
     * Device IMEI.
     * @param deviceId Value for String
     */
    @JsonSetter("deviceId")
    public void setDeviceId(String deviceId) {
        this.deviceId = deviceId;
    }

    /**
     * Getter for RequestStatus.
     * Success or failure.
     * @return Returns the String
     */
    @JsonGetter("requestStatus")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getRequestStatus() {
        return requestStatus;
    }

    /**
     * Setter for RequestStatus.
     * Success or failure.
     * @param requestStatus Value for String
     */
    @JsonSetter("requestStatus")
    public void setRequestStatus(String requestStatus) {
        this.requestStatus = requestStatus;
    }

    /**
     * Getter for ResultReason.
     * @return Returns the String
     */
    @JsonGetter("resultReason")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getResultReason() {
        return resultReason;
    }

    /**
     * Setter for ResultReason.
     * @param resultReason Value for String
     */
    @JsonSetter("resultReason")
    public void setResultReason(String resultReason) {
        this.resultReason = resultReason;
    }

    /**
     * Getter for Mdn.
     * MDN.
     * @return Returns the String
     */
    @JsonGetter("mdn")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getMdn() {
        return mdn;
    }

    /**
     * Setter for Mdn.
     * MDN.
     * @param mdn Value for String
     */
    @JsonSetter("mdn")
    public void setMdn(String mdn) {
        this.mdn = mdn;
    }

    /**
     * Getter for Model.
     * Device model.
     * @return Returns the String
     */
    @JsonGetter("model")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getModel() {
        return model;
    }

    /**
     * Setter for Model.
     * Device model.
     * @param model Value for String
     */
    @JsonSetter("model")
    public void setModel(String model) {
        this.model = model;
    }

    /**
     * Getter for Make.
     * Device make.
     * @return Returns the String
     */
    @JsonGetter("make")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getMake() {
        return make;
    }

    /**
     * Setter for Make.
     * Device make.
     * @param make Value for String
     */
    @JsonSetter("make")
    public void setMake(String make) {
        this.make = make;
    }

    /**
     * Getter for Firmware.
     * Device firmware version.
     * @return Returns the String
     */
    @JsonGetter("firmware")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getFirmware() {
        return firmware;
    }

    /**
     * Setter for Firmware.
     * Device firmware version.
     * @param firmware Value for String
     */
    @JsonSetter("firmware")
    public void setFirmware(String firmware) {
        this.firmware = firmware;
    }

    /**
     * Getter for FotaEligible.
     * Value=true if the device software can be upgraded over the air using the Software Management
     * Services API.
     * @return Returns the Boolean
     */
    @JsonGetter("fotaEligible")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getFotaEligible() {
        return fotaEligible;
    }

    /**
     * Setter for FotaEligible.
     * Value=true if the device software can be upgraded over the air using the Software Management
     * Services API.
     * @param fotaEligible Value for Boolean
     */
    @JsonSetter("fotaEligible")
    public void setFotaEligible(Boolean fotaEligible) {
        this.fotaEligible = fotaEligible;
    }

    /**
     * Getter for Status.
     * Device status.
     * @return Returns the String
     */
    @JsonGetter("status")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getStatus() {
        return status;
    }

    /**
     * Setter for Status.
     * Device status.
     * @param status Value for String
     */
    @JsonSetter("status")
    public void setStatus(String status) {
        this.status = status;
    }

    /**
     * Getter for LicenseAssigned.
     * License assigned device.
     * @return Returns the Boolean
     */
    @JsonGetter("licenseAssigned")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getLicenseAssigned() {
        return licenseAssigned;
    }

    /**
     * Setter for LicenseAssigned.
     * License assigned device.
     * @param licenseAssigned Value for Boolean
     */
    @JsonSetter("licenseAssigned")
    public void setLicenseAssigned(Boolean licenseAssigned) {
        this.licenseAssigned = licenseAssigned;
    }

    /**
     * Getter for Protocol.
     * Firmware protocol. Valid values include: LWM2M, OMADM, HTTP or NONE.
     * @return Returns the String
     */
    @JsonGetter("protocol")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getProtocol() {
        return protocol;
    }

    /**
     * Setter for Protocol.
     * Firmware protocol. Valid values include: LWM2M, OMADM, HTTP or NONE.
     * @param protocol Value for String
     */
    @JsonSetter("protocol")
    public void setProtocol(String protocol) {
        this.protocol = protocol;
    }

    /**
     * Getter for SoftwareList.
     * List of sofware.
     * @return Returns the List of V3SoftwareInfo
     */
    @JsonGetter("softwareList")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<V3SoftwareInfo> getSoftwareList() {
        return softwareList;
    }

    /**
     * Setter for SoftwareList.
     * List of sofware.
     * @param softwareList Value for List of V3SoftwareInfo
     */
    @JsonSetter("softwareList")
    public void setSoftwareList(List<V3SoftwareInfo> softwareList) {
        this.softwareList = softwareList;
    }

    /**
     * Getter for FileList.
     * List of files.
     * @return Returns the List of V3SoftwareInfo
     */
    @JsonGetter("fileList")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<V3SoftwareInfo> getFileList() {
        return fileList;
    }

    /**
     * Setter for FileList.
     * List of files.
     * @param fileList Value for List of V3SoftwareInfo
     */
    @JsonSetter("fileList")
    public void setFileList(List<V3SoftwareInfo> fileList) {
        this.fileList = fileList;
    }

    /**
     * Getter for CreateTime.
     * The date and time of when the device is created.
     * @return Returns the String
     */
    @JsonGetter("createTime")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCreateTime() {
        return createTime;
    }

    /**
     * Setter for CreateTime.
     * The date and time of when the device is created.
     * @param createTime Value for String
     */
    @JsonSetter("createTime")
    public void setCreateTime(String createTime) {
        this.createTime = createTime;
    }

    /**
     * Getter for StatusTime.
     * The date and time of when the device firmware or software is updated.
     * @return Returns the String
     */
    @JsonGetter("statusTime")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getStatusTime() {
        return statusTime;
    }

    /**
     * Setter for StatusTime.
     * The date and time of when the device firmware or software is updated.
     * @param statusTime Value for String
     */
    @JsonSetter("statusTime")
    public void setStatusTime(String statusTime) {
        this.statusTime = statusTime;
    }

    /**
     * Getter for UpdateTime.
     * The date and time of when the device is updated.
     * @return Returns the String
     */
    @JsonGetter("updateTime")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getUpdateTime() {
        return updateTime;
    }

    /**
     * Setter for UpdateTime.
     * The date and time of when the device is updated.
     * @param updateTime Value for String
     */
    @JsonSetter("updateTime")
    public void setUpdateTime(String updateTime) {
        this.updateTime = updateTime;
    }

    /**
     * Getter for RefreshTime.
     * The date and time of when the device is refreshed.
     * @return Returns the String
     */
    @JsonGetter("refreshTime")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getRefreshTime() {
        return refreshTime;
    }

    /**
     * Setter for RefreshTime.
     * The date and time of when the device is refreshed.
     * @param refreshTime Value for String
     */
    @JsonSetter("refreshTime")
    public void setRefreshTime(String refreshTime) {
        this.refreshTime = refreshTime;
    }

    /**
     * Getter for LastConnectionTime.
     * The date and time of when the device reachability is checked.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("lastConnectionTime")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getLastConnectionTime() {
        return lastConnectionTime;
    }

    /**
     * Setter for LastConnectionTime.
     * The date and time of when the device reachability is checked.
     * @param lastConnectionTime Value for LocalDateTime
     */
    @JsonSetter("lastConnectionTime")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setLastConnectionTime(LocalDateTime lastConnectionTime) {
        this.lastConnectionTime = lastConnectionTime;
    }

    /**
     * Converts this V3Device into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "V3Device [" + "deviceId=" + deviceId + ", requestStatus=" + requestStatus
                + ", resultReason=" + resultReason + ", mdn=" + mdn + ", model=" + model + ", make="
                + make + ", firmware=" + firmware + ", fotaEligible=" + fotaEligible + ", status="
                + status + ", licenseAssigned=" + licenseAssigned + ", protocol=" + protocol
                + ", softwareList=" + softwareList + ", fileList=" + fileList + ", createTime="
                + createTime + ", statusTime=" + statusTime + ", updateTime=" + updateTime
                + ", refreshTime=" + refreshTime + ", lastConnectionTime=" + lastConnectionTime
                + "]";
    }

    /**
     * Builds a new {@link V3Device.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link V3Device.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(deviceId)
                .requestStatus(getRequestStatus())
                .resultReason(getResultReason())
                .mdn(getMdn())
                .model(getModel())
                .make(getMake())
                .firmware(getFirmware())
                .fotaEligible(getFotaEligible())
                .status(getStatus())
                .licenseAssigned(getLicenseAssigned())
                .protocol(getProtocol())
                .softwareList(getSoftwareList())
                .fileList(getFileList())
                .createTime(getCreateTime())
                .statusTime(getStatusTime())
                .updateTime(getUpdateTime())
                .refreshTime(getRefreshTime())
                .lastConnectionTime(getLastConnectionTime());
        return builder;
    }

    /**
     * Class to build instances of {@link V3Device}.
     */
    public static class Builder {
        private String deviceId;
        private String requestStatus;
        private String resultReason;
        private String mdn;
        private String model;
        private String make;
        private String firmware;
        private Boolean fotaEligible;
        private String status;
        private Boolean licenseAssigned;
        private String protocol;
        private List<V3SoftwareInfo> softwareList;
        private List<V3SoftwareInfo> fileList;
        private String createTime;
        private String statusTime;
        private String updateTime;
        private String refreshTime;
        private LocalDateTime lastConnectionTime;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  deviceId  String value for deviceId.
         */
        public Builder(String deviceId) {
            this.deviceId = deviceId;
        }

        /**
         * Setter for deviceId.
         * @param  deviceId  String value for deviceId.
         * @return Builder
         */
        public Builder deviceId(String deviceId) {
            this.deviceId = deviceId;
            return this;
        }

        /**
         * Setter for requestStatus.
         * @param  requestStatus  String value for requestStatus.
         * @return Builder
         */
        public Builder requestStatus(String requestStatus) {
            this.requestStatus = requestStatus;
            return this;
        }

        /**
         * Setter for resultReason.
         * @param  resultReason  String value for resultReason.
         * @return Builder
         */
        public Builder resultReason(String resultReason) {
            this.resultReason = resultReason;
            return this;
        }

        /**
         * Setter for mdn.
         * @param  mdn  String value for mdn.
         * @return Builder
         */
        public Builder mdn(String mdn) {
            this.mdn = mdn;
            return this;
        }

        /**
         * Setter for model.
         * @param  model  String value for model.
         * @return Builder
         */
        public Builder model(String model) {
            this.model = model;
            return this;
        }

        /**
         * Setter for make.
         * @param  make  String value for make.
         * @return Builder
         */
        public Builder make(String make) {
            this.make = make;
            return this;
        }

        /**
         * Setter for firmware.
         * @param  firmware  String value for firmware.
         * @return Builder
         */
        public Builder firmware(String firmware) {
            this.firmware = firmware;
            return this;
        }

        /**
         * Setter for fotaEligible.
         * @param  fotaEligible  Boolean value for fotaEligible.
         * @return Builder
         */
        public Builder fotaEligible(Boolean fotaEligible) {
            this.fotaEligible = fotaEligible;
            return this;
        }

        /**
         * Setter for status.
         * @param  status  String value for status.
         * @return Builder
         */
        public Builder status(String status) {
            this.status = status;
            return this;
        }

        /**
         * Setter for licenseAssigned.
         * @param  licenseAssigned  Boolean value for licenseAssigned.
         * @return Builder
         */
        public Builder licenseAssigned(Boolean licenseAssigned) {
            this.licenseAssigned = licenseAssigned;
            return this;
        }

        /**
         * Setter for protocol.
         * @param  protocol  String value for protocol.
         * @return Builder
         */
        public Builder protocol(String protocol) {
            this.protocol = protocol;
            return this;
        }

        /**
         * Setter for softwareList.
         * @param  softwareList  List of V3SoftwareInfo value for softwareList.
         * @return Builder
         */
        public Builder softwareList(List<V3SoftwareInfo> softwareList) {
            this.softwareList = softwareList;
            return this;
        }

        /**
         * Setter for fileList.
         * @param  fileList  List of V3SoftwareInfo value for fileList.
         * @return Builder
         */
        public Builder fileList(List<V3SoftwareInfo> fileList) {
            this.fileList = fileList;
            return this;
        }

        /**
         * Setter for createTime.
         * @param  createTime  String value for createTime.
         * @return Builder
         */
        public Builder createTime(String createTime) {
            this.createTime = createTime;
            return this;
        }

        /**
         * Setter for statusTime.
         * @param  statusTime  String value for statusTime.
         * @return Builder
         */
        public Builder statusTime(String statusTime) {
            this.statusTime = statusTime;
            return this;
        }

        /**
         * Setter for updateTime.
         * @param  updateTime  String value for updateTime.
         * @return Builder
         */
        public Builder updateTime(String updateTime) {
            this.updateTime = updateTime;
            return this;
        }

        /**
         * Setter for refreshTime.
         * @param  refreshTime  String value for refreshTime.
         * @return Builder
         */
        public Builder refreshTime(String refreshTime) {
            this.refreshTime = refreshTime;
            return this;
        }

        /**
         * Setter for lastConnectionTime.
         * @param  lastConnectionTime  LocalDateTime value for lastConnectionTime.
         * @return Builder
         */
        public Builder lastConnectionTime(LocalDateTime lastConnectionTime) {
            this.lastConnectionTime = lastConnectionTime;
            return this;
        }

        /**
         * Builds a new {@link V3Device} object using the set fields.
         * @return {@link V3Device}
         */
        public V3Device build() {
            return new V3Device(deviceId, requestStatus, resultReason, mdn, model, make, firmware,
                    fotaEligible, status, licenseAssigned, protocol, softwareList, fileList,
                    createTime, statusTime, updateTime, refreshTime, lastConnectionTime);
        }
    }
}
