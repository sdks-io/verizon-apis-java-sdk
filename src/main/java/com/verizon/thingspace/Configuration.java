/*
 * VerizonThingSpaceQualityOfServiceAPIEndpointsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.thingspace;

import com.verizon.thingspace.authentication.ThingspaceOauthCredentials;
import com.verizon.thingspace.authentication.ThingspaceOauthModel;
import com.verizon.thingspace.authentication.VzM2mSessionTokenCredentials;
import com.verizon.thingspace.authentication.VzM2mSessionTokenModel;
import com.verizon.thingspace.http.client.ReadonlyHttpClientConfiguration;

/**
 * Configuration Interface for the library.
 */
public interface Configuration {

    /**
     * Current API environment.
     * @return a copy of environment
     */
    Environment getEnvironment();

    /**
     * The VZ-M2M session token from [Getting Started](/content/thingspace-portal/documentation/apis/connectivity-management/get-started.html).
     * @return a copy of vZM2MToken2
     */
    String getVZM2MToken2();

    /**
     * Http Client Configuration instance.
     * @return a copy of httpClientConfig
     */
    ReadonlyHttpClientConfiguration getHttpClientConfig();

    /**
     * The timeout to use for making HTTP requests. The timeout to use for making HTTP requests.
     * @return a copy of timeout
     */
    long timeout();

    /**
     * The credentials to use with ThingspaceOauth.
     * @return thingspaceOauthCredentials
     */
    ThingspaceOauthCredentials getThingspaceOauthCredentials();

    /**
     * The auth credential model for ThingspaceOauth.
     * @return the instance of ThingspaceOauthModel
     */
    ThingspaceOauthModel getThingspaceOauthModel();

    /**
     * The credentials to use with VzM2mSessionToken.
     * @return vzM2mSessionTokenCredentials
     */
    VzM2mSessionTokenCredentials getVzM2mSessionTokenCredentials();

    /**
     * The auth credential model for VzM2mSessionToken.
     * @return the instance of VzM2mSessionTokenModel
     */
    VzM2mSessionTokenModel getVzM2mSessionTokenModel();

    /**
     * Get base URI by current environment.
     * @param server Server for which to get the base URI
     * @return Processed base URI
     */
    String getBaseUri(Server server);

    /**
     * Get base URI by current environment.
     * @return Processed base URI
     */
    String getBaseUri();
}
