/*
 * VerizonThingSpaceQualityOfServiceAPIEndpointsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.thingspace.controllers;

import com.verizon.thingspace.Environment;
import com.verizon.thingspace.VerizonThingSpaceQualityOfServiceAPIEndpointsClient;
import com.verizon.thingspace.authentication.ThingspaceOauthModel;
import com.verizon.thingspace.authentication.VzM2mSessionTokenModel;
import com.verizon.thingspace.testing.HttpCallbackCatcher;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.Rule;
import org.junit.rules.Timeout;

/**
 * Base class for all test cases.
 */
public class BaseControllerTest {
    /**
     * Test configuration.
     */
    public static final int REQUEST_TIMEOUT = 30;

    public static final double ASSERT_PRECISION = 0.01;
    
    /**
     * Global rules for tests.
     */
    @Rule
    public Timeout globalTimeout = Timeout.seconds(REQUEST_TIMEOUT);
    
    /**
     * Test fixtures,
     * Used to serve as HttpCallback and to capture request & response.
     */

    protected static HttpCallbackCatcher httpResponse;
    
    /**
     * Setup test.
     */
    @BeforeClass
    public static void setUp() throws Exception {
        httpResponse = new HttpCallbackCatcher(); 
    }

    /**
     * Tear down test.
     */
    @AfterClass
    public static void tearDown() throws Exception {
        httpResponse = null;
    }

    /**
     * Create test configuration from Environment variables.
     */
    protected static VerizonThingSpaceQualityOfServiceAPIEndpointsClient createConfigurationFromEnvironment() {
        VerizonThingSpaceQualityOfServiceAPIEndpointsClient.Builder builder =
                new VerizonThingSpaceQualityOfServiceAPIEndpointsClient.Builder();

        final String environment =
                System.getenv("VERIZON_THING_SPACE_QUALITY_OF_SERVICE_API_ENDPOINTS_LIB_ENVIRONMENT");
        final String vZM2MToken2 =
                System.getenv("VERIZON_THING_SPACE_QUALITY_OF_SERVICE_API_ENDPOINTS_LIB_V_ZM_2_M_TOKEN_2");
        final String timeout =
                System.getenv("VERIZON_THING_SPACE_QUALITY_OF_SERVICE_API_ENDPOINTS_LIB_TIMEOUT");
        final String oAuthClientId =
                System.getenv("VERIZON_THING_SPACE_QUALITY_OF_SERVICE_API_ENDPOINTS_LIB_O_AUTH_CLIENT_ID");
        final String oAuthClientSecret =
                System.getenv("VERIZON_THING_SPACE_QUALITY_OF_SERVICE_API_ENDPOINTS_LIB_O_AUTH_CLIENT_SECRET");
        final String vZM2MToken =
                System.getenv("VERIZON_THING_SPACE_QUALITY_OF_SERVICE_API_ENDPOINTS_LIB_V_ZM_2_M_TOKEN");

        if (oAuthClientId != null && oAuthClientSecret != null) {
            builder.thingspaceOauthCredentials(new ThingspaceOauthModel
                    .Builder(oAuthClientId, oAuthClientSecret)
                    .build());
        }
        if (vZM2MToken != null) {
            builder.vzM2mSessionTokenCredentials(new VzM2mSessionTokenModel
                    .Builder(vZM2MToken)
                    .build());
        }
        if (environment != null) {
            builder.environment(Environment.fromString(environment));
        }
        if (vZM2MToken2 != null) {
            builder.vZM2MToken2(vZM2MToken2);
        }
        if (timeout != null) {
            builder.httpClientConfig(configBuilder -> configBuilder.timeout(
                    Long.parseLong(timeout)));
        }
        return builder.build();
    }

    
    /**
     * Create test configuration.
     */
    protected static VerizonThingSpaceQualityOfServiceAPIEndpointsClient createConfiguration() {
        // Set Configuration parameters for test execution
        VerizonThingSpaceQualityOfServiceAPIEndpointsClient config =
                createConfigurationFromEnvironment();
        config = config.newBuilder()
                .httpCallback(httpResponse)
                .build();

        return config;
    }
}
